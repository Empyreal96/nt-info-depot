{\rtf1\ansi {\fonttbl{\f0\fswiss Helv;}{\f1\fmodern Courier New;}} {\colortbl;} \fs20

#{\footnote Dialog_Overview}
${\footnote Dialog Overview}
K{\footnote Dialog}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Dialog Overview
\line\fs18\b0\tx2400\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx4500\tx6600\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}
The following dialog types are defined by the Microsoft Installer.\line
\par\li0{\b Dialog Types}\par\li180
{\uldb Browse}{\v DialogType_Browse}\line
{\uldb Standard}{\v DialogType_Standard}\line
\line
Some special purpose dialogs require some communication among the controls of the dialog or some other special handling. The following list contains some of the more common cases. These pages may be used to author these dialogs as well as hints how to compose some more complicated dialogs.
\par\li0{\b Special Dialogs}\par\li180
{\uldb Browse Dialog}{\v SpecialDialog_Browse}\line
{\uldb Cancel Dialog}{\v SpecialDialog_Cancel}\line
{\uldb DiskCost Dialog}{\v SpecialDialog_DiskCost}\line
{\uldb Error Dialog}{\v SpecialDialog_Error}\line
{\uldb Exit Dialog}{\v SpecialDialog_Exit}\line
{\uldb FatalError Dialog}{\v SpecialDialog_FatalError}\line
{\uldb FilesInUse Dialog}{\v SpecialDialog_FilesInUse}\line
{\uldb LicenseAgreement Dialog}{\v SpecialDialog_LicenseAgreement}\line
{\uldb Selection Dialog}{\v SpecialDialog_Selection}\line
{\uldb UserExit Dialog}{\v SpecialDialog_UserExit}\line
\line
Different attributes of a dialog can be read or set using the {\uldb Attribute}{\v MsiDialog_Attribute} method.
\par\li0{\b Dialog Attributes}\par\li180
{\uldb AddingControls}{\v DialogAttribute_AddingControls}\line
{\uldb Argument}{\v DialogAttribute_Argument}\line
{\uldb ClientRect}{\v DialogAttribute_ClientRect}\line
{\uldb ControlsCount}{\v DialogAttribute_ControlsCount}\line
{\uldb ControlsKeyInt}{\v DialogAttribute_ControlsKeyInt}\line
{\uldb ControlsKeyString}{\v DialogAttribute_ControlsKeyString}\line
{\uldb ControlsNext}{\v DialogAttribute_ControlsNext}\line
{\uldb ControlsPrev}{\v DialogAttribute_ControlsPrev}\line
{\uldb ControlsProperty}{\v DialogAttribute_ControlsProperty}\line
{\uldb CurrentControl}{\v DialogAttribute_CurrentControl}\line
{\uldb DefaultButton}{\v DialogAttribute_DefaultButton}\line
{\uldb Error}{\v DialogAttribute_Error}\line
{\uldb EventInt}{\v DialogAttribute_EventInt}\line
{\uldb EventString}{\v DialogAttribute_EventString}\line
{\uldb FullSize}{\v DialogAttribute_FullSize}\line
{\uldb HasControls}{\v DialogAttribute_HasControls}\line
{\uldb Height}{\v DialogAttribute_Height}\line
{\uldb InPlace}{\v DialogAttribute_InPlace}\line
{\uldb KeepModeless}{\v DialogAttribute_KeepModeless}\line
{\uldb KeyInt}{\v DialogAttribute_KeyInt}\line
{\uldb KeyString}{\v DialogAttribute_KeyString}\line
{\uldb Locked}{\v DialogAttribute_Locked}\line
{\uldb Modal}{\v DialogAttribute_Modal}\line
{\uldb Palette}{\v DialogAttribute_Palette}\line
{\uldb Position}{\v DialogAttribute_Position}\line
{\uldb Preview}{\v DialogAttribute_Preview}\line
{\uldb RefCount}{\v DialogAttribute_RefCount}\line
{\uldb Running}{\v DialogAttribute_Running}\line
{\uldb Showing}{\v DialogAttribute_Showing}\line
{\uldb Text}{\v DialogAttribute_Text}\line
{\uldb ToolTip}{\v DialogAttribute_ToolTip}\line
{\uldb UseCustomPalette}{\v DialogAttribute_UseCustomPalette}\line
{\uldb Width}{\v DialogAttribute_Width}\line
{\uldb WindowHandle}{\v DialogAttribute_WindowHandle}\line
{\uldb X}{\v DialogAttribute_X}\line
{\uldb Y}{\v DialogAttribute_Y}\line
\line
At the time of the creation of a dialog several attributes can be selected by setting certain Style bits.
\par\li0{\b Dialog Style Bits}\par\li180
{\uldb Browse}{\v DialogStyle_Browse} = 131072 (0x0002000)\line
{\uldb Error}{\v DialogStyle_Error} = 65536 (0x00010000)\line
{\uldb KeepModeless}{\v DialogStyle_KeepModeless} = 16 (0x00000010)\line
{\uldb Minimize}{\v DialogStyle_Minimize} = 4 (0x00000004)\line
{\uldb Modal}{\v DialogStyle_Modal} = 2 (0x00000002)\line
{\uldb TrackDiskSpace}{\v DialogStyle_TrackDiskSpace} = 32 (0x00000020)\line
{\uldb UseCustomPalette}{\v DialogStyle_UseCustomPalette} = 64 (0x000040)\line
{\uldb Visible}{\v DialogStyle_Visible} = 1 (0x00000001)\line
\page

#{\footnote Control_Overview}
${\footnote Control Overview}
K{\footnote Control; Active Control; Inert Control}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Control Overview
\line\fs18\b0\tx2400\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx4500\tx6600\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}
The following control types are defined by the Microsoft Installer. 
The controls are divided into two major groups. The {\b Active Controls} are linked to some property. These controls are authored with some property. When the control is created it shows the initial value of the property. The user can change the value of the property by interacting with the control. 
The {\b Inert Controls} are not linked to a property, they change no property value.
\par\li0{\b Inert Controls}\par\li180
{\uldb Billboard}{\v ControlType_Billboard}\line
{\uldb Bitmap}{\v ControlType_Bitmap}\line
{\uldb GroupBox}{\v ControlType_GroupBox}\line
{\uldb Icon}{\v ControlType_Icon}\line
{\uldb ProgressBar}{\v ControlType_ProgressBar}\line
{\uldb PushButton}{\v ControlType_PushButton}\line
{\uldb ScrollableText}{\v ControlType_ScrollableText}\line
{\uldb Text}{\v ControlType_Text}\line
{\uldb VolumeCostList}{\v ControlType_VolumeCostList}\line
\par\li0{\b Active Controls}\par\li180
{\uldb CheckBox}{\v ControlType_CheckBox}\line
{\uldb ComboBox}{\v ControlType_ComboBox}\line
{\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line
{\uldb DirectoryList}{\v ControlType_DirectoryList}\line
{\uldb Edit}{\v ControlType_Edit}\line
{\uldb ListBox}{\v ControlType_ListBox}\line
{\uldb ListView}{\v ControlType_ListView}\line
{\uldb MaskedEdit}{\v ControlType_MaskedEdit}\line
{\uldb PathEdit}{\v ControlType_PathEdit}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line
{\uldb SelectionTree}{\v ControlType_SelectionTree}\line
{\uldb VolumeSelectCombo}{\v ControlType_VolumeSelectCombo}\line
\line
Different attributes of a control can be read or set using the {\uldb Attribute}{\v MsiControl_Attribute} method.
\par\li0{\b Control Attributes}\par\li180
{\uldb BillboardName}{\v ControlAttribute_Billboardname}\line
{\uldb Bitmap}{\v ControlAttribute_Bitmap}\line
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb HasBorder}{\v ControlAttribute_HasBorder}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Icon}{\v ControlAttribute_Icon}\line
{\uldb Image}{\v ControlAttribute_Image}\line
{\uldb ImageHandle}{\v ControlAttribute_ImageHandle}\line
{\uldb Indirect}{\v ControlAttribute_Indirect}\line
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb Integer}{\v ControlAttribute_Integer}\line
{\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line
{\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line
{\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line
{\uldb ItemsText}{\v ControlAttribute_ItemsText}\line
{\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line
{\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line
{\uldb ItemsX}{\v ControlAttribute_ItemsX}\line
{\uldb ItemsY}{\v ControlAttribute_ItemsY}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb Limit}{\v ControlAttribute_Limit}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb Progress}{\v ControlAttribute_Progress}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
{\uldb PushLike}{\v ControlAttribute_PushLike}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Transparent}{\v ControlAttribute_Transparent}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line

\line
At the time of the creation of a control several attributes can be selected by setting certain Style bits.
\par\li0{\b Control Style Bits}\par\li180
{\uldb Bitmap}{\v ControlStyle_Bitmap} = 262144 (0x00040000)\line
{\uldb CDROMVolume}{\v ControlStyle_CDROMVolume} = 524288 (0x00080000)\line
{\uldb ComboList}{\v ControlStyle_ComboList} = 131072 (0x00020000)\line
{\uldb Enabled}{\v ControlStyle_Enabled} = 2 (0x00000002)\line
{\uldb FixedSize}{\v ControlStyle_FixedSize} = 1048576 (0x00100000)\line
{\uldb FixedVolume}{\v ControlStyle_FixedVolume} = 131072 (0x00020000)\line
{\uldb FloppyVolume}{\v ControlStyle_FloppyVolume} = 2097152 (0x00200000)\line
{\uldb HasBorder}{\v ControlStyle_HasBorder} = 16777216 (0x01000000)\line
{\uldb Icon}{\v ControlStyle_Icon} = 524288 (0x00080000)\line
{\uldb IconSize}{\v ControlStyle_IconSize} 2097152 (0x00200000),  4194304 (0x00400000)\line
{\uldb ImageHandle}{\v ControlStyle_ImageHandle} = 65536 (0x00010000)\line
{\uldb Indirect}{\v ControlStyle_Indirect} = 8 (0x00000008)\line
{\uldb Integer}{\v ControlStyle_Integer} = 16 (0x00000010)\line
{\uldb Progress95}{\v ControlStyle_Progress95} = 65536 (0x00010000)\line
{\uldb PushLike}{\v ControlStyle_PushLike} = 131072 (0x00020000)\line
{\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume} = 1048576 (0x00100000)\line
{\uldb RemoteVolume}{\v ControlStyle_RemoteVolume} = 262144 (0x00040000)\line
{\uldb RemovableVolume}{\v ControlStyle_RemovableVolume} = 65536 (0x00010000)\line
{\uldb Sorted}{\v ControlStyle_Sorted} = 65536 (0x00010000)\line
{\uldb SplitPath}{\v ControlStyle_SplitPath} =  33554432 (0x02000000)\line
{\uldb Sunken}{\v ControlStyle_Sunken} = 4 (0x00000004)\line
{\uldb Transparent}{\v ControlStyle_Transparent} = 65536 (0x00010000)\line
{\uldb Visible}{\v ControlStyle_Visible} = 1 (0x00000001)\line
\page

#{\footnote ControlEvent_Overview}
${\footnote ControlEvent Overview}
K{\footnote ControlEvent}
+{\footnote ControlEvent:Overview}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ControlEvent Overview
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Controls on the same dialog can communicate with each other by means of ControlEvents.\line
Each ControlEvent has one publisher (a control or the Handler) and can have several subscribers. The kind of ControlEvents published by a control are determined by the type of the control. On the other hand theoreticaly any control can subscribe to any ControlEvent, although many combinations are not practical. \line
A control can subscribe to a ControlEvent two ways.\line
If a control is listed in the {\uldb EventMapping table}{\v _msi_EventMapping_Table@msi.hlp} with a ControlEvent, it describes that when the ControlEvent is published, which {\uldb attribute}{\v Control_Overview} of the control has to be changed.\line
If a control is listed in the {\uldb ControlEvent table}{\v _msi_ControlEvent_Table@msi.hlp} with a ControlEvent, it means that activating the control (pushing the button) will trigger a ControlEvent with the described argument.\line
A custom control can publish its own ControlEvents and other controls (custom or regular) can subscribe to them.\line 
The publisher of a ControlEvent can hide/show or enable/disable its subscribers when its state requires it.\line
It is perfectly reasonable to have a control on a dialog that publishes some ControlEvent but have no subscribers to it. On the other hand if a control subscribes to a ControlEvent that is not published by the Handler and no publishing control is present on the same dialog, it may result in an error (especially if the control tries to trigger that event).
\par\li0{\b The Following ControlEvents Are Currently Supported}\par\li180
{\uldb ActionData}{\v ControlEvent_ActionData}\line
{\uldb ActionProgress}{\v ControlEvent_ActionProgress}\line
{\uldb ActionText}{\v ControlEvent_ActionText}\line
{\uldb AddLocal}{\v ControlEvent_AddLocal}\line
{\uldb AddSource}{\v ControlEvent_AddSource}\line
{\uldb CheckExistingPath}{\v ControlEvent_CheckExistingPath}\line
{\uldb CheckExistingTargetPath}{\v ControlEvent_CheckExistingTargetPath}\line
{\uldb CheckPath}{\v ControlEvent_CheckPath}\line
{\uldb CheckTargetPath}{\v ControlEvent_CheckTargetPath}\line
{\uldb DirectoryComboPath}{\v ControlEvent_DirectoryComboPath}\line
{\uldb DirectoryListNew}{\v ControlEvent_DirectoryListNew}\line
{\uldb DirectoryListPath}{\v ControlEvent_DirectoryListPath}\line
{\uldb DirectoryListUp}{\v ControlEvent_DirectoryListUp}\line
{\uldb EndDialog}{\v ControlEvent_EndDialog}\line
{\uldb NewDialog}{\v ControlEvent_NewDialog}\line
{\uldb Reinstall}{\v ControlEvent_Reinstall}\line
{\uldb ReinstallMode}{\v ControlEvent_ReinstallMode}\line
{\uldb Remove}{\v ControlEvent_Remove}\line
{\uldb Reset}{\v ControlEvent_Reset}\line
{\uldb SelectionAction}{\v ControlEvent_SelectionAction}\line
{\uldb SelectionBrowse}{\v ControlEvent_SelectionBrowse}\line
{\uldb SelectionDescription}{\v ControlEvent_SelectionDescription}\line
{\uldb SelectionIcon}{\v ControlEvent_SelectionIcon}\line
{\uldb SelectionPath}{\v ControlEvent_SelectionPath}\line
{\uldb SelectionPathOn}{\v ControlEvent_SelectionPathOn}\line
{\uldb SelectionSize}{\v ControlEvent_SelectionSize}\line
{\uldb SetInstallLevel}{\v ControlEvent_SetInstallLevel}\line
{\uldb SetPath}{\v ControlEvent_SetPath}\line
{\uldb SetTargetPath}{\v ControlEvent_SetTargetPath}\line
{\uldb SetProperty}{\v ControlEvent_SetProperty}\line
{\uldb SpawnDialog}{\v ControlEvent_SpawnDialog}\line
{\uldb ValidateProductID}{\v ControlEvent_ValidateProductID}\line
\page

#{\footnote ControlType_Billboard}
${\footnote ControlType Billboard}
K{\footnote Billboard}
+{\footnote ControlType:Billboard}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Billboard Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This control plays the billboards based on progress messages. The billboards are composed of individual controls that are added and later removed from the dialog.
\par\li0{\b Property}\par\li180
There can be no property associated with this control.
\par\li0{\b Valid Style Bits}\par\li180
None.
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb BillboardName}{\v ControlAttribute_BillboardName}\line
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None
\par\li0{\b Can Take Focus}\par\li180
No
\line
\par\li0{\b Windows Implementation}\par\li180
This control has no window of its own.
\page



#{\footnote ControlType_CheckBox}
${\footnote ControlType CheckBox}
K{\footnote CheckBox}
+{\footnote ControlType:CheckBox}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
CheckBox Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This control is a simple two state check box. If the {\uldb CheckBox table}{\v _msi_CheckBox_Table@msi.hlp}  exists and specifies a value for the property associated with the checkbox, the property is set to this value when the checkbox is on, to null otherwise. If there is no such table, or it does not specify a value for this property, but the associated property has an initial value, the control remembers it and initaly drawn as selected. 
When the control is unchecked, the property is set to NULL. If the check box is rechecked, it returns to its original value. If the property does not have an 
original value, it is set to "1" when the control is checked.
\par\li0{\b Property}\par\li180
The property associated with this control can be integer or string valued.
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Bitmap}{\v ControlStyle_Bitmap}\line
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb FixedSize}{\v ControlStyle_FixedSize}\line
{\uldb Icon}{\v ControlStyle_Icon}\line
{\uldb IconSize}{\v ControlStyle_IconSize}\line
{\uldb ImageHandle}{\v ControlStyle_ImageHandle}\line
{\uldb Indirect}{\v ControlStyle_Indirect}\line
{\uldb Integer}{\v ControlStyle_Integer}\line
{\uldb PushLike}{\v ControlStyle_PushLike}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb Bitmap}{\v ControlAttribute_Bitmap}\line
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Icon}{\v ControlAttribute_Icon}\line
{\uldb Indirect}{\v ControlAttribute_Indirect}\line
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb Integer}{\v ControlAttribute_Integer}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
{\uldb PushLike}{\v ControlAttribute_PushLike}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None
\par\li0{\b Can Take Focus}\par\li180
Yes\line
\par\li0{\b Windows Implementation}\par\li180
The control is created with the "BUTTON" class.\line
It has the BS_CHECKBOX, WS_TABSTOP, WS_GROUP, WS_CHILD and BS_MULTILINE styles.\line
If the {\uldb PushLike}{\v ControlStyle_PushLike} style is set it has the BS_PUSHLIKE style.\line
If the {\uldb Bitmap}{\v ControlStyle_Bitmap} style is set it has the BS_BITMAP style.\line
If the {\uldb Icon}{\v ControlStyle_Icon} style is set it has the BS_ICON style.\line

\page

#{\footnote ControlType_ComboBox}
${\footnote ControlType ComboBox}
K{\footnote ComboBox}
+{\footnote ControlType:ComboBox}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ComboBox Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This control is a dop down combo box with an edit field. It makes possible to list a predefined list of values and also allows for the user to enter some new value. 
It reads the possible values from the {\uldb ComboBox Table}{\v _ini_ComboBox_Table@msi.hlp}. If the sorted style is set, the items are displayed according the {\b Ordering} column of the table. 
If the style is not set, that column is ignored and the items are displayed in alphabetical order.\line
The length of the text that can be entered can be limited by putting a number from 0 to 2147483646 in curly braces at the beginning of the Text field in the {\uldb Control Table}{\v _msi_Control_Table@msi.hlp}. 
For example if the text field starts with \{80\}, the length of the string is limited at 80 characters. If no such limit is supplied in the table, or if 0 is specified,
the length is set to the maximum possible (2147483646 characters). A negative or non-numerical value will generate an error.\par\li0{\b Property}\par\li180
The property associated with this control can be integer or string valued.
\par\li0{\b Valid Style Bits}\par\li180
{\uldb ComboList}{\v ControlStyle_ComboList}\line
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb Indirect}{\v ControlStyle_Indirect}\line
{\uldb Integer}{\v ControlStyle_Integer}\line
{\uldb Sorted}{\v ControlStyle_Sorted}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Indirect}{\v ControlAttribute_Indirect}\line
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb Integer}{\v ControlAttribute_Integer}\line
{\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line
{\uldb ItemsText}{\v ControlAttribute_ItemsText}\line
{\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb Limit}{\v ControlAttribute_Limit}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None
\par\li0{\b Can Take Focus}\par\li180
Windows: Yes\line
\par\li0{\b Windows Implementation}\par\li180
The control is created with the "COMBOBOX" class with the CBS_AUTOHSCROLL, WS_TABSTOP, WS_GROUP, WS_CHILD styles. If the {\uldb ComboList}{\v ControlStyle_ComboList} style bit is on, it also has the CBS_DROPDOWNLIST style, otherwise it has the CBS_DROPDOWN style.\line
If the {\uldb Sorted}{\v ControlStyle_Sorted} style is set, it also has the CBS_SORT style.

\page

#{\footnote ControlType_DirectoryCombo}
${\footnote ControlType DirectoryCombo}
K{\footnote DirectoryCombo}
+{\footnote ControlType:DirectoryCombo}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
DirectoryCombo Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a special control designed for use on a browse dialog. 
It is designed to be used with a {\uldb PathEdit}{\v ControlType_PathEdit} and {\uldb DirectoryList}{\v ControlType_DirectoryList} control on the same dialog. 
It lets the user select the main part of a path (everything except the last segment). It displays the available volumes in an alphabetical order and the steps of the currently 
displayed path in a hierarchical way. If the main part of the currently selected path contains any folders that are not existant at present time, those are displayed with a different icon. 
The property associated with this control has to have an initial value, and this value has to contain at least two steps (a volume and at least one level below). 
The selection of the initial style bits determines what kind of volumes are listed.
\par\li0{\b Property}\par\li180
The property associated with this control can be only string valued. 
\par\li0{\b Valid Style Bits}\par\li180
{\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line
{\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line
{\uldb Indirect}{\v ControlStyle_Indirect}\line
{\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line
{\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line
{\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line
{\uldb SplitPath}{\v ControlStyle_SplitPath}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Indirect}{\v ControlAttribute_Indirect}\line
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
{\uldb DirectoryComboPath}{\v ControlEvent_DirectoryComboPath}
\par\li0{\b Can Take Focus}\par\li180
Windows: Yes\line
\par\li0{\b Windows Implementation}\par\li180
The control is created with the "COMBOBOX" class with the CBS_DROPDOWNLIST, CBS_OWNERDRAWFIXED, CBS_HASSTRINGS, WS_CHILD, WS_GROUP, WS_TABSTOP and WS_VSCROLL styles.\line
\page

#{\footnote ControlType_DirectoryList}
${\footnote ControlType DirectoryList}
K{\footnote DirectoryList}
+{\footnote ControlType:DirectoryList}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
DirectoryList Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a special control designed for use on a browse dialog. 
It is designed to be used with a {\uldb PathEdit}{\v ControlType_PathEdit} and {\uldb DirectoryCombo}{\v ControlType_DirectoryCombo} control on the same dialog. 
It shows the user the folders below the main part of a path (everything except the last segment). It displays the folders below the main part of the currently selected path. If the list contains 
any folders that are not existant at present time, those are displayed with a different icon. 
The property associated with this control has to have an initial value, and this value has to contain at least two steps (a volume and at least one level below).  
The primary goal of this control is to let the user select a subfolder of the current selection. With some additional buttons it also lets the user select a new phantom folder in current selection or step up one step 
in the path. If the user hits the create new folder button in folder where there is a phantom folder already, this folder is selected for editing instead of creating a second phantom folder. 
\par\li0{\b Property}\par\li180
The property associated with this control can be only string valued.
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb Indirect}{\v ControlStyle_Indirect}\line
{\uldb SplitPath}{\v ControlStyle_SplitPath}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Indirect}{\v ControlAttribute_Indirect}\line
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
{\uldb DirectoryListNew}{\v ControlEvent_DirectoryListNew}\line
{\uldb DirectoryListPath}{\v ControlEvent_DirectoryListPath}\line
{\uldb DirectoryListUp}{\v ControlEvent_DirectoryListUp}\line
\par\li0{\b Can Take Focus}\par\li180
Windows: Yes\line
\par\li0{\b Related Strings in the {\uldb UIText Table}{\v _msi_UIText_Table@msi.hlp}}\par\li180
{\b NewFolder} The default name of a newly created folder.
\par\li0{\b Windows Implementation}\par\li180
The control is crated with the WC_LISTVIEW class with the LVS_LIST, LVS_EDITLABELS, WS_VSCROLL, LVS_SHAREIMAGELISTS, LVS_AUTOARRANGE, LVS_SINGLESEL, WS_BORDER, LVS_SORTASCENDING, WS_CHILD, WS_GROUP, WS_TABSTOP styles.\line
\page

#{\footnote ControlType_Edit}
${\footnote ControlType Edit}
K{\footnote Edit}
+{\footnote ControlType:Edit}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Edit Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a regular edit field. The user can enter any string or integer. If the associated property is integer valued it accepts only integer entries (not yet implemented). 
The length of the text that can be entered can be limited by putting a number from 0 to 2147483646 in curly braces at the beginning of the Text field in the {\uldb Control Table}{\v _msi_Control_Table@msi.hlp}. 
For example if the text field starts with \{80\}, the length of the string is limited at 80 characters. If no such limit is supplied in the table, or if 0 is specified,
the length is set to the maximum possible (2147483646 characters). A negative or non-numerical value will generate an error.
\par\li0{\b Property}\par\li180
The property associated with this control can be string or integer valued.
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb Indirect}{\v ControlStyle_Indirect}\line
{\uldb Integer}{\v ControlStyle_Integer}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Indirect}{\v ControlAttribute_Indirect}\line
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb Integer}{\v ControlAttribute_Integer}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb Limit}{\v ControlAttribute_Limit}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Yes\line
\par\li0{\b Windows Implementation}\par\li180
The control is created with the "EDIT" class with the WS_BORDER, WS_CHILD, WS_TABSTOP, WS_GROUP styles.\line
\page

#{\footnote ControlType_MaskedEdit}
${\footnote ControlType MaskedEdit}
K{\footnote MaskedEdit}
+{\footnote ControlType:MaskedEdit}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
MaskedEdit Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a masked edit field control. The mask is contained in the text field of the control. 
The syntax of the mask is the following:\line
{\b #} 	digit that is not part of the checksum\line
{\b %} 	digit that is part of the checksum\line
{\b @}	randomized digit, should not appear in the visible part of the template\line
{\b =}	digit, that is displayed in the UI as a digit followed by a dash, in the property returned by the UI it is replaced by the but will be replaced by a dash during validation. There can be only one such character in the template and it must follow a  # or a %.\line
{\b ^}	letter that is forced to upper case during validation\line
{\b &}	letter, can be upper or lower case\line
{\b ?}	alpha-numeric character\line
{\b <}	left end of the visible segment of the template. This character and everything to its left is hidden in the UI. The character is replaced by a dash during validation. There should be at most one of this character in the template.\line
{\b >}	right end of the visible segment of the template. The character and everything to its right is hidden in the UI. The character is replaced by a dash during validation. There should be at most one of this character in the template.\line
Any other character is treated as a literal constant.\line
For the characters that can be edited the control creats separate edit windows. (one window for each block of contiguous characters of the same kind.) 
\par\li0{\b Property}\par\li180
The property associated with this control can be only string valued.
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb Indirect}{\v ControlStyle_Indirect}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Indirect}{\v ControlAttribute_Indirect}\line
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Yes\line
\par\li0{\b Windows Implementation}\par\li180
The control creates one parent window of the "BUTTON" class with the BS_OWNERDRAW and WS_EX_CONTROLPARENT styles. It creates several child windows to this window:  for the constant text parts it creates "STATIC" windows with the SS_LEFT and WS_CHILD styles. For the editable fields it creates an "EDIT" window with the WS_CHILD, WS_BORDER and WS_TABSTOP styles. In case of a numeric field the window also has the ES_NUMBER style.\line
\page


#{\footnote ControlType_ListBox}
${\footnote ControlType LisBox}
K{\footnote ListBox}
+{\footnote ControlType:ListBox}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ListBox Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a regular listbox control. It enables the user to select a value of a property from a pre-authored list of choices. This control supports only single select listboxes. 
The possible values are read from the {\uldb Listbox Table}{\v _msi_Listbox_Table@msi.hlp}. Note that the string displayed is not necessarily the same as the value that the user is choosing. 
If the control is created with the {\uldb Sorted}{\v ControlStyle_Sorted}, the items are listed according to the {\b Ordering} column of the table. If the style bit is not set, 
the column is ignored.
\par\li0{\b Property}\par\li180
The property associated with this control can be string or integer valued.
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb Indirect}{\v ControlStyle_Indirect}\line
{\uldb Integer}{\v ControlStyle_Integer}\line
{\uldb Sorted}{\v ControlStyle_Sorted}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Icon}{\v ControlAttribute_Icon}\line
{\uldb Indirect}{\v ControlAttribute_Indirect}\line
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb Integer}{\v ControlAttribute_Integer}\line
{\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line
{\uldb ItemsText}{\v ControlAttribute_ItemsText}\line
{\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Yes\line
\par\li0{\b Windows Implementation}\par\li180
The control is created with the "LISTBOX" class.\line
If the {\uldb Sorted}{\v ControlStyle_Sorted} style bit is on, the control is created with the LBS_NOTIFY, WS_VSCROLL, WS_BORDER styles, otherwise with the LBS_STANDARD style. It also has the WS_TABSTOP, WS_GROUP, WS_CHILD styles.
\page

#{\footnote ControlType_ListView}
${\footnote ControlType LisView}
K{\footnote ListView}
+{\footnote ControlType:ListView}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ListView Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a listview control displaying a single column of values with an icon next to each item. It enables the user to select a value of a property from a pre-authored list of choices. This control supports single select listviews only. 
The possible values are read from the {\uldb ListView Table}{\v _msi_ListView_Table@msi.hlp}. Note that the string displayed is not necessarily the same as the value that the user is choosing. 
If the control is created with the {\uldb Sorted}{\v ControlStyle_Sorted}, the items are listed according to the {\b Ordering} column of the table. If the style bit is not set, 
the column is ignored.
\par\li0{\b Property}\par\li180
The property associated with this control can be string or integer valued.
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb FixedSize}{\v ControlStyle_FixedSize}\line
{\uldb IconSize}{\v ControlStyle_IconSize}\line
{\uldb ImageHandle}{\v ControlStyle_ImageHandle}\line
{\uldb Indirect}{\v ControlStyle_Indirect}\line
{\uldb Integer}{\v ControlStyle_Integer}\line
{\uldb Sorted}{\v ControlStyle_Sorted}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line

\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Indirect}{\v ControlAttribute_Indirect}\line
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb Integer}{\v ControlAttribute_Integer}\line
{\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line
{\uldb ItemsText}{\v ControlAttribute_ItemsText}\line
{\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Windows: Yes\line
\par\li0{\b Windows Implementation}\par\li180
The control is created with the WC_LISTVIEW class with the LVS_REPORT, LVS_NOCOLUMNHEADER, WS_VSCROLL, WS_HSCROLL, LVS_SHAREIMAGELISTS, LVS_SINGLESEL, LVS_SHOWSELALWAYS, WS_BORDER, WS_TABSTOP styles.\line
If the {\uldb Sorted}{\v ControlStyle_Sorted} style bit is not on, the control also has the LVS_SORTASCENDING style.
\page


#{\footnote ControlType_PathEdit}
${\footnote ControlType PathEdit}
K{\footnote PathEdit}
+{\footnote ControlType:PathEdit}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
PathEdit Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a special control designed for use on a browse dialog. 
It is designed to be used with a {\uldb DirectoryCombo}{\v ControlType_DirectoryCombo} and {\uldb DirectoryList}{\v ControlType_DirectoryList} control on the same dialog. 
It lets the user select the path or the tail part of a path (the last segment of the path) depending on if the SplitPath style is set or not. It displays the currently selected folder name or the entire path in an edit field. 
The property associated with this control has to have an initial value, and if the SplitPath style is on this value has to contain at least two steps (a volume and at least one level below). 
This control also supports entering a full path in both modes. It first checks if the string enters is a valid path. If it is, it interprets the string as such. If it is not a valid path and the SplitPath style is on, it interprets it as the name of the folder to be selected. 
One can also enter a UNC path to a drive that has no drive letter associated with it.
This control does not let the focus leave if the selection is not valid.
\par\li0{\b Property}\par\li180
The property associated with this control can be only string valued. 
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb Indirect}{\v ControlStyle_Indirect}\line
{\uldb SplitPath}{\v ControlStyle_SplitPath}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Indirect}{\v ControlAttribute_Indirect}\line
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Windows: Yes\line
\par\li0{\b Windows Implementation}\par\li180
The control is derived from the {\uldb Edit}{\v ControlType_Edit} control.\line
\page

#{\footnote ControlType_RadioButtonGroup}
${\footnote ControlType RadioButtonGroup}
K{\footnote RadioButtonGroup}
+{\footnote ControlType:RadioButtonGroup}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
RadioButtonGroup Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This control is a group of radio buttons. It enables the user to select a value of a property from a pre-authored list of choices.  
The possible values are read from the {\uldb RadioButton Table}{\v _msi_RadioButton_Table@msi.hlp}. Note that the string displayed is not necessarily the same as the value that the user is choosing. 
The implementation treats the whole group as one control, therefore it is not possible to hide or disable individual buttons within the group. Similarly all the buttons have to be of the same style, i.e. either all of them have text or all of them have bitmaps, etc. 
The position of the buttons is authored relative to the group. This way the entire group can be moved by changeing only the coordinates of the group without changeing the individual buttons. 
At creation the control verifies that the individual buttons do not extend beyond the boundaries of the group.\line
If the {\uldb Bitmap}{\v ControlStyle_Bitmap} or the {\uldb Icon}{\v ControlStyle_Icon} style bit is set, the corresponding text entry in the {\ulbd RadioButton Table}{\v _msi_RadioButton_Table@msi.hlp} is taken as a foreign key to the {\ulbd Binary Table}{\v _msi_Binary_Table@msi.hlp} that specifies the binary data needed to create the picture on the individual buttons.\line
This means that the buttons can not have both a picture and a text.\line
Because of the way Windows draws the frame, there is a gap between the top of the control's window and the visible frame, even when there is no caption.
\par\li0{\b Property}\par\li180
The property associated with this control can be string or integer valued.
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Bitmap}{\v ControlStyle_Bitmap}\line
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb FixedSize}{\v ControlStyle_FixedSize}\line
{\uldb HasBorder}{\v ControlStyle_HasBorder}\line
{\uldb Icon}{\v ControlStyle_Icon}\line
{\uldb IconSize}{\v ControlStyle_IconSize}\line
{\uldb ImageHandle}{\v ControlStyle_ImageHandle}\line
{\uldb Indirect}{\v ControlStyle_Indirect}\line
{\uldb Integer}{\v ControlStyle_Integer}\line
{\uldb PushLike}{\v ControlStyle_PushLike}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb Bitmap}{\v ControlAttribute_Bitmap}\line
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb HasBorder}{\v ControlAttribute_HasBorder}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Icon}{\v ControlAttribute_Icon}\line
{\uldb Indirect}{\v ControlAttribute_Indirect}\line
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb Integer}{\v ControlAttribute_Integer}\line
{\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line
{\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line
{\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line
{\uldb ItemsText}{\v ControlAttribute_ItemsText}\line
{\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line
{\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line
{\uldb ItemsX}{\v ControlAttribute_ItemsX}\line
{\uldb ItemsY}{\v ControlAttribute_ItemsY}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
{\uldb PushLike}{\v ControlAttribute_PushLike}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Yes\line
\par\li0{\b Windows Implementation}\par\li180
The group is created using the "BUTTON" class. If the {\uldb HasBorder}{\v ControlStyle_HasBorder} style is set, it has the BS_GROUPBOX style, otherwise it has the BS_OWNERDRAW style. \line
The individual buttons are created with the "BUTTON" class.\line
It has the BS_RADIOBUTTON, WS_CHILD, WS_GROUP, WS_TABSTOP, WS_EX_CONTROLPARENT and BS_MULTILINE styles.\line
If the {\uldb PushLike}{\v ControlStyle_PushLike} style is set they have the BS_PUSHLIKE style.\line
If the {\uldb Bitmap}{\v ControlStyle_Bitmap} style is set they have the BS_BITMAP style.\line
If the {\uldb Icon}{\v ControlStyle_Icon} style is set they have the BS_ICON style.\line
\page

#{\footnote ControlType_VolumeSelectCombo}
${\footnote ControlType VolumeSelectCombo}
K{\footnote VolumeSelectCombo}
+{\footnote ControlType:VolumeSelectCombo}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
VolumeSelectCombo Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a special control designed to a volume from a list of volumes. It lists the volumes in alphabetical order. The types of controls displayed is determined by the style bits of the control. 
\par\li0{\b Property}\par\li180
The property associated with this control can be only string valued. 
\par\li0{\b Valid Style Bits}\par\li180
{\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line
{\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line
{\uldb Indirect}{\v ControlStyle_Indirect}\line
{\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line
{\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line
{\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Indirect}{\v ControlAttribute_Indirect}\line
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Windows: Yes\line
\par\li0{\b Windows Implementation}\par\li180
The control is created as a"COMBOBOX" with the CBS_DROPDOWNLIST, CBS_OWNERDRAWFIXED, CBS_HASSTRINGS, WS_VSCROLL, WS_CHILD, WS_GROUP, WS_TABSTOP and CBS_SORT styles.\line
\page

#{\footnote ControlType_Bitmap}
${\footnote ControlType Bitmap}
K{\footnote Bitmap}
+{\footnote ControlType:Bitmap}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Bitmap Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This control simply displays a static picture of a bitmap.
\par\li0{\b Property}\par\li180
There can be no property associated with this control. 
\par\li0{\b Valid Style Bits}\par\li180
{\uldb FixedSize}{\v ControlStyle_FixedSize}\line
{\uldb ImageHandle}{\v ControlStyle_ImageHandle}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Image}{\v ControlAttribute_Image}\line
{\uldb ImageHandle}{\v ControlAttribute_ImageHandle}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Windows: No\line
Maciontosh: No
\par\li0{\b Windows Implementation}\par\li180
On NT3.51 the control is created as a "BUTTON" with the BS_OWNERDRAW style, on Win95 and NT4 it is created as a "STATIC" with the SS_BITMAP and SS_CENTERIMAGE styles. In both cases it also has the WS_CHILD and WS_GROUP styles.\line
\page

#{\footnote ControlType_Icon}
${\footnote ControlType Icon}
K{\footnote Icon}
+{\footnote ControlType:Icon}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Icon Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This control simply displays a static picture of an icon. The background of the image is transparent.\line
An icon file can contain different size images of the same icon. If the {\uldb IconSize}{\v ControlStyle_Icon} bits are set, the first image of the specified size is loaded. If no size is specified, the first image is loaded.\line
If the {\uldb IconSize}{\v ControlStyle_Icon} bits are not set the {\uldb FixedSize}{\v ControlStyle_FixedSize} bit is ignored and the image is stretched to fit the control rectangle.\line
If both the IconSize bits and the FixedSize bit are set and the control is larger than the icon, the image is centered in the control. If the image is larger than the control it is not chopped (unlike in the {\uldb Bitmap}{\v ControlType_Bitmap} control) but shrunk to fit the control.
\par\li0{\b Property}\par\li180
There can be no property associated with this control. 
\par\li0{\b Valid Style Bits}\par\li180
{\uldb FixedSize}{\v ControlStyle_FixedSize}\line
{\uldb IconSize}{\v ControlStyle_IconSize}\line
{\uldb ImageHandle}{\v ControlStyle_ImageHandle}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Image}{\v ControlAttribute_Image}\line
{\uldb ImageHandle}{\v ControlAttribute_ImageHandle}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Windows: No\line
Maciontosh: No
\par\li0{\b Windows Implementation}\par\li180
On NT3.51 the control is created as a "BUTTON" with the BS_OWNERDRAW style, on Win95 and NT4 it is created as a "STATIC" with the SS_ICON and SS_CENTERIMAGE styles. In both cases it also has the WS_CHILD and WS_GROUP styles.\line
\page


#{\footnote ControlType_GroupBox}
${\footnote ControlType GroupBox}
K{\footnote GroupBox}
+{\footnote ControlType:GroupBox}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
GroupBox Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This control displays a rectangle, possibly with some caption. It only serves as a visual element on the dialog to group other controls together.\line
Because of the way Windows draws this control, there is a gap between the top of the control's window and the visible frame, even when there is no caption.
\par\li0{\b Property}\par\li180
There can be no property associated with this control. 
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Windows: No\line
Maciontosh: No
\par\li0{\b Windows Implementation}\par\li180
The control is created as a "BUTTON" with the BS_GROUPBOX, WS_CHILD, WS_GROUP styles.\line
\page

#{\footnote ControlType_ProgressBar}
${\footnote ControlType ProgressBar}
K{\footnote ProgressBar}
+{\footnote ControlType:ProgressBar}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ProgressBar Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This control displays a rectangle filling up as it receives progress messages. Typically should subscribe to the {\uldb ActionProgress}{\v ControlEvent_ActionProgress} control event or a control event whose name matches the name of the action whose progress is gauged. 
\par\li0{\b Property}\par\li180
There can be no property associated with this control. 
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Progress95}{\v ControlStyle_Progress95}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb Progress}{\v ControlAttribute_Progress}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Windows: No\line
Maciontosh: No
\par\li0{\b Windows Implementation}\par\li180
The control is created as a PROGRESS_CLASS. It also has the WS_CHILD and WS_GROUP styles. 
\page

#{\footnote ControlType_PushButton}
${\footnote ControlType PushButton}
K{\footnote PushButton}
+{\footnote ControlType:PushButton}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
PushButton Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This control displays a basic push button.\line
If the {\uldb Bitmap}{\v ControlStyle_Bitmap} or the {\uldb Icon}{\v ControlStyle_Icon} style bit is set, the corresponding text entry in the {\ulbd Control Table}{\v _msi_Control_Table@msi.hlp} is taken as a foreign key to the {\ulbd Binary Table}{\v _msi_Binary_Table@msi.hlp} that specifies the binary data needed to create the picture.\line
This means that the button can not have both a picture and a text.
\par\li0{\b Property}\par\li180
There can be no property associated with this control. 
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Bitmap}{\v ControlStyle_Bitmap}\line
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb FixedSize}{\v ControlStyle_FixedSize}\line
{\uldb Icon}{\v ControlStyle_Icon}\line
{\uldb IconSize}{\v ControlStyle_IconSize}\line
{\uldb ImageHandle}{\v ControlStyle_ImageHandle}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb Bitmap}{\v ControlAttribute_Bitmap}\line
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Icon}{\v ControlAttribute_Icon}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Windows: Yes\line
Maciontosh: No
\par\li0{\b Windows Implementation}\par\li180
The control is created with the "BUTTON" class.\line
It has the BS_MULTILINE, WS_CHILD, WS_TABSTOP, WS_GROUP styles.\line
If the {\uldb Bitmap}{\v ControlStyle_Bitmap} style is set it has the BS_BITMAP style.\line
If the {\uldb Icon}{\v ControlStyle_Icon} style is set it has the BS_ICON style.\line
\page

#{\footnote ControlType_Text}
${\footnote ControlType Text}
K{\footnote Text}
+{\footnote ControlType:Text}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Text Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This control displays a static text. The text may use a predefined style. This is done by putting the name of the style in the form \{\\style\} at the start of the string, where style is one of the keys in the {\uldb TextStyle Table}{\v _msi_TextStyle_Table@msi.hlp}. A base text style can be assigned to the control by supplying \{&style\} at the very begining of a the text string. This style is used whenever no other style is defined by the string.\line
\par\li0{\b Property}\par\li180
There can be no property associated with this control. 
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Transparent}{\v ControlStyle_Transparent}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Default}{\v ControlAttribute_Default}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Transparent}{\v ControlAttribute_Transparent}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Windows: No\line
Maciontosh: No
\par\li0{\b Windows Implementation}\par\li180
The control is created with the "STATIC" class and with the SS_LEFT, WS_CHILD, WS_GROUP styles.\line
If the {\uldb Transparent}{\v ControlStyle_Transparent} style is set the control also has the WS_EX_TRANSPARENT style.
\page


#{\footnote ControlType_ScrollableText}
${\footnote ControlType ScrollableText}
K{\footnote ScrollableText}
+{\footnote ControlType:ScrollableText}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ScrollableText Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This control displays a long text that can not fit on a page normally. A typical application for this control is displaying the license agreement.\line
\par\li0{\b Property}\par\li180
There can be no property associated with this control. 
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.
\par\li0{\b Can Take Focus}\par\li180
Windows: No\line
Maciontosh: No
\par\li0{\b Windows Implementation}\par\li180
The control is created using the "RICHEDIT" class with the ES_MULTILINE, WS_HSCROLL, WS_VSCROLL, ES_READONLY,  WS_TABSTOP, ES_AUTOHSCROLL, ES_AUTOVSCROLL, WS_CHILD and WS_GROUP styles.
\line
\page

#{\footnote ControlType_SelectionTree}
${\footnote ControlType SelectionTree}
K{\footnote SelectionTree}
+{\footnote ControlType:SelectionTree}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SelectionTree Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This special control is designed to present some of the information in the {\uldb Feature Table}{\v _msi_Feature_Table@msi.hlp} to the user and allow the user to change the selection state of some items.\line
\par\li0{\b Property}\par\li180
String valued, the name of the directory property that will be set by the browse dialog. 
\par\li0{\b Valid Style Bits}\par\li180
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb Indirect}{\v ControlStyle_Indirect}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb Indirect}{\v ControlAttribute_Indirect}\line
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\line
\par\li0{\b Control Events Published}\par\li180
{\uldb SelectionAction}{\v ControlEvent_SelectionAction}\line
{\uldb SelectionBrowse}{\v ControlEvent_SelectionBrowse}\line
{\uldb SelectionDescription}{\v ControlEvent_SelectionDescription}\line
{\uldb SelectionIcon}{\v ControlEvent_SelectionIcon}\line
{\uldb SelectionPath}{\v ControlEvent_SelectionPath}\line
{\uldb SelectionPathOn}{\v ControlEvent_SelectionPathOn}\line
{\uldb SelectionSize}{\v ControlEvent_SelectionSize}\line
\par\li0{\b Can Take Focus}\par\li180
Windows: Yes\line
Maciontosh: No
\par\li0{\b Related Strings in the {\uldb UIText Table}{\v _msi_UIText_Table@msi.hlp}}\par\li180
{\b AbsentPath} The path displayed for an item in the absent state.   \line
The following six strings are used to display the number of children selected and the size associated with the highlighted item.\line
{\b SelChildCostPos}\line
{\b SelChildCostNeg}\line
{\b SelParentCostPosPos}\line
{\b SelParentCostPosNeg}\line
{\b SelParentCostNegPos}\line
{\b SelParentCostNegNeg}\line
The following strings are used to display the available selection options for an item in a popup menu.\line
{\b MenuAbsent}\line
{\b MenuLocal}\line
{\b MenuCD}\line
{\b MenuNetwork}\line
The following strings are used to explain the present selection in the {\uldb SelectionDescription}{\v ControlEvent_SelectionDescription} control event.\line
{\b SelAbsentAbsent}\line
{\b SelAbsentLocal}\line
{\b SelAbsentCD}\line
{\b SelAbsentNetwork}\line
{\b SelLocalAbsent}\line
{\b SelLocalLocal}\line
{\b SelLocalCD}\line
{\b SelLocalNetwork}\line
{\b SelCDAbsent}\line
{\b SelNetworkAbsent}\line
{\b SelCDLocal}\line
{\b SelNetworkLocal}\line
{\b SelCDCD}\line
{\b SelNetworkNetwork}\line
The following four localized strings are used in formatting the size of a file.\line
{\b Bytes}\line
{\b KB}\line
{\b MB}\line
{\b GB}\line

\par\li0{\b Windows Implementation}\par\li180
This control is created with the WC_TREEVIEW class and the WS_BORDER, TVS_HASLINES, TVS_HASBUTTONS, TVS_LINESATROOT, TVS_DISABLEDRAGDROP, TVS_SHOWSELALWAYS, WS_CHILD, WS_TABSTOP, WS_GROUP	styles.
\par\li0{\b Note}\par\li180
The selection tree gets populated only if the DirectoryInitialize, CostInitialize and CostFinalize actions were all previously called.
\line
\page

#{\footnote ControlType_VolumeCostList}
${\footnote ControlType VolumeCostList}
K{\footnote VolumeCostList}
+{\footnote ControlType:VolumeCostList}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
VolumeCostList Control
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This special control is designed to present some information to the user about the cost associated with
 the selection on the different volumes. The control shows all the volumes in the
 {\uldb VolumeCost}{\v MsiSelectionManager_GetVolumeCostTable} table, plus all volumes that are of the
 types specified in the attribute bits. If the required disk space exceeds the available amount on some
 drive, the volume is highlighted in the table. Clicking on a column header sorts the volumes according
 to the chosen column.\line
\par\li0{\b Property}\par\li180
There can be no property associated with this control. 
\par\li0{\b Valid Style Bits}\par\li180
{\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line
{\uldb Enabled}{\v ControlStyle_Enabled}\line
{\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line
{\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line
{\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line
{\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line
{\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line
{\uldb Sunken}{\v ControlStyle_Sunken}\line
{\uldb Visible}{\v ControlStyle_Visible}\line
\par\li0{\b Valid Control Attributes}\par\li180
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Help}{\v ControlAttribute_Help}\line
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb RefCount}{\v ControlAttribute_RefCount}\line
{\uldb Sunken}{\v ControlAttribute_Sunken}\line
{\uldb Text}{\v ControlAttribute_Text}\line
{\uldb Visible}{\v ControlAttribute_Visible}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb WindowHandle}{\v ControlAttribute_WindowHandle}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\par\li0{\b Control Events Published}\par\li180
None.\line
\par\li0{\b Can Take Focus}\par\li180
Windows: No\line
Maciontosh: No
\par\li0{\b Related Strings in the {\uldb UIText Table}{\v _msi_UIText_Table@msi.hlp}}\par\li180
The strings for the column headings in the table:\line
{\b VolumeCostAvailable}\line
{\b VolumeCostDifference}\line
{\b VolumeCostRequired}\line
{\b VolumeCostSize}\line
{\b VolumeCostVolume}\line
The following four localized strings are used in formatting the size of a file.\line
{\b Bytes}\line
{\b KB}\line
{\b MB}\line
{\b GB}\line

\par\li0{\b Windows Implementation}\par\li180
This control is created with the WC_LISTVIEW class and the LVS_REPORT, WS_VSCROLL, WS_HSCROLL, LVS_SHAREIMAGELISTS, LVS_AUTOARRANGE, LVS_SINGLESEL, WS_BORDER, WS_CHILD, WS_TABSTOP, WS_GROUP styles.
\line
\page


#{\footnote ControlStyle_Bitmap}
${\footnote ControlStyle Bitmap}
K{\footnote Bitmap}
+{\footnote ControlStyle:Bitmap}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Bitmap Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the controls text is replaced by a bitmap. The text entry in the database that normally would specify the text of the control is used as a foreign key to the {\uldb Binary Table}{\v _msi_Binary_Table@msi.hlp} to point to the binary data needed for the picture. Therefore such a control has no text associated with it, only the picture. This style bit should not be set at the same time as the {\uldb Icon}{\v ControlStyle_Icon}!
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb CheckBox}{\v ControlType_CheckBox}\line
{\uldb PushButton}{\v ControlType_PushButton}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}
\par\li0{\b Associated Control Attribute}\par\li180
{\uldb Bitmap}{\v ControlAttribute_Bitmap}\line
\par\li0{\b Numeric Value}\par\li180
0x00040000 = 262144\line
\page

#{\footnote ControlStyle_Icon}
${\footnote ControlStyle Icon}
K{\footnote Icon}
+{\footnote ControlStyle:Icon}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Icon Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the controls text is replaced by a icon. The text entry in the database that normally would specify the text of the control is used as a foreign key to the {\uldb Binary Table}{\v _msi_Binary_Table@msi.hlp} to point to the binary data needed for the picture. Therefore such a control has no text associated with it, only the picture. This style bit should not be set at the same time as the {\uldb Bitmap}{\v ControlStyle_Bitmap}!
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb CheckBox}{\v ControlType_CheckBox}\line
{\uldb PushButton}{\v ControlType_PushButton}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}
\par\li0{\b Associated Control Attribute}\par\li180
{\uldb Icon}{\v ControlAttribute_Icon}\line
\par\li0{\b Numeric Value}\par\li180
0x00080000 = 524288\line
\page

#{\footnote ControlStyle_IconSize}
${\footnote ControlStyle IconSize}
K{\footnote IconSize}
+{\footnote ControlStyle:IconSize}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
IconSize Control Stylebits
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
An icon file can hold several different size images of the same icon. These two bits determine which size image of the icon is loaded. If neither bit is set, the first image is loaded. If only the lower bit is set, the first 16x16 image is loaded. If only the higher bit is set, the firts 32x32 image is loaded. If both bits are set, the first 48x48 image is loaded.\line
If the {\uldb FixedSize}{\v ControlStyle_FixedSize} bit is set, these bits determine the size of the image displayed.
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb CheckBox}{\v ControlType_CheckBox}\line
{\uldb Icon}{\v ControlType_Icon}\line
{\uldb PushButton}{\v ControlType_PushButton}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}
\par\li0{\b Associated Control Attribute}\par\li180
None\line
\par\li0{\b Numeric Value}\par\li180
0x00200000 = 2097152\line
0x00400000 = 4194304\line
\page

#{\footnote ControlStyle_ImageHandle}
${\footnote ControlStyle ImageHandle}
K{\footnote ImageHandle}
+{\footnote ControlStyle:ImageHandle}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ImageHandle Control Stylebits
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Controls that require an image normaly specify the name of the binary information in the text field and the binary data is looked up from the Binary table using this key. If this style bit is set, it means that the binary information is NOT comming from the Binary table, but instead the text field represents the handle to a bitmap or icon (in a string format) and this already loaded icon or bitmap must be used by the control. 
Obviously these handles can not be authored previously, the actual value of the handle in the table has to be set by some action that is performed prior to creating the control. 
A possible use is to have an action to find all the running applications and put their names and icons into the {\uldb ListView Table}{\v _msi_ListView_Table@msi.hlp}, and the control can display these names and icons, 
Even if this bit is on, other stylebits governing the size and stretching of the image are still observed. I.e. if an action puts a handle of an image in the table, but other stylebits describe a different size, the image will be still stretched. 
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb Bitmap}{\v ControlType_Bitmap}\line
{\uldb CheckBox}{\v ControlType_CheckBox}\line
{\uldb Icon}{\v ControlType_Icon}\line
{\uldb ListView}{\v ControlType_ListView}\line
{\uldb PushButton}{\v ControlType_PushButton}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}
\par\li0{\b Associated Control Attribute}\par\li180
None\line
\par\li0{\b Numeric Value}\par\li180
0x00010000 = 65536\line
\page


#{\footnote ControlStyle_CDROMVolume}
${\footnote ControlStyle CDROMVolume}
K{\footnote CDROMVolume}
+{\footnote ControlStyle:CDROMVolume}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
CDROMVolume Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the control lists CDROM volumes in its list of volumes.
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line
{\uldb VolumeCostList}{\v ControlType_VolumeCostList}\line
{\uldb VolumeSelectCombo}{\v ControlType_VolumeSelectCombo}\line
\par\li0{\b Associated Control Attribute}\par\li180
None\line
\par\li0{\b Related Control Stylebits}\par\li180
{\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line
{\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line
{\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line
{\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line
{\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line
\par\li0{\b Numeric Value}\par\li180
0x00080000 = 524288\line
\page

#{\footnote ControlStyle_FixedVolume}
${\footnote ControlStyle FixedVolume}
K{\footnote FixedVolume}
+{\footnote ControlStyle:FixedVolume}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
FixedVolume Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the control lists fixed internal harddrives in its list of volumes.
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line
{\uldb VolumeCostList}{\v ControlType_VolumeCostList}\line
{\uldb VolumeSelectCombo}{\v ControlType_VolumeSelectCombo}\line
\par\li0{\b Associated Control Attribute}\par\li180
None\line
\par\li0{\b Related Control Stylebits}\par\li180
{\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line
{\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line
{\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line
{\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line
{\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line
\par\li0{\b Numeric Value}\par\li180
0x00020000 = 131072\line
\page

#{\footnote ControlStyle_FloppyVolume}
${\footnote ControlStyle FloppyVolume}
K{\footnote FloppyVolume}
+{\footnote ControlStyle:FloppyVolume}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
FloppyVolume Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the control lists floppy drives in its list of volumes.
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line
{\uldb VolumeCostList}{\v ControlType_VolumeCostList}\line
{\uldb VolumeSelectCombo}{\v ControlType_VolumeSelectCombo}\line
\par\li0{\b Associated Control Attribute}\par\li180
None\line
\par\li0{\b Related Control Stylebits}\par\li180
{\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line
{\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line
{\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line
{\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line
{\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line
\par\li0{\b Numeric Value}\par\li180
0x00200000 = 2097152\line
\page

#{\footnote ControlStyle_RAMDiskVolume}
${\footnote ControlStyle RAMDiskVolume}
K{\footnote RAMDiskVolume}
+{\footnote ControlStyle:RAMDiskVolume}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
RAMDiskVolume Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the control lists RAM disks in its list of volumes.
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line
{\uldb VolumeCostList}{\v ControlType_VolumeCostList}\line
{\uldb VolumeSelectCombo}{\v ControlType_VolumeSelectCombo}\line
\par\li0{\b Associated Control Attribute}\par\li180
None\line
\par\li0{\b Related Control Stylebits}\par\li180
{\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line
{\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line
{\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line
{\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line
{\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line
\par\li0{\b Numeric Value}\par\li180
0x00100000 = 1048567\line
\page

#{\footnote ControlStyle_RemoteVolume}
${\footnote ControlStyle RemoteVolume}
K{\footnote RemoteVolume}
+{\footnote ControlStyle:RemoteVolume}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
RemoteVolume Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the control lists remote volumes in its list of volumes.
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line
{\uldb VolumeCostList}{\v ControlType_VolumeCostList}\line
{\uldb VolumeSelectCombo}{\v ControlType_VolumeSelectCombo}\line
\par\li0{\b Associated Control Attribute}\par\li180
None\line
\par\li0{\b Related Control Stylebits}\par\li180
{\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line
{\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line
{\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line
{\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line
{\uldb RemovableVolume}{\v ControlStyle_RemovableVolume}\line
\par\li0{\b Numeric Value}\par\li180
0x00040000 = 262144\line
\page

#{\footnote ControlStyle_RemovableVolume}
${\footnote ControlStyle RemovableVolume}
K{\footnote RemovableVolume}
+{\footnote ControlStyle:RemovableVolume}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
RemovableVolume Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the control lists removable drives in its list of volumes.
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line
{\uldb VolumeCostList}{\v ControlType_VolumeCostList}\line
{\uldb VolumeSelectCombo}{\v ControlType_VolumeSelectCombo}\line
\par\li0{\b Associated Control Attribute}\par\li180
None\line
\par\li0{\b Related Control Stylebits}\par\li180
{\uldb CDROMVolume}{\v ControlStyle_CDROMVolume}\line
{\uldb FixedVolume}{\v ControlStyle_FixedVolume}\line
{\uldb FloppyVolume}{\v ControlStyle_FloppyVolume}\line
{\uldb RAMDiskVolume}{\v ControlStyle_RAMDiskVolume}\line
{\uldb RemoteVolume}{\v ControlStyle_RemoteVolume}\line
\par\li0{\b Numeric Value}\par\li180
0x00010000 = 65536\line
\page

#{\footnote ControlStyle_Enabled}
${\footnote ControlStyle Enabled}
K{\footnote Enabled}
+{\footnote ControlStyle:Enabled}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Enabled Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the control control is created enabled, otherwise disabled. The enabled/disabled state of the control can be changed later through the associated attribute or by the publisher of some event that the given control subscribes to. 
\par\li0{\b Control Types That Can Have This Style}\par\li180
All controls. On some controls (like Bitmaps and Icons) this bit makes no visible difference.
\par\li0{\b Associated Control Attribute}\par\li180
{\uldb Enabled}{\v ControlAttribute_Enabled}\line
\par\li0{\b Numeric Value}\par\li180
0x00000002 = 2\line
\page

#{\footnote ControlStyle_FixedSize}
${\footnote ControlStyle FixedSize}
K{\footnote FixedSize}
+{\footnote ControlStyle:FixedSize}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
FixedSize Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the picture on the button or a bitmap or an icon control is displayed in its "natural size". If the picture is smaller than the control, it is centered, if the picture is larger, it is chopped in case of bitmaps but it is shrunk in case of icons. If the bit is not set, the picture is stretched to fit the button or control rectangle. \line
On CheckBoxes, PushButtons and RadioButtonGroups this bit has any effect only if the {\uldb Bitmap}{\v ControlStyle_Bitmap} or the {\uldb Icon}{\v ControlStyle_Icon} is set.\line
On Icon controls and buttons associated with icons this bit is ignored if the {\uldb IconSize}{\v ControlStyle_IconSize} bits are not set!
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb Bitmap}{\v ControlType_Bitmap}\line
{\uldb CheckBox}{\v ControlType_CheckBox}\line
{\uldb Icon}{\v ControlType_Icon}\line
{\uldb PushButton}{\v ControlType_PushButton}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}
\par\li0{\b Associated Control Attribute}\par\li180
None.\line
\par\li0{\b Numeric Value}\par\li180
0x00100000 = 1048576\line
\page

#{\footnote ControlStyle_HasBorder}
${\footnote ControlStyle HasBorder}
K{\footnote HasBorder}
+{\footnote ControlStyle:HasBorder}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
HasBorder Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} has a border displayed around it. If the style bit is not set, the border is not displayed and no text is displayed on the group either!
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line
\par\li0{\b Associated Control Attribute}\par\li180
{\uldb HasBorder}{\v ControlAttribute_HasBorder}.\line
\par\li0{\b Numeric Value}\par\li180
0x01000000 = 16777216\line
\page

#{\footnote ControlStyle_Indirect}
${\footnote ControlStyle Indirect}
K{\footnote Indirect}
+{\footnote ControlStyle:Indirect}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Indirect Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set on an active control, it means that the control changes the value of the property whose name is the value of the named property. Otherwise the named property is changed.
\par\li0{\b Control Types That Can Have This Style}\par\li180
All active controls\line
\par\li0{\b Associated Control Attribute}\par\li180
{\uldb Indirect}{\v ControlAttribute_Indirect}.\line
\par\li0{\b Numeric Value}\par\li180
0x00000008 = 8\line
\page

#{\footnote ControlStyle_SplitPath}
${\footnote ControlStyle SplitPath}
K{\footnote SplitPath}
+{\footnote ControlStyle:SplitPath}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SplitPath Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the control splits the path into tail and body. The PathEdit displays only the tail of the path, the DirectoryCombo and DirectoryList controls show only the body of the path. If the bit is not set, the controls work on the entire path.
\par\li0
{\b Control Types That Can Have This Style}\par\li180
{\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}\line
{\uldb DirectoryList}{\v ControlType_DirectoryList}\line
{\uldb PathEdit}{\v ControlType_PathEdit}\line
\par\li0{\b Associated Control Attribute}\par\li180
None\line
\par\li0{\b Numeric Value}\par\li180
0x02000000 = 33554432\line
\page


#{\footnote ControlStyle_Integer}
${\footnote ControlStyle Integer}
K{\footnote Integer}
+{\footnote ControlStyle:Integer}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Integer Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set on an active control, the associated property is integer valued. Otherwise the property is string valued.
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb CheckBox}{\v ControlType_CheckBox}\line
{\uldb ComboBox}{\v ControlType_ComboBox}\line
{\uldb Edit}{\v ControlType_Edit}\line
{\uldb ListBox}{\v ControlType_ListBox}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line
\par\li0{\b Associated Control Attribute}\par\li180
{\uldb Integer}{\v ControlAttribute_Integer}.\line
\par\li0{\b Numeric Value}\par\li180
0x00000010 = 16\line
\page

#{\footnote ControlStyle_Progress95}
${\footnote ControlStyle Progress95}
K{\footnote Progress95}
+{\footnote ControlStyle:Progress95}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Progress95 Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set on a progress bar, it is drawn with small disjoint rectangles in Windows 95 style. Otherwise the bar is drawn continuously.
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb ProgressBar}{\v ControlType_ProgressBar}\line
\par\li0{\b Associated Control Attribute}\par\li180
None.\line
\par\li0{\b Numeric Value}\par\li180
0x00010000 = 65536\line
\page

#{\footnote ControlStyle_ComboList}
${\footnote ControlStyle ComboList}
K{\footnote ComboList}
+{\footnote ControlStyle:ComboList}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ComboList Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set on a combobox, the edit field is replaced by a static text field, therefore the user can not enter a new value, can choose only one of the predefined values. Otherwise the combobox is drawn with an edit field.
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb ComboBox}{\v ControlType_ComboBox}\line
\par\li0{\b Associated Control Attribute}\par\li180
None.\line
\par\li0{\b Numeric Value}\par\li180
0x00020000 = 131072\line
\page


#{\footnote ControlStyle_PushLike}
${\footnote ControlStyle PushLike}
K{\footnote PushLike}
+{\footnote ControlStyle:PushLike}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
PushLike Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set on a checkbox or a radiobuttongroup the button is drawn with the visual appearance of a push button, but it's logic stays the same. If the bit is not set the controls are drawn in their usual visual style.
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb CheckBox}{\v ControlType_CheckBox}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line
\par\li0{\b Associated Control Attribute}\par\li180
{\uldb PushLike}{\v ControlAttribute_PushLike}.\line
\par\li0{\b Numeric Value}\par\li180
0x00020000 = 131072\line
\page

#{\footnote ControlStyle_Sorted}
${\footnote ControlStyle Sorted}
K{\footnote Sorted}
+{\footnote ControlStyle:Sorted}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Sorted Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set on a listbox or combobox, the items in the list are displayed in the order defined by the {\b Ordering} column of the corresponding table. If the bit is not set, the items are displayed in alphabetical order.
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb ComboBox}{\v ControlType_ComboBox}\line
{\uldb ListBox}{\v ControlType_ListBox}\line
{\uldb ListView}{\v ControlType_ListView}\line
\par\li0{\b Associated Control Attribute}\par\li180
None.\line
\par\li0{\b Numeric Value}\par\li180
0x00010000 = 65536\line
\page


#{\footnote ControlStyle_Sunken}
${\footnote ControlStyle Sunken}
K{\footnote Sunken}
+{\footnote ControlStyle:Sunken}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Sunken Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set on a control, it is displayed with a sunken, 3D look, if that is available on the system. Otherwise the control is displayed in its default visual style. The effect of this style bit is different on different versions of Windows. On most controls it has no visible effect.
\par\li0{\b Control Types That Can Have This Style}\par\li180
All controls
\par\li0{\b Associated Control Attribute}\par\li180
{\uldb Sunken}{\v ControlAttribute_Sunken}.\line
\par\li0{\b Numeric Value}\par\li180
0x00000004 = 4\line
\page

#{\footnote ControlStyle_Transparent}
${\footnote ControlStyle Transparent}
K{\footnote Transparent}
+{\footnote ControlStyle:Transparent}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Transparent Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set on a text control, it is displayed transparently, the background shows through the control where there are no characters. Otherwise the background is opaque.
\par\li0{\b Control Types That Can Have This Style}\par\li180
{\uldb Text}{\v ControlType_Text}
\par\li0{\b Associated Control Attribute}\par\li180
{\uldb Transparent}{\v ControlAttribute_Transparent}.\line
\par\li0{\b Numeric Value}\par\li180
0x00010000 = 65536\line
\page

#{\footnote ControlStyle_Visible}
${\footnote ControlStyle Visible}
K{\footnote Visible}
+{\footnote ControlStyle:Visible}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Visible Control Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set on a control, it is visible on the dialog. Otherwise it is hidden. The visible/hidden state of the control can be changed later through the associated attribute or by the publisher of some event that the given control subscribes to. 
\par\li0{\b Control Types That Can Have This Style}\par\li180
All controls
\par\li0{\b Associated Control Attribute}\par\li180
{\uldb Visible}{\v ControlAttribute_Visible}.\line
\par\li0{\b Numeric Value}\par\li180
0x00000001 = 1\line
\page

#{\footnote ControlAttribute_Bitmap}
${\footnote ControlAttribute Bitmap}
K{\footnote Bitmap}
+{\footnote ControlAttribute:Bitmap}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Bitmap Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute tells if the text on the buttons is replaced by a bitmap.
\par\li0{\b Type}\par\li180
Boolean.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb CheckBox}{\v ControlType_CheckBox}\line
{\uldb PushButton}{\v ControlType_PushButton}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}
\par\li0{\b Associated Control Stylebit}\par\li180
{\uldb Bitmap}{\v ControlStyle_Bitmap}.
\par\li0{\b Related Control Attribute}\par\li180
{\uldb Icon}{\v ControlAttribute_Icon}\line
\page

#{\footnote ControlAttribute_Icon}
${\footnote ControlAttribute Icon}
K{\footnote Icon}
+{\footnote ControlAttribute:Icon}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Icon Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute tells if the text on the buttons is replaced by an icon.
\par\li0{\b Type}\par\li180
Boolean.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb CheckBox}{\v ControlType_CheckBox}\line
{\uldb PushButton}{\v ControlType_PushButton}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}
\par\li0{\b Associated Control Stylebit}\par\li180
{\uldb Icon}{\v ControlStyle_Icon}.
\par\li0{\b Related Control Attribute}\par\li180
{\uldb Bitmap}{\v ControlAttribute_Bitmap}\line
\par\li0{\b Numeric Value}\par\li180
0x00080000 = 524288\line
\page

#{\footnote ControlAttribute_ClientRect}
${\footnote ControlAttribute ClientRect}
K{\footnote ClientRect}
+{\footnote ControlAttribute:ClientRect}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ClientRect Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute retrieves the coordinates of a window's client area. The client coordinates specify the upper-left and lower-right corners of the client area. The coordinates are relative to the upper left corner of the control's window. The four values are returned in the following order: left, top, right, bottom.  
\par\li0{\b Type}\par\li180
Integer.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 4 fields.
\par\li0{\b Control Types That Have This Attribute}\par\li180
All controls.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
\page

#{\footnote ControlAttribute_Default}
${\footnote ControlAttribute Default}
K{\footnote Default}
+{\footnote ControlAttribute:Default}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Default Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute describes if the given control is defined as the default control on the dialog. If it is the default, then hitting the Return key automaticaly activates this control.
\par\li0{\b Type}\par\li180
Boolean.
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
All controls. \line
Although this attribute is defined for every control, it is only practical for controls that have a button-like behaviour.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\page

#{\footnote ControlAttribute_Enabled}
${\footnote ControlAttribute Enabled}
K{\footnote Enabled}
+{\footnote ControlAttribute:Enabled}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Enabled Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute describes if the given control is enabled or disabled. Most controls have a gray disabled look. For some inert controls changeing this attribute results in no visible change.
\par\li0{\b Type}\par\li180
Boolean.
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
All controls. \line
\par\li0{\b Associated Control Stylebit}\par\li180
{\uldb Enabled}{\v ControlStyle_Enabled}.
\page

#{\footnote ControlAttribute_HasBorder}
${\footnote ControlAttribute HasBorder}
K{\footnote HasBorder}
+{\footnote ControlAttribute:HasBorder}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
HasBorder Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute describes if the radiobutton group has a border around it. If there is no border, then no text is shown on the top of the group, even if there is some text defined.
\par\li0{\b Type}\par\li180
Boolean.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} \line
\par\li0{\b Associated Control Stylebit}\par\li180
{\uldb HasBorder}{\v ControlStyle_HasBorder}.
\page

#{\footnote ControlAttribute_Height}
${\footnote ControlAttribute Height}
K{\footnote Height}
+{\footnote ControlAttribute:Height}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Height Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the height of the control in pixels.
\par\li0{\b Type}\par\li180
Integer.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
\page

#{\footnote ControlAttribute_Width}
${\footnote ControlAttribute Width}
K{\footnote Width}
+{\footnote ControlAttribute:Width}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Width Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the width of the control in pixels.
\par\li0{\b Type}\par\li180
Integer.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
\page

#{\footnote ControlAttribute_X}
${\footnote ControlAttribute X}
K{\footnote X}
+{\footnote ControlAttribute:X}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
X Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the the x coordinate of the upper left corner of the control in pixels.
\par\li0{\b Type}\par\li180
Integer.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb Y}{\v ControlAttribute_Y}\line
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
\page

#{\footnote ControlAttribute_Y}
${\footnote ControlAttribute Y}
K{\footnote Y}
+{\footnote ControlAttribute:Y}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Y Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the the y coordinate of the upper left corner of the control in pixels.
\par\li0{\b Type}\par\li180
Integer.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb Position}{\v ControlAttribute_Position}\line
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
\page

#{\footnote ControlAttribute_Help}
${\footnote ControlAttribute Help}
K{\footnote Help}
+{\footnote ControlAttribute:Help}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Help Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute is the help string used with the control for the context sensitive help.
\par\li0{\b Type}\par\li180
String.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\page

#{\footnote ControlAttribute_BillboardName}
${\footnote ControlAttribute BillboardName}
K{\footnote BillboardName}
+{\footnote ControlAttribute:BillboardName}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
BillboardName Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the name of the currently running billboard, or sets and displays a billboard by name. This attibute is used in preview mode.
\par\li0{\b Type}\par\li180
String.
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb Billboard}{\v ControlType_Billboard}.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\page


#{\footnote ControlAttribute_Text}
${\footnote ControlAttribute Text}
K{\footnote Text}
+{\footnote ControlAttribute:Text}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Text Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute is the text string used displayed in the control. On setting, if the field 0 of the record is not null, the record is formatted using FormatText. If the field 0 is null, the first field of the record defines the text. On getting the value is always returned in the first field. For some controls this text may not be visible. On Windows the accelerator key for a control is defined by placing a "&" in front of the desired character in this string.
\par\li0{\b Type}\par\li180
String.
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\page

#{\footnote ControlAttribute_Indirect}
${\footnote ControlAttribute Indirect}
K{\footnote Indirect}
+{\footnote ControlAttribute:Indirect}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Indirect Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute determines for some active controls if the associated property is referenced indirectly.
\par\li0{\b Type}\par\li180
Boolean.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
All active controls.
\par\li0{\b Associated Control Stylebit}\par\li180
{\uldb Indirect}{\v ControlStyle_Indirect}.
\page


#{\footnote ControlAttribute_Integer}
${\footnote ControlAttribute Integer}
K{\footnote Integer}
+{\footnote ControlAttribute:Integer}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Integer Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute determines for some active controls if the associated property is integer valued.
\par\li0{\b Type}\par\li180
Boolean.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb CheckBox}{\v ControlType_CheckBox}\line
{\uldb ComboBox}{\v ControlType_ComboBox}\line
{\uldb Edit}{\v ControlType_Edit}\line
{\uldb ListBox}{\v ControlType_ListBox}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line
\par\li0{\b Associated Control Stylebit}\par\li180
{\uldb Integer}{\v ControlStyle_Integer}.
\page

#{\footnote ControlAttribute_ItemsCount}
${\footnote ControlAttribute ItemsCount}
K{\footnote ItemsCount}
+{\footnote ControlAttribute:ItemsCount}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ItemsCount Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the number of items in the control. These items represent the possible property values that the user can choose from.
\par\li0{\b Type}\par\li180
Integer.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1 field.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb ComboBox}{\v ControlType_ComboBox}\line
{\uldb ListBox}{\v ControlType_ListBox}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line
{\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line
{\uldb ItemsText}{\v ControlAttribute_ItemsText}\line
{\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line
{\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line
{\uldb ItemsX}{\v ControlAttribute_ItemsX}\line
{\uldb ItemsY}{\v ControlAttribute_ItemsY}\line
\page

#{\footnote ControlAttribute_ItemsHandle}
${\footnote ControlAttribute ItemsHandle}
K{\footnote ItemsHandle}
+{\footnote ControlAttribute:ItemsHandle}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ItemsHandle Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns a list of the window handles to the individual buttons in a radiobuttongroup. This attribute is supported on Windows only.
\par\li0{\b Type}\par\li180
Integer.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least the number of items. To ensure that the record is created with sufficient number of fields, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup} Windows only!\line
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line
{\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line
{\uldb ItemsText}{\v ControlAttribute_ItemsText}\line
{\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line
{\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line
{\uldb ItemsX}{\v ControlAttribute_ItemsX}\line
{\uldb ItemsY}{\v ControlAttribute_ItemsY}\line
\page

#{\footnote ControlAttribute_ItemsHeight}
${\footnote ControlAttribute ItemsHeight}
K{\footnote ItemsHeight}
+{\footnote ControlAttribute:ItemsHandle}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ItemsHeight Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns a list of the height in pixels of the windows for the individual buttons in a radiobuttongroup.
\par\li0{\b Type}\par\li180
Integer.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least the number of items. To ensure that the record is created with sufficient number of field, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line
{\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line
{\uldb ItemsText}{\v ControlAttribute_ItemsText}\line
{\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line
{\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line
{\uldb ItemsX}{\v ControlAttribute_ItemsX}\line
{\uldb ItemsY}{\v ControlAttribute_ItemsY}\line
\page

#{\footnote ControlAttribute_ItemsWidth}
${\footnote ControlAttribute ItemsWidth}
K{\footnote ItemsWidth}
+{\footnote ControlAttribute:ItemsWidth}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ItemsWidth Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns a list of the width in pixels of the windows for the individual buttons in a radiobuttongroup.
\par\li0{\b Type}\par\li180
Integer.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least the number of items. To ensure that the record is created with sufficient number of fields, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line
{\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line
{\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line
{\uldb ItemsText}{\v ControlAttribute_ItemsText}\line
{\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line
{\uldb ItemsX}{\v ControlAttribute_ItemsX}\line
{\uldb ItemsY}{\v ControlAttribute_ItemsY}\line
\page

#{\footnote ControlAttribute_ItemsX}
${\footnote ControlAttribute ItemsX}
K{\footnote ItemsX}
+{\footnote ControlAttribute:ItemsX}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ItemsX Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns a list of the x coordinates in pixels for the upper left corner of the windows for the individual buttons in a radiobuttongroup.
\par\li0{\b Type}\par\li180
Integer.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least the number of items. To ensure that the record is created with sufficient number of fields, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line
{\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line
{\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line
{\uldb ItemsText}{\v ControlAttribute_ItemsText}\line
{\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line
{\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line
{\uldb ItemsY}{\v ControlAttribute_ItemsY}\line
\page

#{\footnote ControlAttribute_ItemsY}
${\footnote ControlAttribute ItemsY}
K{\footnote ItemsY}
+{\footnote ControlAttribute:ItemsY}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ItemsY Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns a list of the y coordinates in pixels for the upper left corner of the windows for the individual buttons in a radiobuttongroup.
\par\li0{\b Type}\par\li180
Integer.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least the number of items. To ensure that the record is created with sufficient number of fields, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line
{\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line
{\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line
{\uldb ItemsText}{\v ControlAttribute_ItemsText}\line
{\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line
{\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line
{\uldb ItemsX}{\v ControlAttribute_ItemsX}\line
\page

#{\footnote ControlAttribute_ItemsText}
${\footnote ControlAttribute ItemsText}
K{\footnote ItemsText}
+{\footnote ControlAttribute:ItemsText}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ItemsText Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns a list of the visible text strings associated with the items in the control.
\par\li0{\b Type}\par\li180
String.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least the number of items. To ensure that the record is created with sufficient number of fields, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb ComboBox}{\v ControlType_ComboBox}\line
{\uldb ListBox}{\v ControlType_ListBox}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line
{\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line
{\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line
{\uldb ItemsValue}{\v ControlAttribute_ItemsValue}\line
{\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line
{\uldb ItemsX}{\v ControlAttribute_ItemsX}\line
{\uldb ItemsY}{\v ControlAttribute_ItemsY}\line
\page

#{\footnote ControlAttribute_ItemsValue}
${\footnote ControlAttribute ItemsValue}
K{\footnote ItemsValue}
+{\footnote ControlAttribute:ItemsValue}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ItemsValue Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns a list of the property values associated with the items in the control.
\par\li0{\b Type}\par\li180
String or Integer depending on the {\uldb Integer}{\v ControlStyle_Integer} stylebit of the control.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least the number of items. To ensure that the record is created with sufficient number of fields, one can call the {\uldb ItemsCount}{\v ControlAttribute_ItemsCount} control attribute first. The items are listed in a random order, but all Items* attributes will use the same order of items.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb ComboBox}{\v ControlType_ComboBox}\line
{\uldb ListBox}{\v ControlType_ListBox}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}\line
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb ItemsCount}{\v ControlAttribute_ItemsCount}\line
{\uldb ItemsHandle}{\v ControlAttribute_ItemsHandle}\line
{\uldb ItemsHeight}{\v ControlAttribute_ItemsHeight}\line
{\uldb ItemsText}{\v ControlAttribute_ItemsText}\line
{\uldb ItemsWidth}{\v ControlAttribute_ItemsWidth}\line
{\uldb ItemsX}{\v ControlAttribute_ItemsX}\line
{\uldb ItemsY}{\v ControlAttribute_ItemsY}\line
\page

#{\footnote ControlAttribute_KeyInt}
${\footnote ControlAttribute KeyInt}
K{\footnote KeyInt}
+{\footnote ControlAttribute:KeyInt}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
KeyInt Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the integer representation of the name of the control. The same information is available through the {\uldb IntegerValue}{\v MsiControl_IntegerValue} property of the Control object.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attribute}\par\li180
{\uldb KeyString}{\v ControlAttribute_KeyString}\line
\page

#{\footnote ControlAttribute_KeyString}
${\footnote ControlAttribute KeyString}
K{\footnote KeyString}
+{\footnote ControlAttribute:KeyString}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
KeyString Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the string representation of the name of the control. The same information is available through the {\uldb StringValue}{\v MsiControl_StringValue} property of the Control object.
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attribute}\par\li180
{\uldb KeyInt}{\v ControlAttribute_KeyInt}\line
\page

#{\footnote ControlAttribute_Limit}
${\footnote ControlAttribute Limit}
K{\footnote Limit}
+{\footnote ControlAttribute:Limit}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Limit Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute determines the maximum number of characters the user can enter in the edit field.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb ComboBox}{\v ControlType_ComboBox}\line
{\uldb Edit}{\v ControlType_Edit}
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\page

#{\footnote ControlAttribute_Image}
${\footnote ControlAttribute Image}
K{\footnote Image}
+{\footnote ControlAttribute:Image}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Image Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute is the name of the image in the {\uldb Binary Table}{\v _msi_Binary_Table@msi.hlp}. If the image is set by the {\uldb ImageHandle}{\v ControlAttribute_ImageHandle} attribute, this attribute does not reflect the correct name anymore.
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb Bitmap}{\v ControlType_Bitmap}\line
{\uldb Icon}{\v ControlType_Icon}
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attribute}\par\li180
{\uldb ImageHandle}{\v ControlAttribute_ImageHandle}\line
\page

#{\footnote ControlAttribute_ImageHandle}
${\footnote ControlAttribute ImageHandle}
K{\footnote ImageHandle}
+{\footnote ControlAttribute:ImageHandle}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ImageHandle Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute is the handle to the bitmap or icon displayed in the control. If the image is set by this attribute, the name of the image is not correct anymore and the {\uldb Image}{\v ControlAttribute_Image} attribute will return an incorrect value.
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb Bitmap}{\v ControlType_Bitmap}\line
{\uldb Icon}{\v ControlType_Icon}
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attribute}\par\li180
{\uldb Image}{\v ControlAttribute_Image}\line
\page



#{\footnote ControlAttribute_OriginalValue}
${\footnote ControlAttribute OriginalValue}
K{\footnote OriginalValue}
+{\footnote ControlAttribute:OriginalValue}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
OriginalValue Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute is normaly the value of the associated property at the moment of the control's creation. If the {\uldb Undo}{\v MsiControl_Undo} method is called on the control, it puts this value back to the property.
\par\li0{\b Type}\par\li180
String or Integer depending on the {\uldb Integer}{\v ControlStyle_Integer} style of the control.
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every active control.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
\page

#{\footnote ControlAttribute_PropertyValue}
${\footnote ControlAttribute PropertyValue}
K{\footnote PropertyValue}
+{\footnote ControlAttribute:PropertyValue}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
PropertyValue Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute is the present value of the associated property. If this attribute is changed, the control updates to show the new state.
\par\li0{\b Type}\par\li180
String or Integer depending on the {\uldb Integer}{\v ControlStyle_Integer} style of the control.
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every active control.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
\page

#{\footnote ControlAttribute_PropertyName}
${\footnote ControlAttribute PropertyName}
K{\footnote PropertyName}
+{\footnote ControlAttribute:PropertyName}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
PropertyName Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
In case of an active control this attribute is the name of the associated property. For inert controls this attribute returns Null. 
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb IndirectPropertyName}{\v ControlAttribute_IndirectPropertyName}\line
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
\page

#{\footnote ControlAttribute_IndirectPropertyName}
${\footnote ControlAttribute IndirectPropertyName}
K{\footnote IndirectPropertyName}
+{\footnote ControlAttribute:IndirectPropertyName}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
IndirectPropertyName Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
In case of an active control this attribute is the name of the associated indirect property. For inert controls this attribute returns Null. \line
An indirect property names an other property, and the control displays/changes the value of this second property. 
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb OriginalValue}{\v ControlAttribute_OriginalValue}\line
{\uldb PropertyName}{\v ControlAttribute_PropertyName}\line
{\uldb PropertyValue}{\v ControlAttribute_PropertyValue}\line
\page

#{\footnote ControlAttribute_Position}
${\footnote ControlAttribute Position}
K{\footnote Position}
+{\footnote ControlAttribute:Position}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Position Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute determines the position of the control on the dialog. The four fields are: left, top, width and height. The coordinates are in pixels and relative to the upper left corner of the dialog.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 4.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control.
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\par\li0{\b Related Control Attributes}\par\li180
{\uldb Width}{\v ControlAttribute_Width}\line
{\uldb Height}{\v ControlAttribute_Height}\line
{\uldb X}{\v ControlAttribute_X}\line
{\uldb Y}{\v ControlAttribute_Y}\line
{\uldb ClientRect}{\v ControlAttribute_ClientRect}\line
\page

#{\footnote ControlAttribute_Progress}
${\footnote ControlAttribute Progress}
K{\footnote Progress}
+{\footnote ControlAttribute:Progress}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Progress Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute measures how far the progress bar is filled up. The record contains two integers and a string. The first number is the progress, the second number is the range (the maximal possible number for the progress).\line
On setting, the integers can be entered as integer fields or strings containing the integers.\line
If the second number is missing it is assumed to be the default (1024). If the progress is larger than the range then it is changed to be the range. The third field is a string, the name of the action whose progress is displayed.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 3.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb ProgressBar}{\v ControlType_ProgressBar}
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\page

#{\footnote ControlAttribute_PushLike}
${\footnote ControlAttribute PushLike}
K{\footnote PushLike}
+{\footnote ControlAttribute:PushLike}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
PushLike Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this attribute is set on a checkbox or a radiobuttongroup the button is drawn with the visual appearance of a push button, but it's logic stays the same. If the bit is not set the controls are drawn in their usual visual style.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb CheckBox}{\v ControlType_CheckBox}\line
{\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}
\par\li0{\b Associated Control Stylebit}\par\li180
{\uldb PushLike}{\v ControlStyle_PushLike}
\page

#{\footnote ControlAttribute_RefCount}
${\footnote ControlAttribute RefCount}
K{\footnote RefCount}
+{\footnote ControlAttribute:RefCount}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
RefCount Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute gives the current reference count to the control.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control
\par\li0{\b Associated Control Stylebit}\par\li180
None.
\page

#{\footnote ControlAttribute_Sunken}
${\footnote ControlAttribute Sunken}
K{\footnote Sunken}
+{\footnote ControlAttribute:Sunken}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Sunken Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this attribute is set on a control, it is displayed with a sunken, 3D look, if that is available on the system. Otherwise the control is displayed in its default visual style. The effect of this attribute is different on different versions of Windows. On most controls it has no visible effect.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control
\par\li0{\b Associated Control Stylebit}\par\li180
{\uldb Sunken}{\v ControlStyle_Sunken}
\page

#{\footnote ControlAttribute_Transparent}
${\footnote ControlAttribute Transparent}
K{\footnote Transparent}
+{\footnote ControlAttribute:Transparent}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Transparent Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this attribute is set on a text control, it is displayed transparently, the background shows through the control where there are no characters. Otherwise the background is opaque.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
{\uldb Text}{\v ControlType_Text}
\par\li0{\b Associated Control Stylebit}\par\li180
{\uldb Transparent}{\v ControlStyle_Transparent}
\page

#{\footnote ControlAttribute_Visible}
${\footnote ControlAttribute Visible}
K{\footnote Visible}
+{\footnote ControlAttribute:Visible}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Visible Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this attribute is set the control is visible, otherwise hidden.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control
\par\li0{\b Associated Control Stylebit}\par\li180
{\uldb Visible}{\v ControlStyle_Visible}
\page

#{\footnote ControlAttribute_WindowHandle}
${\footnote ControlAttribute WindowHandle}
K{\footnote WindowHandle}
+{\footnote ControlAttribute:WindowHandle}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
WindowHandle Control Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the window handle to the control's window. Supported on Windows only.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Control Types That Have This Attribute}\par\li180
Every control. Windows only!
\par\li0{\b Associated Control Stylebit}\par\li180
{\uldb Visible}{\v ControlStyle_Visible}
\page


#{\footnote DialogStyle_Browse}
${\footnote DialogStyle Browse}
K{\footnote Browse}
+{\footnote DialogStyle:Browse}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Browse Dialog Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Some description goes here!!!
\par\li0{\b Associated Dialog Attribute}\par\li180
None\line
\par\li0{\b Numeric Value}\par\li180
0x00020000 = 131072\line
\page

#{\footnote DialogStyle_Minimize}
${\footnote DialogStyle Minimize}
K{\footnote Minimize}
+{\footnote DialogStyle:Minimize}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Minimize Dialog Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the dialog can be minimized. On Windows the dialog's minimize button is enabled and the minimize item is enabled in the system menue. This bit is ignored for modeless dialogs, that can not be ever minimized.
\par\li0{\b Associated Dialog Attribute}\par\li180
None\line
\par\li0{\b Numeric Value}\par\li180
0x00000004 = 4\line
\page

#{\footnote DialogStyle_Modal}
${\footnote DialogStyle Modal}
K{\footnote Modal}
+{\footnote DialogStyle:Modal}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Modal Dialog Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the dialog is modal, other dialogs of the same application can not be put on top of it, and the dialog keeps the control while it is running.
If this bit is not set, the dialog is modeless, other dialogs of the same application may be moved on top of it. After a modeless dialog is created and displayed, the Handler returns control to the Engine. The Engine calls the Handler through the {\uldb Message}{\v MsiHandler_Message} method periodiacly to update the dialog and to give the Handler a chance to process the messages. As soon as this is done, the control is returned to the Engine.  Note that there should be no modeless dialogs in a wizard sequence, since this will return control to the engine, ending the wizard sequence prematurely.
\par\li0{\b Associated Dialog Attribute}\par\li180
{\uldb Modal}{\v DialogAttribute_Modal}\line
\par\li0{\b Numeric Value}\par\li180
0x00000002 = 2\line
\page

#{\footnote DialogStyle_KeepModeless}
${\footnote DialogStyle KeepModeless}
K{\footnote KeepModeless}
+{\footnote DialogStyle:KeepModeless}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
KeepModeless Dialog Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Normally (when this bit is not set), when a dialog is created through DoAction, all other (typically modeless) dialogs are destroyed. If this bit is set, the other dialogs stay alive when this dialog is created.
\par\li0{\b Associated Dialog Attribute}\par\li180
{\uldb KeepModeless}{\v DialogAttribute_KeepModeless}\line
\par\li0{\b Numeric Value}\par\li180
0x00000010 = 16\line
\page

#{\footnote DialogStyle_TrackDiskSpace}
${\footnote DialogStyle TrackDiskSpace}
K{\footnote TrackDiskSpace}
+{\footnote DialogStyle:TrackDiskSpace}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
TrackDiskSpace Dialog Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set, the dialog periodically calls SelectionManager::DetermineOutOfDiskSpace. If the property changes, it notifies the controls on the dialog. This style can be used if there is an control on the dialog indicating if we are out of disk space. If the user switches to an other application and adds/removes files or otherwise modifies the available disk space, we can still quickly catch the change using this style.\line
\par\li0{\b Associated Dialog Attribute}\par\li180
None.\line
\par\li0{\b Numeric Value}\par\li180
0x00000020 = 32\line
\page

#{\footnote DialogStyle_UseCustomPalette}
${\footnote DialogStyle UseCustomPalette}
K{\footnote UseCustomPalette}
+{\footnote DialogStyle:UseCustomPalette}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
UseCustomPalette Dialog Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the pictures on the dialog will be created with the custom palette (one per dialog received from the first control created). If the bit is not set, the pictures are rendered using a default palette.\line
Typically one would set this bit if the dialog contains a picture with a special palette, or several pictures sharing a custom palette. The bit should be unset if the dialog contains several pictures with different palettes. In this case the default will be most likely to give a satisfactory result for all pictures.
\par\li0{\b Associated Dialog Attribute}\par\li180
{\uldb UseCustomPalette}{\v DialogAttribute_UseCustomPalette}\line
\par\li0{\b Numeric Value}\par\li180
0x00000040 = 64\line
\page




#{\footnote DialogStyle_Visible}
${\footnote DialogStyle Visible}
K{\footnote Visible}
+{\footnote DialogStyle:Visible}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Visible Dialog Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the dialog is originaly created as visible, otherwise it is hidden.
\par\li0{\b Associated Dialog Attribute}\par\li180
None\line
\par\li0{\b Numeric Value}\par\li180
0x00000001 = 1\line
\page

#{\footnote DialogStyle_Error}
${\footnote DialogStyle Error}
K{\footnote Error}
+{\footnote DialogStyle:Error}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Error Dialog Stylebit
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
If this bit is set the dialog is an error dialog.\line
There can be more than one dialog with this style. The ErrorDialog property determines which dialog is used as an error dialog. The selected dialog can be only one of those that have this style bit set. 
The error dialog must have a static text control named ErrorText. This control receives the text of the error message. The dialog should also have the seven push buttons corresponding to the possible return values. 
The error message determines which of these buttons are actualy displayed. The displayed buttons are rearranged so they are evenly distributed on the dialog. This rearrangement changes the X coordinate of the buttons, but not the other three coordinates. 
Therefore it is advisable that no other control should be authored in the same horizontal region of the dialog as the buttons. If the error message specifies no button, the OK button is displayed. 
The Default button, First active control and Cancel button values are ignored for an error dialog. The default button defined in the error message will be assigned to all three values.
The effect of pushing these buttons have to be defined in the {\uldb ControlEvent Table}{\v _msi_ControlEvent_Table@msi.hlp} just like for all other buttons. 
The title of the dialog is authored like for any other dialog. It can get overwritten by the error message if it specifies a header text after the button list. 
\par\li0{\b Associated Dialog Attribute}\par\li180
{\uldb Error}{\v DialogAttribute_Error}\line
\par\li0{\b Numeric Value}\par\li180
0x00010000 = 65536\line
\page


#{\footnote DialogAttribute_AddingControls}
${\footnote DialogAttribute AddingControls}
K{\footnote AddingControls}
+{\footnote DialogAttribute:AddingControls}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
AddingControls Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute shows if the dialog is in the process of adding controls. As long as the dialog is in this phase most methods on the dialog are not available. This attribute is changed to False when {\uldb AddControl}{\v MsiDialog_AddControl} is called with Null signaling that all the controls are added.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\page

#{\footnote DialogAttribute_Argument}
${\footnote DialogAttribute Argument}
K{\footnote Argument}
+{\footnote DialogAttribute:Argument}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Argument Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
When the user dismisses a modal dialog in some way, the dialog internaly stores the name of the event and its argument that should take place next. This attribute returns the string representation of the event argument.
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb EventInt}{\v DialogAttribute_EventInt}\line
{\uldb EventString}{\v DialogAttribute_EventString}\line
\page

#{\footnote DialogAttribute_EventInt}
${\footnote DialogAttribute EventInt}
K{\footnote EventInt}
+{\footnote DialogAttribute:EventInt}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
EventInt Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
When the user dismisses a modal dialog in some way, the dialog internaly stores the name of the event and its argument that should take place next. This attribute returns the integer representation of the event name.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb ArgumentInt}{\v DialogAttribute_Argument}\line
{\uldb EventString}{\v DialogAttribute_EventString}\line
\page

#{\footnote DialogAttribute_EventString}
${\footnote DialogAttribute EventString}
K{\footnote EventString}
+{\footnote DialogAttribute:EventString}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
EventString Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
When the user dismisses a modal dialog in some way, the dialog internaly stores the name of the event and its argument that should take place next. This attribute returns the string representation of the event name.
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb ArgumentInt}{\v DialogAttribute_Argument}\line
{\uldb EventInt}{\v DialogAttribute_EventInt}\line
\page


#{\footnote DialogAttribute_ClientRect}
${\footnote DialogAttribute ClientRect}
K{\footnote ClientRect}
+{\footnote DialogAttribute:ClientRect}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ClientRect Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute retrieves the coordinates of the window's client area. The client coordinates specify the upper-left and lower-right corners of the client area. The coordinates are relative to the upper left corner of the dialog's window. The four values are returned in the following order: left, top, right, bottom.  
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 4.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb Position}{\v DialogAttribute_Position}\line
{\uldb Width}{\v DialogAttribute_Width}\line
{\uldb Height}{\v DialogAttribute_Height}\line
{\uldb X}{\v DialogAttribute_X}\line
{\uldb Y}{\v DialogAttribute_Y}\line
{\uldb FullSize}{\v DialogAttribute_FullSize}\line
\page

#{\footnote DialogAttribute_Position}
${\footnote DialogAttribute Position}
K{\footnote Position}
+{\footnote DialogAttribute:Position}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Position Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute determines the position of the dialog on the screen. The four fields are: left, top, width and height. The coordinates are in pixels and relative to the upper left corner of the screen.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 4.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb Width}{\v DialogAttribute_Width}\line
{\uldb Height}{\v DialogAttribute_Height}\line
{\uldb X}{\v DialogAttribute_X}\line
{\uldb Y}{\v DialogAttribute_Y}\line
{\uldb ClientRect}{\v DialogAttribute_ClientRect}\line
{\uldb FullSize}{\v DialogAttribute_FullSize}\line
\page

#{\footnote DialogAttribute_FullSize}
${\footnote DialogAttribute FullSize}
K{\footnote FullSize}
+{\footnote DialogAttribute:FullSize}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
FullSize Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute describes the full size of the dialog in pixels. This is the limit for the control placement. If the dialog is larger than the screen, this size describes the entire dialog, and it is larger than the size of the window visible on the screen.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 2.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb Width}{\v DialogAttribute_Width}\line
{\uldb Height}{\v DialogAttribute_Height}\line
{\uldb Position}{\v DialogAttribute_Position}\line
{\uldb X}{\v DialogAttribute_X}\line
{\uldb Y}{\v DialogAttribute_Y}\line
{\uldb ClientRect}{\v DialogAttribute_ClientRect}\line
\page


#{\footnote DialogAttribute_Width}
${\footnote DialogAttribute Width}
K{\footnote Width}
+{\footnote DialogAttribute:Width}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Width Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the width of the dialog in pixels.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb Position}{\v DialogAttribute_Position}\line
{\uldb Height}{\v DialogAttribute_Height}\line
{\uldb X}{\v DialogAttribute_X}\line
{\uldb Y}{\v DialogAttribute_Y}\line
{\uldb ClientRect}{\v DialogAttribute_ClientRect}\line
{\uldb FullSize}{\v DialogAttribute_FullSize}\line
\page

#{\footnote DialogAttribute_Height}
${\footnote DialogAttribute Height}
K{\footnote Height}
+{\footnote DialogAttribute:Height}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Height Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the height of the dialog in pixels.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb Position}{\v DialogAttribute_Position}\line
{\uldb Width}{\v DialogAttribute_Width}\line
{\uldb X}{\v DialogAttribute_X}\line
{\uldb Y}{\v DialogAttribute_Y}\line
{\uldb ClientRect}{\v DialogAttribute_ClientRect}\line
{\uldb FullSize}{\v DialogAttribute_FullSize}\line
\page

#{\footnote DialogAttribute_X}
${\footnote DialogAttribute X}
K{\footnote X}
+{\footnote DialogAttribute:X}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
X Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the x coordinate of the upper left corner of the dialog in pixels.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb Position}{\v DialogAttribute_Position}\line
{\uldb Width}{\v DialogAttribute_Width}\line
{\uldb Height}{\v DialogAttribute_Height}\line
{\uldb Y}{\v DialogAttribute_Y}\line
{\uldb ClientRect}{\v DialogAttribute_ClientRect}\line
{\uldb FullSize}{\v DialogAttribute_FullSize}\line
\page

#{\footnote DialogAttribute_Y}
${\footnote DialogAttribute Y}
K{\footnote Y}
+{\footnote DialogAttribute:Y}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Y Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the y coordinate of the upper left corner of the dialog in pixels.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb Position}{\v DialogAttribute_Position}\line
{\uldb Width}{\v DialogAttribute_Width}\line
{\uldb Height}{\v DialogAttribute_Height}\line
{\uldb X}{\v DialogAttribute_X}\line
{\uldb ClientRect}{\v DialogAttribute_ClientRect}\line
{\uldb FullSize}{\v DialogAttribute_FullSize}\line
\page

#{\footnote DialogAttribute_ControlsCount}
${\footnote DialogAttribute ControlsCount}
K{\footnote ControlsCount}
+{\footnote DialogAttribute:ControlsCount}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ControlsCount Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the number of controls existing on the dialog.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb ControlsKeyInt}{\v DialogAttribute_ControlsKeyInt}\line
{\uldb ControlsKeyString}{\v DialogAttribute_ControlsKeyString}\line
{\uldb ControlsNext}{\v DialogAttribute_ControlsNext}\line
{\uldb ControlsPrev}{\v DialogAttribute_ControlsPrev}\line
{\uldb ControlsProperty}{\v DialogAttribute_ControlsProperty}\line

\page

#{\footnote DialogAttribute_ControlsKeyInt}
${\footnote DialogAttribute ControlsKeyInt}
K{\footnote ControlsKeyInt}
+{\footnote DialogAttribute:ControlsKeyInt}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ControlsKeyInt Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the list of integer representation of the names of the controls existing on the dialog. The controls are listed in a random order, but all Controls* attributes list them in the same order.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least the number of controls on the dialog. To ensure that the record is created with a sufficient number of field, one may call the {\uldb ControlsCount}{\v DialogAttribute_ControlsCount} attribute first.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb ControlsCount}{\v DialogAttribute_ControlsCount}\line
{\uldb ControlsKeyString}{\v DialogAttribute_ControlsKeyString}\line
{\uldb ControlsNext}{\v DialogAttribute_ControlsNext}\line
{\uldb ControlsPrev}{\v DialogAttribute_ControlsPrev}\line
{\uldb ControlsProperty}{\v DialogAttribute_ControlsProperty}\line

\page

#{\footnote DialogAttribute_ControlsKeyString}
${\footnote DialogAttribute ControlsKeyString}
K{\footnote ControlsKeyString}
+{\footnote DialogAttribute:ControlsKeyString}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ControlsKeyString Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the list of string representation of the names of the controls existing on the dialog. The controls are listed in a random order, but all Controls* attributes list them in the same order.
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least the number of controls on the dialog. To ensure that the record is created with a sufficient number of field, one may call the {\uldb ControlsCount}{\v DialogAttribute_ControlsCount} attribute first.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb ControlsCount}{\v DialogAttribute_ControlsCount}\line
{\uldb ControlsKeyInt}{\v DialogAttribute_ControlsKeyInt}\line
{\uldb ControlsNext}{\v DialogAttribute_ControlsNext}\line
{\uldb ControlsPrev}{\v DialogAttribute_ControlsPrev}\line
{\uldb ControlsProperty}{\v DialogAttribute_ControlsProperty}\line

\page

#{\footnote DialogAttribute_ControlsNext}
${\footnote DialogAttribute ControlsNext}
K{\footnote ControlsNext}
+{\footnote DialogAttribute:ControlsNext}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ControlsNext Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the list of the names of the controls next in tab order. The controls are listed in a random order, but all Controls* attributes list them in the same order.
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least the number of controls on the dialog. To ensure that the record is created with a sufficient number of field, one may call the {\uldb ControlsCount}{\v DialogAttribute_ControlsCount} attribute first.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb ControlsCount}{\v DialogAttribute_ControlsCount}\line
{\uldb ControlsKeyInt}{\v DialogAttribute_ControlsKeyInt}\line
{\uldb ControlsKeyString}{\v DialogAttribute_ControlsKeyString}\line
{\uldb ControlsPrev}{\v DialogAttribute_ControlsPrev}\line
{\uldb ControlsProperty}{\v DialogAttribute_ControlsProperty}\line

\page

#{\footnote DialogAttribute_ControlsPrev}
${\footnote DialogAttribute ControlsPrev}
K{\footnote ControlsPrev}
+{\footnote DialogAttribute:ControlsPrev}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ControlsPrev Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the list of the names of the controls previous in tab order. The controls are listed in a random order, but all Controls* attributes list them in the same order.
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least the number of controls on the dialog. To ensure that the record is created with a sufficient number of field, one may call the {\uldb ControlsCount}{\v DialogAttribute_ControlsCount} attribute first.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb ControlsCount}{\v DialogAttribute_ControlsCount}\line
{\uldb ControlsKeyInt}{\v DialogAttribute_ControlsKeyInt}\line
{\uldb ControlsKeyString}{\v DialogAttribute_ControlsKeyString}\line
{\uldb ControlsNext}{\v DialogAttribute_ControlsNext}\line
{\uldb ControlsProperty}{\v DialogAttribute_ControlsProperty}\line

\page

#{\footnote DialogAttribute_ControlsProperty}
${\footnote DialogAttribute ControlsProperty}
K{\footnote ControlsProperty}
+{\footnote DialogAttribute:ControlsProperty}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ControlsProperty Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This attribute returns the list of properties associated with the controls. The controls are listed in a random order, but all Controls* attributes list them in the same order.
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least the number of controls on the dialog. To ensure that the record is created with a sufficient number of field, one may call the {\uldb ControlsCount}{\v DialogAttribute_ControlsCount} attribute first.
\par\li0{\b Related Dialog Attributes}\par\li180
{\uldb ControlsCount}{\v DialogAttribute_ControlsCount}\line
{\uldb ControlsKeyInt}{\v DialogAttribute_ControlsKeyInt}\line
{\uldb ControlsKeyString}{\v DialogAttribute_ControlsKeyString}\line
{\uldb ControlsNext}{\v DialogAttribute_ControlsNext}\line
{\uldb ControlsPrev}{\v DialogAttribute_ControlsPrev}\line

\page

#{\footnote DialogAttribute_CurrentControl}
${\footnote DialogAttribute CurrentControl}
K{\footnote CurrentControl}
+{\footnote DialogAttribute:CurrentControl}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
CurrentControl Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The name of the control currently having the focus.
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.

\page

#{\footnote DialogAttribute_DefaultButton}
${\footnote DialogAttribute DefaultButton}
K{\footnote DefaultButton}
+{\footnote DialogAttribute:DefaultButton}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
DefaultButton Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The name of the default control (typically a button). If there is no default control, it returns an empty string.
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\page

#{\footnote DialogAttribute_Preview}
${\footnote DialogAttribute Preview}
K{\footnote Preview}
+{\footnote DialogAttribute:Preview}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Preview Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
A boolean value showing if the handler is in preview mode.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\page

#{\footnote DialogAttribute_Locked}
${\footnote DialogAttribute Locked}
K{\footnote Locked}
+{\footnote DialogAttribute:Locked}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Locked Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
An integer showing the ID of the control that locked the dialog from closing, because the control has an invalid value. 0 if the dialog is not locked.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\page

#{\footnote DialogAttribute_InPlace}
${\footnote DialogAttribute InPlace}
K{\footnote InPlace}
+{\footnote DialogAttribute:InPlace}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
InPlace Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
A Boolean value showing if the dialog has been moved by the Handler to its final position.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\page




#{\footnote DialogAttribute_HasControls}
${\footnote DialogAttribute HasControls}
K{\footnote HasControls}
+{\footnote DialogAttribute:HasControls}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
HasControls Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
A boolean value showing if the dialog has controls. It is turned on only when all the controls are added.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\page

#{\footnote DialogAttribute_Text}
${\footnote DialogAttribute Text}
K{\footnote Text}
+{\footnote DialogAttribute:Text}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Text Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The caption of the dialog. On setting if the field 0 of the record is not null, the record is formatted using FormatString; if the field 0 is null, the first field is the string to be set. On getting the text is always returned in field 1.
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1.
\page

#{\footnote DialogAttribute_KeyInt}
${\footnote DialogAttribute KeyInt}
K{\footnote KeyInt}
+{\footnote DialogAttribute:KeyInt}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
KeyInt Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The integer representation of the name of the dialog. This information is also available through the {\uldb IntegerValue}{\v MsiDialog_IntegerValue} property of the dialog.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1. 
\par\li0{\b Related Dialog Attribute}\par\li180
{\uldb KeyString}{\v DialogAttribute_KeyString}\line
\page


#{\footnote DialogAttribute_KeyString}
${\footnote DialogAttribute KeyString}
K{\footnote KeyString}
+{\footnote DialogAttribute:KeyString}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
KeyString Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The string representation of the name of the dialog. This information is also available through the {\uldb StringValue}{\v MsiDialog_StringValue} property of the dialog.
\par\li0{\b Type}\par\li180
String
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1. 
\par\li0{\b Related Dialog Attribute}\par\li180
{\uldb KeyInt}{\v DialogAttribute_KeyInt}\line
\page

#{\footnote DialogAttribute_Modal}
${\footnote DialogAttribute Modal}
K{\footnote Modal}
+{\footnote DialogAttribute:Modal}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Modal Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
A boolean value showing whether the dialog is modal or modeless. Originaly set by the {\uldb Modal}{\v DialogStyle_Modal} style bit.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1. 
\page

#{\footnote DialogAttribute_KeepModeless}
${\footnote DialogAttribute KeepModeless}
K{\footnote KeepModeless}
+{\footnote DialogAttribute:KeepModeless}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
KeepModeless Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
A boolean value showing whether the dialog takes down the other (typically modeless) dialogs when created. Originaly set by the {\uldb KeepModeless}{\v DialogStyle_KeepModeless} style bit.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1. 
\page


#{\footnote DialogAttribute_RefCount}
${\footnote DialogAttribute RefCount}
K{\footnote RefCount}
+{\footnote DialogAttribute:RefCount}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
RefCount Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The reference count of the dialog object.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1. 
\page


#{\footnote DialogAttribute_Running}
${\footnote DialogAttribute Running}
K{\footnote Running}
+{\footnote DialogAttribute:Running}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Running Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
A boolean value showing if the dialog is currently running (in the message loop) or about to run.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1. 
\page

#{\footnote DialogAttribute_Showing}
${\footnote DialogAttribute Showing}
K{\footnote Showing}
+{\footnote DialogAttribute:Showing}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Showing Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
A boolean value whther the dialog is currently showing.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1. 
\page

#{\footnote DialogAttribute_Error}
${\footnote DialogAttribute Error}
K{\footnote Error}
+{\footnote DialogAttribute:Error}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Error Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
A boolean value whther the dialog is an error dialog.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1. 
\page


#{\footnote DialogAttribute_WindowHandle}
${\footnote DialogAttribute WindowHandle}
K{\footnote WindowHandle}
+{\footnote DialogAttribute:WindowHandle}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
WindowHandle Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The window handle of the dialog's window.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1. 
\page

#{\footnote DialogAttribute_Palette}
${\footnote DialogAttribute Palette}
K{\footnote Palette}
+{\footnote DialogAttribute:Palette}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Palette Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The handle of the palette used by the controls on the dialog.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read and Write.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1. 
\page

#{\footnote DialogAttribute_UseCustomPalette}
${\footnote DialogAttribute UseCustomPalette}
K{\footnote UseCustomPalette}
+{\footnote DialogAttribute:UseCustomPalette}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
UseCustomPalette Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
A flag showing if a custom palette is used to render the images on the dialog.
\par\li0{\b Type}\par\li180
Boolean
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1. 
\par\li0{\b Related Dialog Style}\par\li180
{\uldb UseCustomPalette}{\v DialogStyle_UseCustomPalette}\line
\page



#{\footnote DialogAttribute_ToolTip}
${\footnote DialogAttribute ToolTip}
K{\footnote ToolTip}
+{\footnote DialogAttribute:ToolTip}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ToolTip Dialog Atribute
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The window handle of the tool tip control.
\par\li0{\b Type}\par\li180
Integer
\par\li0{\b Access}\par\li180
Read only.
\par\li0{\b Minimum Size of the Record}\par\li180
At least 1. 
\page


#{\footnote ControlEvent_SetProperty}
${\footnote ControlEvent SetProperty}
K{\footnote SetProperty}
+{\footnote ControlEvent:SetProperty}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SetProperty ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The syntax for this event is different than for other controlevents! In place of the name of the event one puts the property in square brackets: [property_name]. The argument is the new value of the property. To unset the property, the argument must be \{\}. This is necessary, because the argument is a primary key in the table, so it can not be null. The argument will be formatted using the {\uldb FormatText}{\v MsiEngine_FormatText} method, therefor it can contain any expression that the method can handle. The property values are evaluated at the moment of the control event.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
The new value of the property. \{\} for null.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
None.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a dialog linked to this event so it changes a property when the button is pushed. 
\page


#{\footnote ControlEvent_ActionData}
${\footnote ControlEvent ActionData}
K{\footnote ActionData}
+{\footnote ControlEvent:ActionData}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ActionData ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The Handler uses this event to broadcast the latest action data.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
The subscribers are hidden when a new action starts and they are shown when a new action data arrives from the engine.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
None.
\par\li0{\b Typical Use}\par\li180
A {\uldb Text}{\v ControlType_Text} control on a modeless dialog subscribes to this event using the {\uldb text}{\v ControlAttribute_Text} attribute to receive the latest data on the current action. (For example the names of the files copied during file copy). 
\page

#{\footnote ControlEvent_ActionProgress}
${\footnote ControlEvent ActionProgress}
K{\footnote ActionProgress}
+{\footnote ControlEvent:ActionProgress}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ActionProgress ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The Handler uses this event to broadcast the progress information. The name is the actual name of the action not ActionProgress! In other words the control has to subscribe to the event by naming the Action whose progress is being indicated. 
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
The subscribers are hidden when a new action starts or and they are shown when a new progress data arrives from the engine.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
None.
\par\li0{\b Typical Use}\par\li180
A {\uldb ProgressBar}{\v ControlType_ProgressBar} control on a modeless dialog subscribes to this event using the {\uldb Progress}{\v ControlAttribute_Progress} attribute to receive the progress information. 
\page

#{\footnote ControlEvent_ActionText}
${\footnote ControlEvent ActionText}
K{\footnote ActionText}
+{\footnote ControlEvent:ActionText}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ActionText ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The Handler uses this event to broadcast the name of the present action.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
The subscribers are shown when a new progress data arrives from the engine.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
None.
\par\li0{\b Typical Use}\par\li180
A {\uldb Text}{\v ControlType_Text} control on a modeless dialog subscribes to this event using the {\uldb text}{\v ControlAttribute_Text} attribute to receive the name of the current action.
\page

#{\footnote ControlEvent_DirectoryComboPath}
${\footnote ControlEvent DirectoryComboPath}
K{\footnote DirectoryComboPath}
+{\footnote ControlEvent:DirectoryComboPath}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
DirectoryComboPath ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The DirectoryCombo control uses this event to broadcast the currently selected path.
\par\li0{\b Published By}\par\li180
{\uldb DirectoryCombo}{\v ControlType_DirectoryCombo}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
None.
\par\li0{\b Typical Use}\par\li180
A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the DirectoryCombo subscribes to this event to show the path currently selected by the DirectoryCombo.
\page

#{\footnote ControlEvent_DirectoryListPath}
${\footnote ControlEvent DirectoryListPath}
K{\footnote DirectoryListPath}
+{\footnote ControlEvent:DirectoryListPath}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
DirectoryListPath ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The DirectoryList control uses this event to broadcast the currently selected path.
\par\li0{\b Published By}\par\li180
{\uldb DirectoryList}{\v ControlType_DirectoryList}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
None.
\par\li0{\b Typical Use}\par\li180
A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the DirectoryList subscribes to this event to show the path currently selected by the DirectoryList.
\page

#{\footnote ControlEvent_DirectoryListNew}
${\footnote ControlEvent DirectoryListNew}
K{\footnote DirectoryListNew}
+{\footnote ControlEvent:DirectoryListNew}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
DirectoryListNew ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The DirectoryList control is notified through this event when a new folder must be created.
\par\li0{\b Published By}\par\li180
{\uldb DirectoryList}{\v ControlType_DirectoryList}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
Creates a new (ghost) folder and selects its name field for editing. If a ghost folder already exists in the current folder, that that folder is selected and its name is opened for editing.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on the same modal dialog as the DirectoryList subscribes to this event to trigger the creation of a new folder.
\page

#{\footnote ControlEvent_DirectoryListUp}
${\footnote ControlEvent DirectoryListUp}
K{\footnote DirectoryListUp}
+{\footnote ControlEvent:DirectoryListUp}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
DirectoryListUp ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The DirectoryList control is notified through this event when the user wants to select the parent of the present directory.
\par\li0{\b Published By}\par\li180
{\uldb DirectoryList}{\v ControlType_DirectoryList}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
The subscribers are disabled if the current directory has no parent (it is a volume), otherwise they are enabled.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
Changes the selection to the parent of the current directory.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on the same modal dialog as the DirectoryList subscribes to this event to trigger stepping up in the path.
\page

#{\footnote ControlEvent_DirectoryListOpen}
${\footnote ControlEvent DirectoryListOpen}
K{\footnote DirectoryListOpen}
+{\footnote ControlEvent:DirectoryListOpen}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
DirectoryListOpen ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The DirectoryList control is notified through this event when the user wants to open the selected directory.
\par\li0{\b Published By}\par\li180
{\uldb DirectoryList}{\v ControlType_DirectoryList}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
The subscribers are disabled if there is no folder selected currently. Otherwise they are enabled.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
Changes the selection to the highlighted directory.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on the same modal dialog as the DirectoryList subscribes to this event to trigger stepping down in the path.
\page


#{\footnote ControlEvent_SelectionAction}
${\footnote ControlEvent SelectionAction}
K{\footnote SelectionAction}
+{\footnote ControlEvent:SelectionAction}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SelectionAction ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The SelectionTree control publishes this event that contains a string describing the action selected for the highlighted item. The string is one of the "Sel*" strings from the {\uldb UIText Table}{\v _msi_UIText_Table@msi.hlp}.
\par\li0{\b Published By}\par\li180
{\uldb SelectionTree}{\v ControlType_SelectionTree}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
None.
\par\li0{\b Typical Use}\par\li180
A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the SelectionTree subscribes to this event to display the explanation of the currently selected action.
\page

#{\footnote ControlEvent_SelectionDescription}
${\footnote ControlEvent SelectionDescription}
K{\footnote SelectionDescription}
+{\footnote ControlEvent:SelectionDescription}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SelectionDescription ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The SelectionTree control publishes this event that contains the describtion for the highlighted item. This string is the {\b Description} field of the {\uldb Feature Table}{\v _msi_Feature_Table@msi.hlp}.
\par\li0{\b Published By}\par\li180
{\uldb SelectionTree}{\v ControlType_SelectionTree}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
None.
\par\li0{\b Typical Use}\par\li180
A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the SelectionTree subscribes to this event to display the description of the highlighted item.
\page

#{\footnote ControlEvent_SelectionSize}
${\footnote ControlEvent SelectionSize}
K{\footnote SelectionSize}
+{\footnote ControlEvent:SelectionSize}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SelectionSize ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The SelectionTree control publishes this event that contains the size for the highlighted item. If it is a parent item, it also contains the number of children selected. The string is one of the {\b SelChildCostPos},  {\b SelChildCostNeg}, {\b SelParentCostPosPos}, {\b SelParentCostPosNeg}, {\b SelParentCostNegPos} or {\b SelParentCostNegNeg} strings from the {\uldb UIText Table}{\v UIText_Table@msi.hlp}.
\par\li0{\b Published By}\par\li180
{\uldb SelectionTree}{\v ControlType_SelectionTree}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
None.
\par\li0{\b Typical Use}\par\li180
A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the SelectionTree subscribes to this event to display the size of the highlighted item.
\page

#{\footnote ControlEvent_SelectionPath}
${\footnote ControlEvent SelectionPath}
K{\footnote SelectionPath}
+{\footnote ControlEvent:SelectionPath}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SelectionPath ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The SelectionTree control publishes this event that contains the path for the highlighted item. If the item is selected to run from source, this is the path of the source. If the item is selected to be absent, the string is the {\b AbsentPath} string from the {\uldb UIText Table}{\v UIText_Table@msi.hlp}.
\par\li0{\b Published By}\par\li180
{\uldb SelectionTree}{\v ControlType_SelectionTree}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
None.
\par\li0{\b Typical Use}\par\li180
A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the SelectionTree subscribes to this event to display the path of the highlighted item.
\page

#{\footnote ControlEvent_SelectionPathOn}
${\footnote ControlEvent SelectionPathOn}
K{\footnote SelectionPathOn}
+{\footnote ControlEvent:SelectionPathOn}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SelectionPathOn ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The SelectionTree control publishes this event that is a boolean value whether there is a selection path associated with the currently selected feature.
\par\li0{\b Published By}\par\li180
{\uldb SelectionTree}{\v ControlType_SelectionTree}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
None.
\par\li0{\b Typical Use}\par\li180
A {\uldb Text}{\v ControlType_Text} control on the same modal dialog as the SelectionTree subscribes to this event as the caption of the selection path. This text control is turned visible or hidden depending on this event.
\page


#{\footnote ControlEvent_SelectionIcon}
${\footnote ControlEvent SelectionIcon}
K{\footnote SelectionIcon}
+{\footnote ControlEvent:SelectionIcon}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SelectionIcon ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The SelectionTree control publishes this event that contains the handle to the icon indicating the selected action on the highlighted item. 
\par\li0{\b Published By}\par\li180
{\uldb SelectionTree}{\v ControlType_SelectionTree}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
None.
\par\li0{\b Typical Use}\par\li180
An {\uldb Icon}{\v ControlType_Icon} control on the same modal dialog as the SelectionTree subscribes to this event to display the icon corresponding to the highlighted item.
\page

#{\footnote ControlEvent_SelectionBrowse}
${\footnote ControlEvent SelectionBrowse}
K{\footnote SelectionBrowse}
+{\footnote ControlEvent:SelectionBrowse}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SelectionBrowse ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The SelectionTree control publishes this event that makes possible for an other control (typicaly a button) to trigger the browse dialog for the currently highlighted item. 
\par\li0{\b Published By}\par\li180
{\uldb SelectionTree}{\v ControlType_SelectionTree}
\par\li0{\b Argument}\par\li180
The name of the dialog to be spawned.
\par\li0{\b Action on Subscribers}\par\li180
The subscribers are disabled or enabled depending on if the path of the currently selected item can be modified by the user.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
Spawns a browse dialog to modify the path.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on the same modal dialog as the SelectionTree subscribes to this event to trigger the browse dialog.
\page



#{\footnote ControlEvent_EndDialog}
${\footnote ControlEvent EndDialog}
K{\footnote EndDialog}
+{\footnote ControlEvent:EndDialog}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
EndDialog ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The Handler is notified through this event when a modal dialog has to be removed.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
On regular dialogs: "Return", "Exit", "Retry" or "Ignore".\line
On error dialogs" "ErrorOk", "ErrorCancel", "ErrorAbort", "ErrorRetry", "ErrorIgnore", "ErrorYes" or "ErrorNo".
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
In all cases the Handler removes the present dialog.\line
If the argument is "Exit", the wizard sequence is closed, the control returns to the Engine with the UserExit value.\line
If the argument is "Retry", the wizard sequence is closed, the control returns to the Engine with the Suspend value.\line
If the argument is "Ignore", the wizard sequence is closed, the control returns to the Engine with the Finished value.\line
The above three arguments can be used only on dialogs that are not children of some other dialog.\line
If the argument is "Return", the control returns to the parent of the present dialog, if there is a parent. If there is no parent, the control returns to the Engine with the Success value.\line
For buttons on an error dialog the possible values correspond to the return codes to the Engine.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to dismiss a dialog.
\page

#{\footnote ControlEvent_NewDialog}
${\footnote ControlEvent NewDialog}
K{\footnote NewDialog}
+{\footnote ControlEvent:NewDialog}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
NewDialog ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The Handler is notified through this event when a modal dialog transitions to an other one.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
A string, the name of the new dialog.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The Handler removes the present dialog and creates the new one with the name indicated in the argument.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to signal a transition to the next or previous dialog of the same wizard sequence.
\page

#{\footnote ControlEvent_SpawnDialog}
${\footnote ControlEvent SpawnDialog}
K{\footnote SpawnDialog}
+{\footnote ControlEvent:SpawnDialog}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SpawnDialog ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The Handler is notified through this event when a modal dialog wants to create a child.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
A string, the name of the new dialog.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The Handler keeps the present dialog and creates the new one with the name indicated in the argument, placeing it on top of the old one.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to creat a child dialog, like a "Are you sure you want to cancel" dialog.
\page

#{\footnote ControlEvent_AddLocal}
${\footnote ControlEvent AddLocal}
K{\footnote AddLocal}
+{\footnote ControlEvent:AddLocal}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
AddLocal ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The SelectionManager is notified through this event when a feature or all features have to be selected as local.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
A string, either the name of the feature or "ALL" (this second option is case insensitive).
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The Handler keeps the present dialog running and calls the {\uldb ConfigureFeature}{\v MsiSelectionManager_ConfigureFeature} method of the Selection Manager.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event.
\page

#{\footnote ControlEvent_AddSource}
${\footnote ControlEvent AddSource}
K{\footnote AddSource}
+{\footnote ControlEvent:AddSource}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
AddSource ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The SelectionManager is notified through this event when a feature or all features have to be selected as source.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
A string, either the name of the feature or "ALL" (this second option is case insensitive).
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The Handler keeps the present dialog running and calls the {\uldb ConfigureFeature}{\v MsiSelectionManager_ConfigureFeature} method of the Selection Manager.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event.
\page

#{\footnote ControlEvent_Remove}
${\footnote ControlEvent Remove}
K{\footnote Remove}
+{\footnote ControlEvent:Remove}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Remove ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The SelectionManager is notified through this event when a feature or all features have to be selected for removal.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
A string, either the name of the feature or "ALL" (this second option is case insensitive).
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The Handler keeps the present dialog running and calls the {\uldb ConfigureFeature}{\v MsiSelectionManager_ConfigureFeature} method of the Selection Manager.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event.
\page

#{\footnote ControlEvent_Reinstall}
${\footnote ControlEvent Reinstall}
K{\footnote Reinstall ControlEvent}
+{\footnote ControlEvent:Reinstall}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Reinstall ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This ControlEvent allows the author to initiate a reinstall of some or all features, typically with the push
 of a {\uldb PushButton}{\v ControlType_PushButton} control.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
A string, either the name of the feature or "ALL" (this second option is case insensitive).
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The Handler keeps the present dialog running and calls the
 {\uldb ConfigureFeature}{\v MsiSelectionManager_ConfigureFeature} method of the Selection Manager.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event. Typically the same button
 is also tied to a {\uldb ReinstallMode}{\v ControlEvent_ReinstallMode} control event immediately preceeding this one.
\page


#{\footnote ControlEvent_ReinstallMode}
${\footnote ControlEvent ReinstallMode}
K{\footnote ReinstallMode ControlEvent}
+{\footnote ControlEvent:ReinstallMode}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ReinstallMode ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This ControlEvent allows the author to specify the validation mode(s) to be used during a reinstall.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
A string. For the list of possible values, see the 
 {\uldb SetReinstallMode}{\v MsiSelectionManager_SetReinstallMode} method.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The Handler keeps the present dialog running and calls the 
 {\uldb SetReinstallMode}{\v MsiSelectionManager_SetReinstallMode} method of the Selection Manager.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event. Typically the
 same button is also tied to a {\uldb Reinstall}{\v ControlEvent_Reinstall} control event immediately following this one.
\page

#{\footnote ControlEvent_CheckExistingPath}
${\footnote ControlEvent CheckExistingPath}
K{\footnote CheckExistingPath}
+{\footnote ControlEvent:CheckExistingPath}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
CheckExistingPath ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The Handler is notified through this event when the browse dialog has to be removed and it has to be verified that the selected path is writable. 
If the path is writable, the event behaves like the EndDialog, Return event. 
If the path is not writable, it displays an error dialog and returns control to the browse dialog.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
The name of the property containing the path. If the property is indirected, the property name is enclosed in square brackets.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The Handler removes the present dialog and returns to the calling dialog if the path is writable, otherwise it stays on the present dialog.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a browse dialog is tied to this event
 in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to check the selected path before returning to the selection dialog.
\page

#{\footnote ControlEvent_CheckExistingTargetPath}
${\footnote ControlEvent CheckExistingTargetPath}
K{\footnote CheckExistingTargetPath}
+{\footnote ControlEvent:CheckExistingTargetPath}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
CheckExistingTargetPath ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The Handler is notified through this event when it has to be verified that the selected path is writable. 
If the path is not writable, it blocks further control events associated with the same control.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
The name of the property containing the path. If the property is indirected, the property name is enclosed in square brackets.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The path is checked.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a browse dialog is tied to this event
 in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to check the selected path before returning to the selection dialog.
\page



#{\footnote ControlEvent_CheckPath}
${\footnote ControlEvent CheckPath}
K{\footnote CheckPath}
+{\footnote ControlEvent:CheckPath}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
CheckPath ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The Handler is notified through this event when the browse dialog has to be removed and it has to be verified that the selected path is valid. 
If the path is valid, the event behaves like the EndDialog, Return event. 
If the path is not valid, it displays an error dialog and returns control to the browse dialog.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
The name of the property containing the path. If the property is indirected, the property name is enclosed in square brackets.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The Handler removes the present dialog and returns to the calling dialog if the path is writable, otherwise it stays on the present dialog.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a browse dialog is tied to this event
 in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to check the selected path before returning to the selection dialog.
\page

#{\footnote ControlEvent_CheckTargetPath}
${\footnote ControlEvent CheckTargetPath}
K{\footnote CheckTargetPath}
+{\footnote ControlEvent:CheckTargetPath}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
CheckTargetPath ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The Handler is notified through this event when it has to be verified that the selected path is valid. 
If the path is not valid, it blocks further control events associated with the same control.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
The name of the property containing the path. If the property is indirected, the property name is enclosed in square brackets.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The path is checked.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a browse dialog is tied to this event
 in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to check the selected path before returning to the selection dialog.
\page


#{\footnote ControlEvent_SetPath}
${\footnote ControlEvent SetPath}
K{\footnote SetPath}
+{\footnote ControlEvent:SetPath}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SetPath ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The Handler is notified through this event when the browse dialog has to be removed and it has to be verified that the selected path is valid and writeable. It also calls the DirectoryManager to set the target path. 
If the path is valid, the event behaves like the EndDialog, Return event. 
If the path is not valid, it displays an error dialog and returns control to the browse dialog.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
The name of the property containing the path. If the property is indirected, the property name is enclosed in square brackets.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The Handler removes the present dialog and returns to the calling dialog if the path is writable, otherwise it stays on the present dialog.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a browse dialog is tied to this event
 in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to check the selected path before returning to the selection dialog.
\page

#{\footnote ControlEvent_SetTargetPath}
${\footnote ControlEvent SetTargetPath}
K{\footnote SetTargetPath}
+{\footnote ControlEvent:SetTargetPath}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SetTargetPath ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The Handler is notified through this event when it has to be verified that the selected path is valid and writeable. It also calls the DirectoryManager to set the target path. 
If the path is not valid, it blocks further control events associated with the same control.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
The name of the property containing the path. If the property is indirected, the property name is enclosed in square brackets.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The path is checked and set.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a browse dialog is tied to this event
 in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to check the selected path before returning to the selection dialog.
\page



#{\footnote ControlEvent_SetInstallLevel}
${\footnote ControlEvent SetInstallLevel}
K{\footnote SetInstallLevel}
+{\footnote ControlEvent:SetInstallLevel}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SetInstallLevel ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The handler calls the engine to set the installation level to the value specified in the argument
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
An integer. The new value of the installation level.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
The handler calls the engine to change the installation level.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event in the {\uldb ControlEvent}{\v ControlEvent_Table@msi.hlp} table to change the installation level.
\page



#{\footnote ControlEvent_Reset}
${\footnote ControlEvent Reset}
K{\footnote Reset}
+{\footnote ControlEvent:Reset}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Reset ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The dialog is reset. In other words all the controls on the dialog are called to undo the property changes they have performed. It should reset all the property values to what they were when the dialog was created. \line
There is one case that is not handled properly. If there are at least two controls on the same dialog linked indirectly to the same property and at least one of them started with some other property originaly, this property value is sometimes reset to its second value. Since this case is very esoteric, it is not worth the special code to handle it.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
All the controls on the dialog are called to restore the original values of their properties.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event to allow reseting all the values on the dialog, canceling all the changes performed on the page.
\page

#{\footnote ControlEvent_ValidateProductID}
${\footnote ControlEvent ValidateProductID}
K{\footnote ValidateProductID}
+{\footnote ControlEvent:ValidateProductID}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
ValidateProductID ControlEvent
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This event calls the Engine to validate the Product ID. If the validation succeeds, the PIDTemplate property is removed. Otherwise this event puts up an error message.
\par\li0{\b Published By}\par\li180
{\uldb Handler}{\v MsiHandler_Object}
\par\li0{\b Argument}\par\li180
None.
\par\li0{\b Action on Subscribers}\par\li180
None.
\par\li0{\b Action by Publisher When Subscriber Activated}\par\li180
Calls the engine to validate the Product ID.
\par\li0{\b Typical Use}\par\li180
A {\uldb PushButton}{\v ControlType_PushButton} control on a modal dialog is tied to this event to allow checking the user entry for the PID and move on to the next dialog if the entry is valid.
\page



#{\footnote DialogType_Standard}
${\footnote DialogType Standard}
K{\footnote Standard}
+{\footnote DialogType:Standard}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Standard Dialog Type
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
As the name suggests, this is the regular dialog type, used as modal dialogs in wizard sequences and modeless dialogs.
\par\li0{\b Creation}\par\li180
Through the {\uldb DialogCreate}{\v MsiDialogHandler_DialogCreate} and {\uldb AddDialog}{\v MsiDialogHandler_AddDialog} methods of the Handler.
\par\li0{\b Destruction}\par\li180
Through the {\uldb RemoveDialog}{\v MsiDialogHandler_RemoveDialog} method of the Handler.
\page

#{\footnote DialogType_Browse}
${\footnote DialogType Browse}
K{\footnote Browse}
+{\footnote DialogType:Browse}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Browse Dialog Type
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
MAC ONLY!\line
Add info here!!!
\par\li0{\b Creation}\par\li180
Info here!!!
\par\li0{\b Destruction}\par\li180
Info here!!!
\page


#{\footnote SpecialDialog_FilesInUse}
${\footnote SpecialDialog FilesInUse}
K{\footnote FilesInUse}
+{\footnote SpecialDialog:FilesInUse}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
FilesInUse Dialog
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a dialog that can be authored to inform the user of any processes that are using files that need to be
 overwritten or deleted.  This would give the user the opportunity to shut down the offending processes, thus
 avoiding the necessity of rebooting the machine in order to complete the replacement or deletion of the "in-use"
 file(s).
\par\li0{\b Creation}\par\li180
This dialog is created as required by the {\uldb InstallValidate}{\v _msi_Action_InstallValidate@msi.hlp} action.  See that
 topic for complete details.
\par\li0{\b Destruction}\par\li180
Through the {\uldb RemoveDialog}{\v MsiDialogHandler_RemoveDialog} method of the Handler.
\page

#{\footnote SpecialDialog_Browse}
${\footnote SpecialDialog Browse}
K{\footnote Browse}
+{\footnote SpecialDialog:Browse}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Browse Dialog
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This dialog is used to select a directory. The directory does not have to exist. \line
The dialog typicaly contains the following controls:\line
A {\uldb PathEdit control}{\v ControlType_PathEdit} to select the tail section of the path. This control can not loose focus if the entered tail is not valid on the present volume.\line
A {\uldb DirectoryCombo control}{\v ControlType_DirectoryCombo} to show the presently selected path, except the last segment, that is displayed by the PathEdit control.\line
A {\uldb DirectoryList control}{\v ControlType_DirectoryList} to show the folders below the directory currently displayed by the DirectoryCombo. This may also show a "phantom folder", a folder not yet created.\line
The above three controls are tied to the same property (possibly indirectly). The property is the path being selected.\line
The DirectoryCombo control specifies through its stylebits what volumetypes are displayed. On a typical Browse dialog probably all types should be turned on.\line
The dialog typically also contains three {\uldb PushButton controls}{\v ControlType_PushButton}, that serve as DirectoryUp, NewFolder and Open buttons. The buttons subscribe to the {\uldb DirectoryListUp}{\v ControlEvent_DirectoryListUp}, {\uldb DirectoryListNew}{\v ControlEvent_DirectoryListNew} and {\uldb DirectoryListOpen}{\v ControlEvent_DirectoryListOpen} control events, respectively using the {\uldb ControlEvent Table}{\v ControlEvent_Table@msi.hlp}.\line
If the dialog is designed to search for existing folders only, the NewFolder button may be omitted.\line
The above buttons usually authored as picture buttons on Win95 and NT4. Since we do not support picture buttons on NT3.51, the author has to provide alternative buttons for the NT3.51 environment.\line
When this dialog is authored, the "NewFolder" string must be defined in the {\uldb UIText Table}{\v UIText_Table@msi.hlp}.\line
When this dialog is used to select a location for files to be written, the OK button should be linked to the {\uldb CheckPath controlevent}{\v ControlEvent_CheckPath} instead of the {\uldb EndDialog controlevent}{\v ControlEvent_EndDialog} with a Return argument. The argument of the CheckPath event is the name of the property, or if it indirected than the name of the property in square brackets. This control event first checks if the selected path is writable. If it is, the event behaves like EndDialog with the Return argument. Otherwise it puts up an error dialog and returns focus to the Browse dialog.\line
\page

#{\footnote SpecialDialog_Cancel}
${\footnote SpecialDialog Cancel}
K{\footnote Cancel}
+{\footnote SpecialDialog:Cancel}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Cancel Dialog
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a modal dialog to confirm that the user indeed wants to terminate the installation. Typically contains a {\uldb Text control}{\v ControlType_Text} and two {\uldb PushButtons}{\v ControlType_PushButton}. 
The two buttons give the choices to the user the change his/her mind and return to the last dialog or confirm the termination of the install. The two buttons in the {\uldb ControlEvent Table}{\v ControlEvent_Table@msi.hlp} are linked to the {\uldb EndDialog}{\v ControlEvent_EndDialog} controlevent with the Return and Exit arguments. The Return causes the Cancel dialog to be destroyed and the focus returns to the previous dialog. The Exit causes the Handler to return control to the Engine with the appropriate code indicating that the user wants to abort. The Engine on receiving this code shuts down and puts up the {\uldb UserExit Dialog}{\v SpecialDialog_UserExit}.
\page

#{\footnote SpecialDialog_DiskCost}
${\footnote SpecialDialog DiskCost}
K{\footnote DiskCost}
+{\footnote SpecialDialog:DiskCost}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
DiskCost Dialog
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This dialog is typically spawned when the OutOfDiskSpace property is set indicating that there is not enough disk space for the currently selected installation.\line
This dialog or a variation of it may be also activated from the {\uldb Selection Dialog}{\v SpecialDialog_Selection}, to give the user an overview of the diskspace needed on the different volumes.\line
The dialog is a modal dialog and normally contains a {\uldb VolumeCostList control}{\v ControlType_VolumeCostList} and a {\uldb PushButton}{\v ControlType_PushButton} that returns the user to the previous dialog. It can ofcourse, contain other controls like static text or pictures.\line

\page

#{\footnote SpecialDialog_Error}
${\footnote SpecialDialog Error}
K{\footnote Error}
+{\footnote SpecialDialog:Error}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Error Dialog
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This modal dialog is used to display an error message. More than one error dialog is possible in one installation. The ErrorDialog property specifies which dialog is used as an error dialog. If this property is not set or does not point to a valid error dialog, the error messages will not be displayed, only logged, along with a warning about the missing error dialog.\line
This dialog must have the {\uldb ErrorDialog}{\v DialogStyle_Error} style bit set. The dialog must have a {\uldb Text control}{\v ControlType_Text} named ErrorText. This control will display the text of the error message.\line
The dialog is also authored with seven {\uldb PushButtons}{\v ControlType_PushButton}. These buttons must specify the {\uldb EndDialog}{\v ControlEvent_EndDialog} control event in the {\uldb ControlEvent Table}{\v ControlEvent_Table@msi.hlp} with the following arguments: ErrorAbort, ErrorCancel, ErrorIgnore, ErrorNo, ErrorOk, ErrorRetry, ErrorYes.\line
The buttons should be authored approximately at the same position. When the dialog is created only a subset of these buttons will be created, depending on the message, and the X coordinate of the buttons will be modified so the displayed buttons are evenly spaced. The other three coordinates of the buttons are not changed. Since the buttons are rearranged, the author should make sure, that no other control is placed in the same horizontal reagon of the dialog as the buttons.\line
The error message can consist of three segments. The first segment is the text of the error message. This part is required. The second part is a list of letters specifying what buttons must be created. The list is enclosed in curly braces. The letter codes are the first letters of the words abort, cancel, ignore, no, Ok, retry, yes. All the letter codes must be lower case except one, that designates the default button. If this list of codes is missing or empty, it is assumed to be \{O\}, i.e. putting up the OK button.\line
The third part of the error message is optional. If it is present this string is used as the title for the dialog overwriting the title entered in the {\uldb Dialog Table}{\v _msi_Dialog_Table@msi.hlp}. If this part is present the second part must be present, too, to separate the part. (remember, the second part can be an empty list \{\}).\line
In case of the error dialog the FirstControl, DefaultControl and CancelControl entries in the Dialog Table are ignored, and the default button specified by the message plays all three roles.\line
\page

#{\footnote SpecialDialog_Exit}
${\footnote SpecialDialog Exit}
K{\footnote Exit}
+{\footnote SpecialDialog:Exit}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Exit Dialog
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a modal dialog that is displayed at the end of a successfull install. Typically contains only some text and an OK button. What is special about this dialog, that its name has to appear in the {\uldb AdminSequence Table}{\v _msi_AdminSequence_Table@msi.hlp} and {\uldb InstallSequence Table}{\v InstallSequence_Table@msi.hlp} with -1 as the sequence number.
\page

#{\footnote SpecialDialog_FatalError}
${\footnote SpecialDialog FatalError}
K{\footnote FatalError}
+{\footnote SpecialDialog:FatalError}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
FatalError Dialog
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a modal dialog that is displayed at the end of an install, if it terminated because of a fatal error. Typically contains only some text and an OK button. What is special about this dialog, that its name has to appear in the {\uldb AdminSequence Table}{\v _msi_AdminSequence_Table@msi.hlp} and {\uldb InstallSequence Table}{\v _msi_InstallSequence_Table@msi.hlp} with -3 as the sequence number.
\page


#{\footnote SpecialDialog_LicenseAgreement}
${\footnote SpecialDialog LicenseAgreement}
K{\footnote LicenseAgreement}
+{\footnote SpecialDialog:LicenseAgreement}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
LicenseAgreement Dialog
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a modal dialog that is used to display the license agreement to the user. Typically the text of the agreement is displayed in a {\uldb ScrollableText control}{\v ControlType_ScrollableText}. When the database can handle arbitrary length strings, the text (in RTF format) will be read from the text field of the control. For the time being the text is hardwired in the control.\line
The dialog typically also contains a pair of radiobuttons that let the user accept or reject the agreement. For legal reasons it is advisable that neither of the buttons is selected initally, forcing the user to make an active choice. This can be achieved by not having an inital value for the property linked to the {\uldb RadioButtonGroup}{\v ControlType_RadioButtonGroup}. The author may also want to disable/enable the next button on this dialog, depending on the choice made. An other possible situation is, when the next button takes the user to different dialogs depending on the choice.\line

\page

#{\footnote SpecialDialog_Selection}
${\footnote SpecialDialog Selection}
K{\footnote Selection}
+{\footnote SpecialDialog:Selection}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Selection Dialog
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is modal dialog letting the user select individual selection items. The dialog contains a {\uldb SelectionTree control}{\v ControlType_SelectionTree} that displays the main information. This controls publishes several events that change the display on other controls of the dialog.
Typically there are four {\uldb Text controls}{\v ControlType_Text} subscribing to the {\uldb SelectionAction}{\v ControlEvent_SelectionAction}, {\uldb SelectionDescription}{\v ControlEvent_SelectionDescription}, {\uldb SelectionSize}{\v ControlEvent_SelectionSize} and {\uldb SelectionPath}{\v ControlEvent_SelectionPath} events using the {\uldb Text controlattribute}{\v ControlAttribute_Text}. 
There is also an {\uldb Icon control}{\v ControlType_Icon} that subscribes to the {\uldb SelectionIcon}{\v ControlEvent_SelectionIcon} event through the {\uldb ImageHandle attribute}{\v ControlAttribute_ImageHandle}. The above controls use the {\uldb EventMapping Table}{\v _msi_EventMapping_Table@msi.hlp} to specify these subscriptions. 
There is also a {\uldb PushButton}{\v ControlType_PushButton} that subscribes to the {\uldb SelectionBrowse}{\v ControlEvent_SelectionBrowse} event using the {\uldb ControlEvent Table}{\v ControlEvent_Table@msi.hlp} and giving the name of the {\uldb Browse dialog}{\v SpecialDialog_Browse} as the argument. 
When a SelectionTree control is authored, the AbsentPath, SelAbsentAbsent, SelAbsentLocal, SelAbsentCD, SelAbsentNetwork, SelLocalAbsent, SelLocalLocal, SelLocalCD, SelLocalNetwork, SelCDAbsent, SelNetworkAbsent, SelCDLocal, SelNetworkLocal, SelCDCD, SelNetworkNetwork, SelChildCostPos, SelChildCostNeg, SelParentCostPosPos, SelParentCostPosNeg, SelParentCostNegPos, SelParentCostNegNeg, MenuAbsent, MenuLocal, MenuCD, MenuNetwork strings must be specified in the {\uldb UIText table}{\v UIText_Table@msi.hlp}. 
The selection tree gets populated only if the DirectoryInitialize, CostInitialize and CostFinalize actions were all previously called.
\page

#{\footnote SpecialDialog_UserExit}
${\footnote SpecialDialog UserExit}
K{\footnote UserExit}
+{\footnote SpecialDialog:UserExit}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
UserExit Dialog
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
This is a modal dialog that is displayed at the end of an install, that was aborted by the user. Typically contains only some text and an OK button. What is special about this dialog, that its name has to appear in the {\uldb AdminSequence Table}{\v _msi_AdminSequence_Table@msi.hlp} and {\uldb InstallSequence Table}{\v _msi_InstallSequence_Table@msi.hlp} with -2 as the sequence number.
\page


}
