{\rtf1\ansi {\fonttbl{\f0\fswiss Helv;}{\f1\fmodern Courier New;}} {\colortbl;} \fs20

#{\footnote MsiConfigurationManager_Object}
${\footnote MsiConfigurationManager Object}
K{\footnote MsiConfigurationManager}
+{\footnote Class:MsiConfigurationManager}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
MsiConfigurationManager Object
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The MsiConfigurationManager object provides the MsiEngine access to configuraion
data. The Configuration Manager performs the follows tasks:\par
 
\line 1. Manages product information and databases.
\line 2. Manages registry backward compatibility.
\line 3. Manages shared components and their clients.
\line 4. Provides a facility for locating a file that supports a particular
 component.
\line 5. Manages volumes.
\par
\par\li0{\b Properties}\par\li180
{\uldb Services}{\v MsiConfigurationManager_Services}\line
\par\li0{\b Methods}\par\li180
{\uldb RunScript}{\v MsiConfigurationManager_RunScript}\line
\line
{\uldb RegisterRollbackScript}{\v MsiConfigurationManager_RegisterRollbackScript}\line
{\uldb UnregisterRollbackScript}{\v MsiConfigurationManager_UnregisterRollbackScript}\line
{\uldb RollbackScripts}{\v MsiConfigurationManager_RollbackScripts}\line
\line
{\uldb RegisterProduct}{\v MsiConfigurationManager_RegisterProduct}\line
{\uldb RegisterUser}{\v MsiConfigurationManager_RegisterUser}\line
{\uldb UnregisterProduct}{\v MsiConfigurationManager_UnregisterProduct}\line
\line
{\uldb RegisterComponent}{\v MsiConfigurationManager_RegisterComponent}\line
{\uldb UnregisterComponent}{\v MsiConfigurationManager_UnregisterComponent}\line
\line
{\uldb RegisterFolder}{\v MsiConfigurationManager_RegisterFolder}\line
{\uldb IsFolderRemovable}{\v MsiConfigurationManager_IsFolderRemovable}\line
{\uldb UnregisterFolder}{\v MsiConfigurationManager_UnregisterFolder}\line
\line
{\uldb DoInstall}{\v MsiConfigurationManager_DoInstall}\line
\line
{\uldb LockServer}{\v MsiConfigurationManager_LockServer}\line
{\uldb UnlockServer}{\v MsiConfigurationManager_UnlockServer}\line
{\uldb InstallFinalize}{\v MsiConfigurationManager_InstallFinalize}\line
{\uldb SetLastUsedSource}{\v MsiConfigurationManager_SetLastUsedSource}\line
\line
\page

#{\footnote MsiConfigurationManager_Services}
${\footnote MsiConfigurationManager.Services}
+{\footnote MsiConfigurationManager:Services}
K{\footnote SERVICES}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
Services Property
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
The MsiServices object used by the Configuration Manager. Read-only.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .Services}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\page

#{\footnote MsiConfigurationManager_ProductDatabasePath}
${\footnote MsiConfigurationManager.ProductDatabasePath}
+{\footnote MsiConfigurationManager:ProductDatabasePath}
K{\footnote ProductDatabasePath}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b}
This method is undocumented.
\page

#{\footnote MsiConfigurationManager_RunScript}
${\footnote MsiConfigurationManager.RunScript}
+{\footnote MsiConfigurationManager:RunScript}
K{\footnote RunScript}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
RunScript Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Runs an installation script.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .RunScript({\i scriptFile, userToken, message})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b scriptfile}\line
Required. The full path (string) to an installation script file.
\par{\i\b userToken}\line
Required. Handle to the user to impersonate while executing the script. Pass 0 for no user impersonation.
\par{\i\b message}\line
Required. Any object supporting the {\uldb MsiMessage}{\v MsiMessage_Object}
 interface. Installation progress will be reported via this object.
\par\fi0\li0{\b Remarks}\par\li180
{\uldb Scriptfile format}{\v Server_ScriptFormat}
\page


#{\footnote MsiConfigurationManager_InstallFinalize}
${\footnote MsiConfigurationManager.InstallFinalize}
+{\footnote MsiConfigurationManager:InstallFinalize}
K{\footnote InstallFinalize}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
InstallFinalize Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Rolls back the system to the given date, or purges the system of
 backup files created before the given date. See
  {\uldb MsiExecute.RollbackFinalize}{\MsiExecute_RollbackFinalize} for more info.
Also removes in-progress information for the install if the install was successful or if the install
 was rolled back.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .InstallFinalize({\i state, rollback, userToken, message})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b state}\line
Required. The return status of the last executed action. This value is used to determine
 whether to roll back the system or to purge backup files. This value is an enumeration
 iesEnum, as described in the {\uldb DoAction}{\v MsiEngine_DoAction} method.  
\par{\i\b rollback}\line
Required. True to rollback the install if {\i\b state} indicates failure or cancellation.
\par{\i\b userToken}\line
Required. Handle to the user to impersonate while rolling back. Pass 0 for no user impersonation.
\par{\i\b message}\line
Required. Any object supporting the {\uldb MsiMessage}{\v MsiMessage_Object}
 interface. Rollback progress will be reported via this object.
\page

#{\footnote MsiConfigurationManager_LockServer}
${\footnote MsiConfigurationManager.LockServer}
+{\footnote MsiConfigurationManager:LockServer}
K{\footnote LockServer}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
LockServer Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .LockServer({\i})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\page

#{\footnote MsiConfigurationManager_UnlockServer}
${\footnote MsiConfigurationManager.UnlockServer}
+{\footnote MsiConfigurationManager:UnlockServer}
K{\footnote UnlockServer}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
UnlockServer Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .UnlockServer({\i})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\page

#{\footnote MsiConfigurationManager_SetLastUsedSource}
${\footnote MsiConfigurationManager.SetLastUsedSource}
+{\footnote MsiConfigurationManager:SetLastUsedSource}
K{\footnote SetLastUsedSource}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
SetLastUsedSource Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Sets the last used source for a product, optionally adding it to the product's source list.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .SetLastUsedSource({\i strProductCode, strSource, fAddToList})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b strProductCode}\line
Required. The product code for the product whose source is being updated.
\par{\i\b strPath}\line
Required. The source to be added, in the form of a path (e.g. D:\\X\\Y, \\\\foo\\bar\\x\\y) (string)
\par{\i\b fAddToList}\line
Required. If true then the source is added to the list if it's not already there. (see Remarks for restrictions)
\par\fi0\li0{\b Remarks}\par\li180
SetLastUsedSource only adds new sources if the following criteria are met:\line
1) The user is either an Admin or has the EnableBrowse policy value set to 1\line
2) The source is of a type allowed by the SearchOrder policy\line
\page

#{\footnote MsiConfigurationManager_RegisterRollbackScript}
${\footnote MsiConfigurationManager.RegisterRollbackScript}
+{\footnote MsiConfigurationManager:RegisterRollbackScript}
K{\footnote RegisterRollbackScript}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
RegisterRollbackScript Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Registers a rollback script with the configuration manager. The date and 
 time of the registration is saved along with the script file path.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .RegisterRollbackScript({\i scriptFile})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b scriptfile}\line
Required. The full path (string) to a rollback script file.
\par\fi0\li0{\b Remarks}\par\li180
Registration of a scriptfile that is already registered will overwrite the old
 registration.
\page

#{\footnote MsiConfigurationManager_UnregisterRollbackScript}
${\footnote MsiConfigurationManager.UnregisterRollbackScript}
+{\footnote MsiConfigurationManager:UnregisterRollbackScript}
K{\footnote UnregisterRollbackScript}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
UnregisterRollbackScript Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Unregisters a rollback script with the configuration manager.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .UnregisterRollbackScript({\i scriptFile})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b scriptfile}\line
Required. The full path (string) to a rollback script file.
\par\fi0\li0{\b Remarks}\par\li180
Unregistration of a scriptfile that is not already registered will cause
 no action to be taken.
\page

#{\footnote MsiConfigurationManager_RollbackScripts}
${\footnote MsiConfigurationManager.RollbackScripts}
+{\footnote MsiConfigurationManager:RollbackScripts}
K{\footnote RollbackScripts}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
RollbackScripts Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Returns an collection of strings that each contain the date that the rollback 
script was generated and the name of the rollback script. The collection is
restricted to the set of scripts that meet the specifed date restriction.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .RollbackScripts({\i date, after})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b date}\line
Required. The date that, along with {\b after}, specifies
 which rollback scripts should be in the collection.
\par{\i\b after}\line
Required. If {\b after} is true then the collection will contain all rollback 
 scripts registered on or after {\b date}. If {\b after} is false then the
 collection will contain all rollback scripts registered on or before {\b date}.
\par\fi0\li0{\b Remarks}\par\li180
The strings in the collection are of the following form:\line
\tab MsiDate#scriptfilePath, e.g. "3043#C:\\windows\\aim\\rb5365.scr"
\page

#{\footnote MsiConfigurationManager_RegisterProduct}
${\footnote MsiConfigurationManager.RegisterProduct}
+{\footnote MsiConfigurationManager:RegisterProduct}
K{\footnote RegisterProduct}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
RegisterProduct Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Registers a product with the Configuration Manager. This supplements the product
 information that was advertised.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .RegisterProduct({\i productInfo})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b productInfo}\line
Required. A record containing the product information. See the Remarks section
 for the record's details.
\par\fi0\li0{\b Remarks}\par\li180
The record returned contains the following fields:\par
\tab {\f1\i Field Number        }  {\i Field Contents}\line
\tab {\f1 icmrpfProductKey         -} product code\line
\tab {\f1 icmrpfDisplayName        -} ProductName property\line
\tab {\f1 icmrpfVersionString      -} ProductVersion property\line
\tab {\f1 icmrpfVersionMajorString -} From ProductVersion property\line
\tab {\f1 icmrpfVersionMinorString -} From ProductVersion property\line
\tab {\f1 icmrpfHelpLink           -} From SupportURL property\line
\tab {\f1 icmrpfHelpTelephone      -} From SupportPhone property\line
\tab {\f1 icmrpfInstallLocation    -} TBD -- Currently TARGETDIR property\line
\tab {\f1 icmrpfInstallSource      -} TBD -- Currently SOURCEDIR property\line
\tab {\f1 icmrpfInstallDate        -} String form of install date\line
\tab {\f1 icmrpfPublisher          -} Manufacturer property\line
\tab {\f1 icmrpfLocalPackage       -} cached database location\line
\tab {\f1 icmrpfURLInfoAbout       -} SupportURL property\line
\tab {\f1 icmrpfURLUpdateInfo      -} TBD\line
\tab {\f1 icmrpfUninstallString    -} TBD\line
\tab {\f1 icmrpfModifyString       -} msiexec /c {ProductCode} /qf\line
\tab {\f1 icmrpfUninstallPath      -} msiexec /t {ProductCode} /qb\line
\page

#{\footnote MsiConfigurationManager_RegisterUser}
${\footnote MsiConfigurationManager.RegisterUser}
+{\footnote MsiConfigurationManager:RegisterUser}
K{\footnote RegisterUser}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
RegisterUser Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Registers user information for a registered product. This is separate from
 RegisterProduct to allow the collection of user information to be deferred
 until first-run, if desired.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .RegisterUser({\i productKey, userInfo})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b productKey}\line
Required. The productKey for the product with which the user info is to be
 associated
\par{\i\b userInfo}\line
Required. A record containing the user information. See the Remarks section
 for the record's details.
\par\fi0\li0{\b Remarks}\par\li180
The record returned contains the following fields:\par
\tab {\f1\i Field Number    }  {\i Field Contents}\line
\tab {\f1 icmrufOwner      -}  User name from UI or registry\line
\tab {\f1 icmrufCompany    -}  Organization name from UI or registry\line
\tab {\f1 icmrufProductId  -}  Generated PID, 23 characters including 3 dashes\line
\page


#{\footnote MsiConfigurationManager_RegisterComponent}
${\footnote MsiConfigurationManager.RegisterComponent}
+{\footnote MsiConfigurationManager:RegisterComponent}
K{\footnote RegisterComponent}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
RegisterComponent Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Registers an component. 
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .RegisterComponent({\i componentCode, keyPath,
 supersededComponents})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b componentCode}\line
Required. The GUID that represents the component.
\par{\i\b keyPath}\line
The path to the key file, registry key, or folder for this component.
\par{\i\b supersededComponents}\line
Optional. An MsiRecord containing the componentIds of components that are
 superseded by this component.
\page

#{\footnote MsiConfigurationManager_UnregisterComponent}
${\footnote MsiConfigurationManager.UnregisterComponent}
+{\footnote MsiConfigurationManager:UnregisterComponent}
K{\footnote UnregisterComponent}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
UnregisterComponent Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Unregisters a component.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .UnregisterComponent({\i productKey, componentCode})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b componentCode}\line
Required. The GUID that represents the component.
\page

#{\footnote MsiComponentManager_Object}
${\footnote MsiComponentManager Object}
K{\footnote MsiComponentManager}
+{\footnote Class:MsiComponentManager}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
MsiComponentManager Object
\line\fs18\b0\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
 
The Component Manager performs the follows tasks:\par
 
\line 1. Supports run-time run-time installation and uninstallation of components
\line 2. Allows an application's components to be dynamically located at run-time,
 based on currently available components.
\page


#{\footnote MsiConfigurationManager_RegisterFolder}
${\footnote MsiConfigurationManager.RegisterFolder}
+{\footnote MsiConfigurationManager:RegisterFolder}
K{\footnote RegisterFolder}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
RegisterFolder Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Registers a folder with the Configuration Manager.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .RegisterFolder({\i path, fExplicitCreation})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b path}\line
Required. A path object pointing to the folder to be registered.
\par{\i\b component}\line
Required. A bool indicating whether the component was explicitly created.
\par\fi0\li0{\b Remarks}\par\li180
\page

#{\footnote MsiConfigurationManager_IsFolderRemovable}
${\footnote MsiConfigurationManager.IsFolderRemovable}
+{\footnote MsiConfigurationManager:IsFolderRemovable}
K{\footnote IsFolderRemovable}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
IsFolderRemovable Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Registers a folder with the Configuration Manager.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .IsFolderRemovable({\i path, fExplicit})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b path}\line
Required. A path object pointing to the folder to be registered.
\par{\i\b amComponent}\line
Required. Required. A bool indicating whether the component was explicitly created.
\par\fi0\li0{\b Remarks}\par\li180
\page


#{\footnote MsiConfigurationManager_UnregisterFolder}
${\footnote MsiConfigurationManager.UnregisterFolder}
+{\footnote MsiConfigurationManager:UnregisterFolder}
K{\footnote UnregisterFolder}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
UnregisterFolder Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Unregisters a folder with the Configuration Manager. Nothing is done if
 the folder wasn't registered.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .UnregisterFolder({\i path})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b path}\line
Required. A path object pointing to the folder to be unregistered.
\par\fi0\li0{\b Remarks}\par\li180
\page

#{\footnote MsiConfigurationManager_UnregisterProduct}
${\footnote MsiConfigurationManager.UnregisterProduct}
+{\footnote MsiConfigurationManager:UnregisterProduct}
K{\footnote UnregisterProduct}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
UnregisterProduct Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Unregisters a product with the Configuration Manager. Removes all references
 to the product from the Configuration Database, but only if no client products remain.
 Returns a boolean indicating whether any additional clients remain.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .UnregisterProduct({\i productKey, parentKey})}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i\b productKey}\line
Required. The product key identifying the product to be unregistered.
\par{\i\b parentKey}\line
Optional. Only if a nested install: the product key of parent product.
\par\fi0\li0{\b Remarks}\par\li180
A non-nested install is considered as having the user as a client, such that when
 a parent product installs it again as a child, it will be held by two clients,
 and not released until both the parent and the standalone (via Add/Remove or API) goes away.
\page

#{\footnote MsiConfigurationManager_DoInstall}
${\footnote MsiConfigurationManager.DoInstall}
+{\footnote MsiConfigurationManager:DoInstall}
K{\footnote DoInstall}
\pard\f0\cf1\sb90{\li-150\fi150\brdrb\fs24\b
DoInstall Method
\line\tx360\tab\fs18\b0{\uldb MsiConfigurationManager Object}{\v MsiConfigurationManager_Object}
\tx3000\tab{\uldb Msi Objects}{\v Msi_Objects}
\tx5000\tab{\uldb Database Tables}{\v _msi_Installation_Database_Tables_List@msi.hlp}
\par}\li180
Runs an install.
\par\li0{\b Syntax}\par\li500\fi-320
{\i object}{\b .DoInstall()}
\par{\i object}\line
Required. The MsiConfigurationManager object.
\par{\i product}\line
Required. Product code or path to database .
\par{\i action}\line
Optional. The action to run
\par{\i object}\line
Optional. Property=Value string.
\par{\i object}\line
Required. Message object for UI callback.
\par\fi0\li0{\b Remarks}\par\li180
\page
}
