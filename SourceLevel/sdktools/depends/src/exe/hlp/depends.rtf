{\rtf1\ansi\ansicpg1252\uc1\deff6\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f6\froman\fcharset0\fprq2{\*\panose 02020603040505020304}Tms Rmn{\*\falt Times New Roman};}
{\f7\fswiss\fcharset0\fprq2{\*\panose 020b0604020202030204}Helv{\*\falt Arial};}{\f10\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f64\froman\fcharset238\fprq2 Times New Roman CE;}{\f65\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f67\froman\fcharset161\fprq2 Times New Roman Greek;}{\f68\froman\fcharset162\fprq2 Times New Roman Tur;}{\f69\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f70\froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f71\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f72\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f84\fmodern\fcharset238\fprq1 Courier New CE;}{\f85\fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f87\fmodern\fcharset161\fprq1 Courier New Greek;}{\f88\fmodern\fcharset162\fprq1 Courier New Tur;}{\f89\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f90\fmodern\fcharset178\fprq1 Courier New (Arabic);}
{\f91\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f92\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 
\faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 1;}{\s2\ql \li0\ri0\sb120\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 
\b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 2;}{\s3\ql \li360\ri0\nowidctlpar\faauto\outlinelevel2\rin0\lin360\itap0 \b\f6\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 3;}{
\s4\ql \li360\ri0\nowidctlpar\faauto\outlinelevel3\rin0\lin360\itap0 \f6\fs24\ul\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 4;}{\s5\ql \li720\ri0\nowidctlpar\faauto\outlinelevel4\rin0\lin720\itap0 
\b\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 5;}{\s6\ql \li720\ri0\nowidctlpar\faauto\outlinelevel5\rin0\lin720\itap0 \f6\fs20\ul\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 6;}{
\s7\ql \li720\ri0\nowidctlpar\faauto\outlinelevel6\rin0\lin720\itap0 \i\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 7;}{\s8\ql \li720\ri0\nowidctlpar\faauto\outlinelevel7\rin0\lin720\itap0 
\i\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 8;}{\s9\ql \li720\ri0\nowidctlpar\faauto\outlinelevel8\rin0\lin720\itap0 \i\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext0 heading 9;}{\*
\cs10 \additive \ssemihidden Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 
\f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 Shortcut;}{\s16\ql \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 header;}{
\s17\ql \li0\ri0\nowidctlpar\tqc\tx4320\tqr\tx8640\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext17 footer;}{\s18\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext18 Body Text 2;}{\s19\ql \fi-360\li360\ri0\nowidctlpar\faauto\rin0\lin360\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext19 
Body Text Indent 2;}{\s20\ql \fi-360\li360\ri0\sa80\nowidctlpar\faauto\rin0\lin360\itap0 \f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext20 Body Text Indent 3;}{\s21\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext21 Body Text;}{\*\cs22 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\*\cs23 \additive \ul\cf12 \sbasedon10 FollowedHyperlink;}{\*\cs24 \additive \i \sbasedon10 Emphasis;}}
{\*\listtable{\list\listtemplateid-955857682\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}\fi-360\li2880
\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel
\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360
\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li6480\jclisttab\tx6480\lin6480 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703
\'02\'06.;}{\levelnumbers\'01;}\fi-360\li7200\jclisttab\tx7200\lin7200 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}
\fi-360\li7920\jclisttab\tx7920\lin7920 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li8640\jclisttab\tx8640\lin8640 }
{\listname ;}\listid93211878}{\list\listtemplateid2124439334\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}
\fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li3600\jclisttab\tx3600\lin3600 }
{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li6480\jclisttab\tx6480\lin6480 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703
\'02\'06.;}{\levelnumbers\'01;}\fi-360\li7200\jclisttab\tx7200\lin7200 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}
\fi-360\li7920\jclisttab\tx7920\lin7920 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li8640\jclisttab\tx8640\lin8640 }
{\listname ;}\listid977297178}{\list\listtemplateid-2036954796\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720
\jclisttab\tx720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel
\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703
\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\fi-360\li5760
\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6480\jclisttab\tx6480\lin6480 }{\listname 
;}\listid1101341772}{\list\listtemplateid-1666543578\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720
\jclisttab\tx720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel
\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360
\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703
\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}
\fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6480\jclisttab\tx6480\lin6480 }
{\listname ;}\listid1155796957}{\list\listtemplateid1453067696\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}
\fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440\jclisttab\tx1440\lin1440 }
{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703
\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}
\fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6480\jclisttab\tx6480\lin6480 }
{\listname ;}\listid1256859521}{\list\listtemplateid-1659894818\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}
\fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li3600\jclisttab\tx3600\lin3600 }
{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li6480\jclisttab\tx6480\lin6480 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703
\'02\'06.;}{\levelnumbers\'01;}\fi-360\li7200\jclisttab\tx7200\lin7200 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}
\fi-360\li7920\jclisttab\tx7920\lin7920 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li8640\jclisttab\tx8640\lin8640 }
{\listname ;}\listid1541283636}{\list\listtemplateid-1770995748\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}
\fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1800\jclisttab\tx1800\lin1800 }
{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2520\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc0\levelnfcn0\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\fi-360\li3240\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3960\jclisttab\tx3960\lin3960 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4680\jclisttab\tx4680\lin4680 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703
\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5400\jclisttab\tx5400\lin5400 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}
\fi-360\li6120\jclisttab\tx6120\lin6120 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6840\jclisttab\tx6840\lin6840 }
{\listname ;}\listid1575774309}{\list\listtemplateid1009952856\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid-918394782\'01\u-3913 ?;}{\levelnumbers;}
\f3\fs20\fbias0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid-709563274\'01o;}{\levelnumbers;}\f2\fs20\fbias0 \fi-360\li1440
\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid430098968\'01\u-3929 ?;}{\levelnumbers;}\f10\fs20\fbias0 \fi-360\li2160
\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid-2056906332\'01\u-3929 ?;}{\levelnumbers;}\f10\fs20\fbias0 \fi-360\li2880
\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid-289498310\'01\u-3929 ?;}{\levelnumbers;}\f10\fs20\fbias0 \fi-360\li3600
\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid2111861734\'01\u-3929 ?;}{\levelnumbers;}\f10\fs20\fbias0 \fi-360\li4320
\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid-843389320\'01\u-3929 ?;}{\levelnumbers;}\f10\fs20\fbias0 \fi-360\li5040
\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid935644616\'01\u-3929 ?;}{\levelnumbers;}\f10\fs20\fbias0 \fi-360\li5760
\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid10262350\'01\u-3929 ?;}{\levelnumbers;}\f10\fs20\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 
}{\listname ;}\listid1670985838}{\list\listtemplateid862720122\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}
\fi-360\li2880\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li3600\jclisttab\tx3600\lin3600 }
{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'02.;}{\levelnumbers\'01;}\fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0
\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext
\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li6480\jclisttab\tx6480\lin6480 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698703
\'02\'06.;}{\levelnumbers\'01;}\fi-360\li7200\jclisttab\tx7200\lin7200 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}
\fi-360\li7920\jclisttab\tx7920\lin7920 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace360\levelindent0{\leveltext\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li8640\jclisttab\tx8640\lin8640 }
{\listname ;}\listid1676229682}{\list\listtemplateid1484672890\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat0\levelspace0\levelindent0{\leveltext\leveltemplateid1517350956\'01-;}{\levelnumbers;}
\loch\af0\hich\af0\dbch\af0\fbias0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 
\fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li2160
\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li2880\jclisttab\tx2880\lin2880 }
{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel\levelnfc23\levelnfcn23
\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698689\'01\u-3913 ?;}{\levelnumbers;}\f3\fbias0 \fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\leveltemplateid67698691\'01o;}{\levelnumbers;}\f2\fbias0 \fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698693\'01\u-3929 ?;}{\levelnumbers;}\f10\fbias0 \fi-360\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid1837574457}{\list\listtemplateid-6669388\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0
\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'00.;}{\levelnumbers\'01;}\fbias0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\leveltemplateid67698713\'02\'01.;}{\levelnumbers\'01;}\fi-360\li1440\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715
\'02\'02.;}{\levelnumbers\'01;}\fi-180\li2160\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'03.;}{\levelnumbers\'01;}\fi-360\li2880
\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698713\'02\'04.;}{\levelnumbers\'01;}\fi-360\li3600\jclisttab\tx3600\lin3600 }{\listlevel
\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698715\'02\'05.;}{\levelnumbers\'01;}\fi-180\li4320\jclisttab\tx4320\lin4320 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\leveltemplateid67698703\'02\'06.;}{\levelnumbers\'01;}\fi-360\li5040\jclisttab\tx5040\lin5040 }{\listlevel\levelnfc4\levelnfcn4\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0
\levelindent0{\leveltext\leveltemplateid67698713\'02\'07.;}{\levelnumbers\'01;}\fi-360\li5760\jclisttab\tx5760\lin5760 }{\listlevel\levelnfc2\levelnfcn2\leveljc2\leveljcn2\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext
\leveltemplateid67698715\'02\'08.;}{\levelnumbers\'01;}\fi-180\li6480\jclisttab\tx6480\lin6480 }{\listname ;}\listid2055545539}}{\*\listoverridetable{\listoverride\listid2055545539\listoverridecount0\ls1}{\listoverride\listid1575774309
\listoverridecount0\ls2}{\listoverride\listid1670985838\listoverridecount0\ls3}{\listoverride\listid1837574457\listoverridecount0\ls4}{\listoverride\listid1541283636\listoverridecount0\ls5}{\listoverride\listid93211878\listoverridecount0\ls6}
{\listoverride\listid977297178\listoverridecount0\ls7}{\listoverride\listid1676229682\listoverridecount0\ls8}{\listoverride\listid1155796957\listoverridecount0\ls9}{\listoverride\listid1256859521\listoverridecount0\ls10}{\listoverride\listid1101341772
\listoverridecount0\ls11}}{\*\revtbl {Unknown;}}{\*\rsidtbl \rsid859438\rsid1605003\rsid2363271\rsid2649292\rsid2781915\rsid2883638\rsid3225818\rsid4272917\rsid4733152\rsid4881755\rsid5201950\rsid5263639\rsid5653359\rsid6440090\rsid6901983\rsid7431403\rsid7682392
\rsid7695777\rsid8014554\rsid9523310\rsid9983699\rsid10114273\rsid10421061\rsid11421346\rsid11668403\rsid11670650\rsid11684848\rsid13069465\rsid14046983\rsid14092412\rsid14318957\rsid14564224\rsid14949442\rsid15101267\rsid15680276\rsid16255412}
{\*\generator Microsoft Word 10.0.3416;}{\info{\title AFXCORE}{\subject MFC Core RTF Help}{\author Steve P. Miller (stevemil)}{\operator Steve Miller}{\creatim\yr2000\mo4\dy28\hr17\min52}{\revtim\yr2002\mo4\dy15\hr14\min7}{\version137}{\edmins1222}
{\nofpages127}{\nofwords24653}{\nofchars140525}{\*\company  }{\nofcharsws164849}{\vern16453}}\margl1440\margr1440 \deftab360\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120
\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale245\viewzk2\nolnhtadjtbl\rsidroot2649292 \fet0{\*\ftncn \pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\insrsid5201950 
\par }}\sectd \linex576\endnhere\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb
\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # contents}}K{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Contents}}$
{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Contents}}}{\fs32\insrsid5201950 Dependency Walker Help Contents
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \fi-360\li720\ri0\sb80\widctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 What\rquote s New in Version 2.1}{\v\f7\fs24\insrsid5201950 whats_new}{\f7\fs24\insrsid5201950 

\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Frequently Asked Questions (FAQ)}{\v\f7\fs24\insrsid5201950 faq}{\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par }{\b\f7\fs24\insrsid5201950 Overview of Dependency Walker
\par }\pard \ql \fi-360\li720\ri0\sb80\widctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Why Use Dependency Walker?}{\v\f7\fs24\insrsid5201950 overview_1}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Using Dependency Walker for Trouble Shooting Modules}{\v\f7\fs24\insrsid5201950 overview_2}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Using Dependency Walker for General Information about Modules}{\v\f7\fs24\insrsid5201950 overview_3}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Command Line Options and Return Values}{\v\f7\fs24\insrsid5201950 HIDR_COMMAND_LINE_HELP}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Overview of Module Version Numbers}{\v\f7\fs24\insrsid5201950 version_numbers}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Types of Dependencies Handled By Dependency Walker}{\v\f7\fs24\insrsid5201950 dependency_types}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Using Application Profiling to Detect Dynamic Dependencies}{\v\f7\fs24\insrsid5201950 application_profiling}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 How to Interpret Warnings and Errors in Dependency Walker}{\v\f7\fs24\insrsid5201950 interpreting_errors}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Dependency Walker Path (DWP) Files}{\v\f7\fs24\insrsid5201950 path_files}{\f7\fs24\insrsid5201950 
\par }\pard\plain \s16\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f7\fs24\insrsid5201950 Understanding the Module Session
\par }\pard \ql \fi-360\li720\ri0\sb80\widctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 

\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 
\par }\pard\plain \s16\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f7\fs24\insrsid5201950 Menus and Toolbar
\par }\pard \ql \fi-360\li720\ri0\sb80\widctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The File Menu}{\v\f7\fs24\insrsid5201950 file_menu}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The Edit Menu}{\v\f7\fs24\insrsid5201950 edit_menu}{\f7\fs24\uldb\insrsid5201950 
\par }{\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The View Menu}{\v\f7\fs24\insrsid5201950 view_menu}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The Options Menu}{\v\f7\fs24\insrsid5201950 options_menu}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The Profile Menu}{\v\f7\fs24\insrsid5201950 profile_menu}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The Window Menu}{\v\f7\fs24\insrsid5201950 window_menu}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The Help Menu}{\v\f7\fs24\insrsid5201950 help_menu}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 The Toolbar}{\v\f7\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\f7\fs24\insrsid5201950 
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 \page #{\footnote 
\pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # whats_new}}K{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K What\rquote s New in Version 2.1}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\b\insrsid5201950 $ What\rquote s New in Version 2.1}}}{\fs32\insrsid5201950 What\rquote s New in Version 2.1}{\b0\fs32\insrsid5201950 
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \fi-360\li360\ri0\sa80\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab Support for Side-by-Side versioning of modules.  This is a new feature introduce
d with Windows XP that allows applications to specify specific versions and/or locations of files it wishes to use.
\par }{\f7\fs24\insrsid2649292 \{bmct bullet1.bmp\}\tab }{\f7\fs24\insrsid2883638 Integration with }{\f7\fs24\insrsid11668403 Visual Studio help, MSDN help, }{\f7\fs24\insrsid2883638 and }{\f7\fs24\insrsid11668403 MSDN online}{\f7\fs24\insrsid2883638 
 to provide the ability to display detailed help for any known function.}{\f7\fs24\insrsid2649292 
\par }{\b\f7\fs24\insrsid5201950 
\par What was New in Version 2.0
\par }{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab Detection of dynamically loaded modules, including details about which module actually called LoadLibrary to dynamically load the module.
\par }\pard\plain \s20\ql \fi-360\li360\ri0\sa80\nowidctlpar\faauto\rin0\lin360\itap0 \f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 \{bmct bullet1.bmp\}\tab 
Detection of dynamically called functions, including details about which module actually called GetProcAddress to obtain the function address.
\par }\pard\plain \ql \fi-360\li360\ri0\sa80\nowidctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab 
Detection of delay-load dependencies. This is a new type of dependency that was introduced with Microsoft Visual C++ 6.0. They work on Windows 95/98/Me and Windows NT/2000/XP.
\par \{bmct bullet1.bmp\}\tab Support for 64-bit Windows modules.
\par \{bmct bullet1.bmp\}\tab Console mode that allows Dependency Walker to be ran without its graphical interface being displayed.  This is useful for batch files and unattended automation of Dependency Walker features.
\par \{bmct bullet1.bmp\}\tab Command line options to configure module search order, column sorting, output files, profiling, and other settings.
\par }\pard\plain \s20\ql \fi-360\li360\ri0\sa80\nowidctlpar\faauto\rin0\lin360\itap0 \f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 \{bmct bullet1.bmp\}\tab 
Ability to monitor module entrypoints (like DllMain) looking for module initialization failures.
\par }\pard\plain \ql \fi-360\li360\ri0\sa80\nowidctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab C++ function name undecorating to provide human readable 
C++ function prototypes including function names, return types, and parameter types.
\par \{bmct bullet1.bmp\}\tab User definable module search paths with support for "KnownDLLs" and the "App Paths" registry keys.  Search paths can be saved and loaded from within the graphical interface or from the command line.
\par \{bmct bullet1.bmp\}\tab Ability to save a module's session to a text report file for easy viewing in any text viewer.
\par \{bmct bullet1.bmp\}\tab Ability to save a module's session to a comma separated value (CSV) file for easy importing into other applications.
\par \{bmct bullet1.bmp\}\tab Ability to save a snapshot of an entire module session to an image file, which can be loaded by Dependency Walker at a later time on any computer.
\par }\pard\plain \s19\ql \fi-360\li360\ri0\sa80\nowidctlpar\faauto\rin0\lin360\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab Module profiling to detect dyna
mic dependencies, child processes, thread activity, and exceptions. Child processes can also be profiled for their dependencies.
\par }\pard\plain \ql \fi-360\li360\ri0\sa80\nowidctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab 
Ability to control what file extensions Dependency Walker will add the "View Dependencies" menu item to a file's context menu in explorer.
\par \{bmct bullet1.bmp\}\tab Added hotkeys to help match imports with exports, and modules in the list view with modules in the tree view.  Also added hotkeys to locate the previous, next, or original instance of a module in the tree view.
\par \{bmct bullet1.bmp\}\tab Added some new columns to the Module List View. They include Link Time Stamp, Link Checksum, Real Checksum, Symbols, Actual Base, Virtual Size, and Load Order.
\par }\pard\plain \s19\ql \fi-360\li360\ri0\sa80\nowidctlpar\faauto\rin0\lin360\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab Added an OS Information dialog. This information is a
lso saved to text and Dependency Walker Image (DWI) files.
\par }\pard\plain \ql \fi-360\li360\ri0\sa80\nowidctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab 
All list views can now be sorted by icon, which provides an easy way of grouping items of similar type.
\par \{bmct bullet1.bmp\}\tab You can now search all list views for text by simply typing in a few characters to match in the currently sorted column.
\par }\pard\plain \s20\ql \fi-360\li360\ri0\sa80\nowidctlpar\faauto\rin0\lin360\itap0 \f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 \{bmct bullet1.bmp\}\tab 
Added color-coding to the module list view and log view to help highlight problems.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 \page #{\footnote 
\pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # overview_1}}K{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Why Use Dependency Walker?}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\b\insrsid5201950 $ Why Use Dependency Walker?}}}{\fs32\insrsid5201950 Why Use Dependency Walker?
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }{\b\f7\fs24\insrsid5201950 Have you ever...}{\f7\fs24\insrsid5201950 
\par 
\par }\pard \ql \fi-360\li720\ri0\sa80\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab ...wondered why an application or module was failing to load?
\par \{bmct bullet1.bmp\}\tab ...wondered what minimum set of files are required to run a particular application or load a particular DLL?
\par \{bmct bullet1.bmp\}\tab ...wondered why a certain module was being loaded with a particular application?
\par \{bmct bullet1.bmp\}\tab ...wanted to know what functions are exposed by a particular module, and which ones are actually being called by other modules?
\par \{bmct bullet1.bmp\}\tab ...wanted to know the parameter and return types of exported C++ functions?
\par \{bmct bullet1.bmp\}\tab ...wanted to remove all dependencies for a given module?
\par \{bmct bullet1.bmp\}\tab ...wanted to know the complete path of all the modules being loaded for a particular application?
\par \{bmct bullet1.bmp\}\tab ...wanted to know all the base addresses of each module being loaded for a particular application?  What about versions?  Or maybe CPU types?
\par }\pard \ql \fi-360\li720\ri0\sa240\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab ...received one of the following errors...
\par }\pard \ql \fi-360\li1080\ri0\sa80\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet2.bmp\}\tab The dynamic link library BAR.DLL could not be found in the specified path...
\par \{bmct bullet2.bmp\}\tab The procedure entry point FOO could not be located in the dynamic link library BAR.DLL.
\par \{bmct bullet2.bmp\}\tab The application or DLL BAR.DLL is not a valid Windows image.
\par \{bmct bullet2.bmp\}\tab The application failed to initialize properly.
\par \{bmct bullet2.bmp\}\tab Initialization of the dynamic link library BAR.DLL failed. The process is terminating abnormally. 
\par \{bmct bullet2.bmp\}\tab The image file BAR.EXE is valid, but is for a machine type other than the current machine.
\par \{bmct bullet2.bmp\}\tab Program too big to fit in memory.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 \page #{\footnote 
\pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # overview_2}}K{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Using Dependency Walker for Trouble Shooting Modules}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Using Dependency Walker for Trouble Shooting Modules}}}{\fs32\insrsid5201950 Using Dependency Walker for Trouble Shooting Modules}{\b0\fs32\insrsid5201950 
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Dependency Walker recursively scans all dependent modules required by a particular application.  During this scan it performs the following tasks:
\par 
\par }\pard \ql \fi-360\li720\ri0\sa80\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab 
Detects missing files.  These are files that are required as a dependency to another module.  A symptom of this problem is the "The dynamic link library BAR.DLL could not be found in the specified path..." error.
\par \{bmct bullet1.bmp\}\tab Detects invalid Files.  This includes files that are not Win32 or Win64 compliant and files that are corrupt.  A symptom of this problem is the "The application or DLL BAR.EXE is not a valid Windows image" error.
\par \{bmct bullet1.bmp\}\tab Detects import/export mismatches.  Verifies that
 all functions imported by a module are actually exported from the dependent modules.  All unresolved import functions are flagged with an error.  A symptom of this problem is the "The procedure entry point FOO could not be located in the dynamic link lib
rary BAR.DLL" error.
\par \{bmct bullet1.bmp\}\tab Detects circular dependency errors.  This is a very rare error, but can occur with forwarded functions.
\par \{bmct bullet1.bmp\}\tab Detects mismatched CPU types of modules.  This occurs if a module built for one CPU tries to load a module built for a different CPU.
\par \{bmct bullet1.bmp\}\tab Detects checksum inconsistencies by verifying module checksums to see if any modules have been modified after they were built.
\par \{bmct bullet1.bmp\}\tab Detects module collisions by highlighting any modules that fail to load at their preferred base address.
\par \{bmct bullet1.bmp\}\tab Detects module initialization failures by tracking calls to module entrypoints and looking for errors.
\par }\pard \ql \li0\ri0\sa80\nowidctlpar\tx720\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par Dependency Walker can also perform a run-time profile of your application to detect dynamically loaded modules and module initialization failures.  The same error checking from above applies to dynamically loaded modules as well.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 \page #{\footnote 
\pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # overview_3}}K{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Using Dependency Walker for General Information about Modules}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Using Dependency Walker for General Information about Modules}}}{\fs32\insrsid5201950 Using Dependency Walker for General Information about Modules}{\b0\fs32\insrsid5201950 

\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Dependency Walker is more than just a trouble shooting utility.  It also provides a great deal of valuable information about the module layout of a particular application and details on each module.  Dependency Walker provides the following information:

\par 
\par }\pard \ql \fi-360\li720\ri0\sa80\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab A complete module dependency tree diagram of all the modules required by a particular application.
\par \{bmct bullet1.bmp\}\tab A list of all fun
ctions exported from each module.  These lists include functions exported by name, functions exported by ordinal, and functions that are actually forwarded to other modules.  Named C++ functions can be shown in their native decorated format, or can be exp
anded into human readable function prototypes including return types and parameters types.
\par \{bmct bullet1.bmp\}\tab A list of functions that are actually called in each module by other modules.  These lists can help developers understand why a particular module i
s being linked with an application, and also provides information on how to remove unneeded modules from being dependencies.
\par \{bmct bullet1.bmp\}\tab A list of the minimum set of files that are required in order for a module to load and run.  This list can be very useful when copying files to another computer or creating setup scripts.
\par }\pard \ql \fi-360\li720\ri0\sa240\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab For each individual module found, the following information is provided...
\par }\pard \ql \fi-360\li1080\ri0\sa80\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet3.bmp\}\tab Full path to the module file.
\par \{bmct bullet3.bmp\}\tab Date and time of the module file.
\par \{bmct bullet3.bmp\}\tab Date and time the module was actually built.
\par \{bmct bullet3.bmp\}\tab Size of the module file.
\par \{bmct bullet3.bmp\}\tab Attributes of the module file.
\par \{bmct bullet3.bmp\}\tab The module checksum from when the module was built.
\par \{bmct bullet3.bmp\}\tab The actual module checksum.
\par \{bmct bullet3.bmp\}\tab Type of CPU that the module was built for.
\par \{bmct bullet3.bmp\}\tab Type of subsystem that the module was built to run in.
\par \{bmct bullet3.bmp\}\tab Type of debugging symbols that are associated with the module.
\par \{bmct bullet3.bmp\}\tab The preferred base load address of the module.
\par \{bmct bullet3.bmp\}\tab The actual base load address of the module.
\par \{bmct bullet3.bmp\}\tab The virtual size of the module.
\par \{bmct bullet3.bmp\}\tab The load order of the module with respect to other modules.
\par \{bmct bullet3.bmp\}\tab The file version found in the module\rquote s version resource.
\par \{bmct bullet3.bmp\}\tab The product version found in the module\rquote s version resource.
\par \{bmct bullet3.bmp\}\tab The image version found in the module\rquote s file header.
\par \{bmct bullet3.bmp\}\tab The version of the linker that was used to create the module file.
\par \{bmct bullet3.bmp\}\tab The version of the OS that the module file was built to run on.
\par \{bmct bullet3.bmp\}\tab The version of the subsystem that the module file was built to run in.
\par \{bmct bullet3.bmp\}\tab A possible error message if any error occurred while processing the file.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDR_COMMAND_LINE_HELP}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Command Line Options and Return Values}}${\footnote \pard\plain \s16\ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 $ Command Line Options and Return Values}}}{\fs32\insrsid5201950 Command Line Options and Return Values
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \fi-2160\li2160\ri0\widctlpar\tx2160\faauto\rin0\lin2160\itap0 {\f7\fs24\insrsid5201950 DEPENDS.EXE\tab [/?]
 [/c] [/a:#] [/f:#] [/u:#] [/ps:#] [/pp:#] [/po:#] [/ph:#] [/pl:#] [/pg:#] [/pt:#] [/pn:#] [/pe:#] [/pm:#] [/pf:#] [/pi:#] [/pc:#] [/pa:#] [/pd:dir] [/pb] [/sm:#] [/si:#] [/se:#] [/sf:#] [/od:path] [/ot:path] [/of:path] [/oc:path] [/d:path] [path [args...
]]
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par }\pard \ql \fi-1440\li1800\ri0\sb120\widctlpar\tx1800\tx1980\tx2160\tx2340\tx2520\tx2700\tx2880\tx3060\tx3240\tx3420\faauto\rin0\lin1800\itap0 {\b\f7\fs24\insrsid5201950 /?}{\f7\fs24\insrsid5201950 \tab }{\b\f7\fs24\insrsid5201950 Help}{
\f7\fs24\insrsid5201950  - Displays this page.
\par }{\b\f7\fs24\insrsid5201950 /c}{\f7\fs24\insrsid5201950 \tab }{\b\f7\fs24\ul\insrsid5201950 C}{\b\f7\fs24\insrsid5201950 onsole mode}{\f7\fs24\insrsid5201950 
 - Dependency Walker will process the other command line options and exit without displaying its graphical interface.  You must specify a module or Dependency Walker Image (DWI) file to open when using this option.
\par }{\b\f7\fs24\insrsid5201950 /a}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 A}{\b\f7\fs24\insrsid5201950 uto Expand}{\f7\fs24\insrsid5201950  - Use /a:0 to start Dependency Walker with the }{\f7\fs24\uldb\insrsid5201950 Auto Expand}{
\v\f7\fs24\insrsid5201950 HIDM_AUTO_EXPAND}{\f7\fs24\insrsid5201950  setting initially turned off, or /a:1 to start with it turned on.  If this option is not specified, then the setting from the last time you ran Dependency Walker will be used.
\par }{\b\f7\fs24\insrsid5201950 /f}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\insrsid5201950 View }{\b\f7\fs24\ul\insrsid5201950 f}{\b\f7\fs24\insrsid5201950 ull paths}{\f7\fs24\insrsid5201950  - Use /f:0 to start Dependency Walker with the }{
\f7\fs24\uldb\insrsid5201950 View Full Paths}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_FULL_PATHS}{\f7\fs24\insrsid5201950  setting initially turned off, or /f:1 to start with it turned on.  If this option is not specified, then the setting from the last ti
me you ran Dependency Walker will be used.
\par }{\b\f7\fs24\insrsid5201950 /u}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 U}{\b\f7\fs24\insrsid5201950 ndecorate C++ functions}{\f7\fs24\insrsid5201950  - Use /u:0 to start Dependency Walker with the }{\f7\fs24\uldb\insrsid5201950 
Undecorate C++ Functions}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950  setting initially turned off, or /u:1 to start with it turned on.  If this option is not s
pecified, then the setting from the last time you ran Dependency Walker will be used.
\par }{\b\f7\fs24\insrsid5201950 /ps}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Simulate }{\b\f7\fs24\ul\insrsid5201950 S}{\b\f7\fs24\insrsid5201950 
hellExecute by inserting any App Paths directories into the PATH environment variable}{\f7\fs24\insrsid5201950  - Use /ps:0 to start Dependency Walker with this s
etting initially turned off, or /ps:1 to start with it turned on.  If this option is not specified, then the setting from the last time you ran Dependency Walker will be used.
\par }{\b\f7\fs24\insrsid5201950 /pp}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Log DllMain calls for }{\b\f7\fs24\ul\insrsid5201950 p}{\b\f7\fs24\insrsid5201950 
rocess attach and process detach messages}{\f7\fs24\insrsid5201950 
 - Use /pp:0 to start Dependency Walker with this setting initially turned off, or /pp:1 to start with it turned on.  If this option is not specified, then the setting from the last time you ran Dependency Walker will be used.
\par }{\b\f7\fs24\insrsid5201950 /po}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Log DllMain calls for all }{\b\f7\fs24\ul\insrsid5201950 o}{\b\f7\fs24\insrsid5201950 
ther messages, including thread attach and thread detach}{\f7\fs24\insrsid5201950  - Use /po:0 to start Dependency Walker with this setting initially turned off, or /po:1 to start with it turned on.  If this option is n
ot specified, then the setting from the last time you ran Dependency Walker will be used.
\par }{\b\f7\fs24\insrsid5201950 /ph}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: }{\b\f7\fs24\ul\insrsid5201950 H}{\b\f7\fs24\insrsid5201950 
ook the process to gather more detailed dependency information}{\f7\fs24\insrsid5201950  - Use /ph:0 to start Dependency Walker with this setting initially turned off,
 or /ph:1 to start with it turned on.  If this option is not specified, then the setting from the last time you ran Dependency Walker will be used.
\par }{\b\f7\fs24\insrsid5201950 /pl}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Log }{\b\f7\fs24\ul\insrsid5201950 L}{\b\f7\fs24\insrsid5201950 oadLibrary function calls}{
\f7\fs24\insrsid5201950  - Use /pl:0 to start Dependency Walker with this sett
ing initially turned off, or /pl:1 to start with it turned on.  If this option is not specified, then the setting from the last time you ran Dependency Walker will be used.  If this option is turned on, then the "Hook the process to gather more detailed d
ependency information" option will also be turned on.
\par }{\b\f7\fs24\insrsid5201950 /pg}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Log }{\b\f7\fs24\ul\insrsid5201950 G}{\b\f7\fs24\insrsid5201950 etProcAddress function calls}{
\f7\fs24\insrsid5201950  - Use /pg:0 to start Dependency Walker with this setting initially turned off, or /pg:1 to start with it turned on.  If this option is not specif
ied, then the setting from the last time you ran Dependency Walker will be used.  If this option is turned on, then the "Hook the process to gather more detailed dependency information" option will also be turned on.
\par }{\b\f7\fs24\insrsid5201950 /pt}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Log }{\b\f7\fs24\ul\insrsid5201950 t}{\b\f7\fs24\insrsid5201950 hread information}{\f7\fs24\insrsid5201950 
 - Use /pt:0 to start Dependency Walker with this setting initially turned off, or /pt:1 to start with it turned on.  If this option is not specified, then the setting from the last time you ran Dependency Walker will be used.
\par }{\b\f7\fs24\insrsid5201950 /pn}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Use simple thread }{\b\f7\fs24\ul\insrsid5201950 n}{\b\f7\fs24\insrsid5201950 umbers instead of actual thread IDs}
{\f7\fs24\insrsid5201950  - Use /pn:0 to start Dependency Walker with this setting initially turned off, or /pn:1 to start with it turned on.  If this option is not specified, then the setting from the last time you ran Depen
dency Walker will be used.  If this option is turned on, then the "Log thread information" option will also be turned on.
\par }{\b\f7\fs24\insrsid5201950 /pe}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Log first chance }{\b\f7\fs24\ul\insrsid5201950 e}{\b\f7\fs24\insrsid5201950 xceptions}{\f7\fs24\insrsid5201950 
 - Use /pe:0 to start Dependency Walker with this setting initially turned off, or /pe:1 to start with it turned on.  If this option is not specified, then the setting from the last time you ran Dependency Walker will be used.
\par }{\b\f7\fs24\insrsid5201950 /pm}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Log debug output }{\b\f7\fs24\ul\insrsid5201950 m}{\b\f7\fs24\insrsid5201950 essages}{\f7\fs24\insrsid5201950 
 - Use /pm:0 to start Dependency Walker with this setting initially turned off, or /pm:1 to start with it turned on.  If this option is not specified, then the setting from the last time you ran Dependency Walker will be used.
\par }{\b\f7\fs24\insrsid5201950 /pf}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Use }{\b\f7\fs24\ul\insrsid5201950 f}{\b\f7\fs24\insrsid5201950 ull paths when logging file names}{
\f7\fs24\insrsid5201950  - Use /pf:0 to start Dependency Walker with this setting initially turned off, or /pf:1 to start with it turned on.  If this option is not specified, then the setting from the last time you ran Dependency Walker will be used.

\par }{\b\f7\fs24\insrsid5201950 /pi}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Log a t}{\b\f7\fs24\ul\insrsid5201950 i}{\b\f7\fs24\insrsid5201950 me stamp with each line of log}{
\f7\fs24\insrsid5201950  - Use /pi:0 to start Dependency Walker with this setting initially turned off, or /pi:1 to start with it turned on.  If this option is not specified, then the setting from the last time you ran Dependency Walker will be used.

\par }{\b\f7\fs24\insrsid5201950 /pc}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Automatically open and profile }{\b\f7\fs24\ul\insrsid5201950 c}{\b\f7\fs24\insrsid5201950 hild processes}{
\f7\fs24\insrsid5201950  - Use /pc:0 to start Dependency Walker with this setting initially turned off, or /pc:1 to start with it turned on.  If this option is not specified, then the setting from the last time you ran Dependency Walker
 will be used.  This option is ignored when running in console mode.
\par }{\b\f7\fs24\insrsid5201950 /pa}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Turn }{\b\f7\fs24\ul\insrsid5201950 a}{\b\f7\fs24\insrsid5201950 ll profiling options on or off}{
\f7\fs24\insrsid5201950  - Use /pa:0
 to initially turn all profiling options off, or /pa:1 to initially turn them all on.  This option can be used before other profiling options.  For example, /pa:1 /pf:0 will turn on all options except for the "Use full paths when logging file names" optio
n.
\par }{\b\f7\fs24\insrsid5201950 /pd}{\f7\fs24\insrsid5201950 :dir\tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Starting }{\b\f7\fs24\ul\insrsid5201950 d}{\b\f7\fs24\insrsid5201950 irectory}{\f7\fs24\insrsid5201950 
 - Specifies the starting directory to use when profiling the module.  This option requires that you specify a module to open.
\par }{\b\f7\fs24\insrsid5201950 /pb}{\f7\fs24\insrsid5201950 \tab }{\b\f7\fs24\ul\insrsid5201950 P}{\b\f7\fs24\insrsid5201950 rofiling option: Automatically }{\b\f7\fs24\ul\insrsid5201950 b}{\b\f7\fs24\insrsid5201950 
egin profiling after the module has been loaded}{\f7\fs24\insrsid5201950 
 - This option requires that you specify a module to open.  If an output option (/od, /ot, /of, or /oc) is specified, Dependency Walker will wait until the profiling fully completes before saving the results.
\par }{\b\f7\fs24\insrsid5201950 /sm}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 S}{\b\f7\fs24\insrsid5201950 ort column for }{\b\f7\fs24\ul\insrsid5201950 m}{\b\f7\fs24\insrsid5201950 odule list view }{\f7\fs24\insrsid5201950 - This 
option controls the initial sort column that Dependency Walker will use when sorting the items in the }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950 
.  If this option is not specified, then the value from the last time you ran Dependency Walker will be used.  The values allowed are:
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 1.\tab}}\pard \ql \fi-540\li2880\ri0\sb120\widctlpar\tx2880\tx3060\tx3240\tx3420\tx3600\faauto\ls5\rin0\lin2880\itap0 {\f7\fs24\insrsid5201950 Icon
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 2.\tab}}\pard \ql \fi-540\li2880\ri0\widctlpar\tx2880\tx3060\tx3240\tx3420\tx3600\faauto\ls5\rin0\lin2880\itap0 {\f7\fs24\insrsid5201950 Module Name or Path
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 3.\tab}File Time Stamp
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 4.\tab}Link Time Stamp
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 5.\tab}File Size
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 6.\tab}File Attributes
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 7.\tab}Link Checksum
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 8.\tab}Real Checksum
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 9.\tab}CPU Type
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 10.\tab}Subsystem Type
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 11.\tab}Symbol Types
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 12.\tab}Preferred Base Address
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 13.\tab}Actual Base Address
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 14.\tab}Virtual Size
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 15.\tab}Load Order
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 16.\tab}File Version
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 17.\tab}Product Version
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 18.\tab}Image Version
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 19.\tab}Linker Version
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 20.\tab}OS Version
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 21.\tab}Subsystem Version
\par }\pard \ql \fi-1440\li1800\ri0\sb120\widctlpar\tx1800\tx1980\tx2160\tx2340\tx2520\tx2700\tx2880\tx3060\tx3240\tx3420\faauto\rin0\lin1800\itap0 {\b\f7\fs24\insrsid5201950 /si}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 S}{
\b\f7\fs24\insrsid5201950 ort column for parent }{\b\f7\fs24\ul\insrsid5201950 i}{\b\f7\fs24\insrsid5201950 mport function list view}{\f7\fs24\insrsid5201950 
 - This option controls the initial sort column that Dependency Walker will use when sorting the items in the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
.  If neither this option or the /sf option is specified, then the value from the last time you ran Dependency Walker will be used.  The values allowed are:
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 1.\tab}}\pard \ql \fi-540\li2880\ri0\sb120\widctlpar\tx2880\tx3060\tx3240\tx3420\tx3600\faauto\ls6\rin0\lin2880\itap0 {\f7\fs24\insrsid5201950 Icon
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 2.\tab}}\pard \ql \fi-540\li2880\ri0\widctlpar\tx2880\tx3060\tx3240\tx3420\tx3600\faauto\ls6\rin0\lin2880\itap0 {\f7\fs24\insrsid5201950 Ordinal Value
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 3.\tab}Hint Value
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 4.\tab}Function Name
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 5.\tab}Entry Point Address
\par }\pard \ql \fi-1440\li1800\ri0\sb120\widctlpar\tx1800\tx1980\tx2160\tx2340\tx2520\tx2700\tx2880\tx3060\tx3240\tx3420\faauto\rin0\lin1800\itap0 {\b\f7\fs24\insrsid5201950 /se}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 S}{
\b\f7\fs24\insrsid5201950 ort column for }{\b\f7\fs24\ul\insrsid5201950 e}{\b\f7\fs24\insrsid5201950 xport function list views }{\f7\fs24\insrsid5201950 - This option controls the initial sort column that Dependency W
alker will use when sorting the items in the }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
.  If neither this option or the /sf option is specified, then the value from the last time you ran Dependency Walker will be used.  The values allowed are:
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 1.\tab}}\pard \ql \fi-540\li2880\ri0\sb120\widctlpar\tx2880\tx3060\tx3240\tx3420\tx3600\faauto\ls7\rin0\lin2880\itap0 {\f7\fs24\insrsid5201950 Icon
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 2.\tab}}\pard \ql \fi-540\li2880\ri0\widctlpar\tx2880\tx3060\tx3240\tx3420\tx3600\faauto\ls7\rin0\lin2880\itap0 {\f7\fs24\insrsid5201950 Ordinal Value
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 3.\tab}Hint Value
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 4.\tab}Function Name
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 5.\tab}Entry Point Address
\par }\pard \ql \fi-1440\li1800\ri0\sb120\widctlpar\tx1800\tx1980\tx2160\tx2340\tx2520\tx2700\tx2880\tx3060\tx3240\tx3420\faauto\rin0\lin1800\itap0 {\b\f7\fs24\insrsid5201950 /sf}{\f7\fs24\insrsid5201950 :#\tab }{\b\f7\fs24\ul\insrsid5201950 S}{
\b\f7\fs24\insrsid5201950 ort column for both }{\b\f7\fs24\ul\insrsid5201950 f}{\b\f7\fs24\insrsid5201950 unction list views }{\f7\fs24\insrsid5201950 
- This option controls the initial sort column that Dependency Walker will use when sorting the items in both the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
 and the }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
.  If no sort column option is specified for a particular column, then the value(s) from the last time you ran Dependency Walker will be used.  The values allowed are:
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 1.\tab}}\pard \ql \fi-540\li2880\ri0\sb120\widctlpar\tx2880\tx3060\tx3240\tx3420\tx3600\faauto\ls8\rin0\lin2880\itap0 {\f7\fs24\insrsid5201950 Icon
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 2.\tab}}\pard \ql \fi-540\li2880\ri0\widctlpar\tx2880\tx3060\tx3240\tx3420\tx3600\faauto\ls8\rin0\lin2880\itap0 {\f7\fs24\insrsid5201950 Ordinal Value
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 3.\tab}Hint Value
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 4.\tab}Function Name
\par {\listtext\pard\plain\f7\insrsid5201950 \hich\af7\dbch\af0\loch\f7 5.\tab}Entry Point Address
\par }\pard \ql \fi-1440\li1800\ri0\sb120\widctlpar\tx1800\tx1980\tx2160\tx2340\tx2520\tx2700\tx2880\tx3060\tx3240\tx3420\faauto\rin0\lin1800\itap0 {\b\f7\fs24\insrsid5201950 /od}{\f7\fs24\insrsid5201950 :path\tab }{\b\f7\fs24\ul\insrsid5201950 O}{
\b\f7\fs24\insrsid5201950 utput file in }{\b\f7\fs24\ul\insrsid5201950 D}{\b\f7\fs24\insrsid5201950 ependency Walker Image (DWI) format }{\f7\fs24\insrsid5201950 
- This option requires that you specify a module or Dependency Walker Image (DWI) file to open.  Once the module has been processed, the results will be written to the specified file in the Dependency Walker Image (DWI) format.
\par }{\b\f7\fs24\insrsid5201950 /ot}{\f7\fs24\insrsid5201950 :path\tab }{\b\f7\fs24\ul\insrsid5201950 O}{\b\f7\fs24\insrsid5201950 utput file in }{\b\f7\fs24\ul\insrsid5201950 t}{\b\f7\fs24\insrsid5201950 ext format}{\f7\fs24\insrsid5201950 
 - This option requires that you specify a module or Dependency Walker Image (DWI) file to open.  Once the module has been processed, the results will be written to the specified file in text format.
\par }{\b\f7\fs24\insrsid5201950 /of}{\f7\fs24\insrsid5201950 :path\tab }{\b\f7\fs24\ul\insrsid5201950 O}{\b\f7\fs24\insrsid5201950 utput file in text format with import / export }{\b\f7\fs24\ul\insrsid5201950 f}{\b\f7\fs24\insrsid5201950 unction lists}{
\f7\fs24\insrsid5201950 
 - This option requires that you specify a module or Dependency Walker Image (DWI) file to open.  Once the module has been processed, the results will be written to the specified file in text format, including the import and export function lists.
\par }{\b\f7\fs24\insrsid5201950 /oc}{\f7\fs24\insrsid5201950 :path\tab }{\b\f7\fs24\ul\insrsid5201950 O}{\b\f7\fs24\insrsid5201950 utput file in }{\b\f7\fs24\ul\insrsid5201950 C}{\b\f7\fs24\insrsid5201950 omma Separated Value (CSV) format}{
\f7\fs24\insrsid5201950  - This option requires that you specify a module or Dependency Walker Image (DWI) file to open.  Once the module has been processed, the results will be written to the specified file in a Comma Separated Value (CSV) format.
\par }{\b\f7\fs24\insrsid5201950 /d}{\f7\fs24\insrsid5201950 :path\tab }{\b\f7\fs24\ul\insrsid5201950 D}{\b\f7\fs24\insrsid5201950 ependency Walker Path (DWP) file to load}{\f7\fs24\insrsid5201950  - This options allows you to specify a }{
\f7\fs24\uldb\insrsid5201950 Dependency Walker Path (DWP) File}{\v\f7\fs24\insrsid5201950 path_files}{\f7\fs24\insrsid5201950  to load and use as the initial search path when searching for modules.  DWP files can be created using the }{
\f7\fs24\uldb\insrsid5201950 Configure Search Order}{\v\f7\fs24\insrsid5201950 HIDM_CONFIGURE_SEARCH_ORDER}{\f7\fs24\insrsid5201950  command in Dependency Walker.
\par }{\b\f7\fs24\insrsid5201950 path}{\f7\fs24\insrsid5201950 \tab }{\b\f7\fs24\insrsid5201950 Path to a module or Dependency Walker Image (DWI) file to load }{\f7\fs24\insrsid5201950 
- For this option, you can specify a file name, a relative path, or a full path to 
a file to load.  The file must be a 32-bit or 64-bit Windows module or a Dependency Walker Image (DWI) file.  This path must come after any options intended for Dependency Walker since all options that follow this path are assumed to be program arguments 
for use when profiling the module.
\par }{\b\f7\fs24\insrsid5201950 args...}{\f7\fs24\insrsid5201950 \tab }{\b\f7\fs24\insrsid5201950 Program arguments}{\f7\fs24\insrsid5201950  - Specifies the command line arguments to use when profiling the module specified by the }{\b\f7\fs24\insrsid5201950 
path}{\f7\fs24\insrsid5201950  option.  Dependency Walker considers any text following the }{\b\f7\fs24\insrsid5201950 path}{\f7\fs24\insrsid5201950  option as being program arguments.  F
or this reason, any options intended for Dependency Walker must be specified before the }{\b\f7\fs24\insrsid5201950 path}{\f7\fs24\insrsid5201950  option.  If the file specified by the }{\b\f7\fs24\insrsid5201950 path}{\f7\fs24\insrsid5201950 
 option is really a Dependency Walker Image (DWI) file, then the args are ignored.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par 
\par }\pard\plain \s2\ql \li0\ri0\widctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 General Rules about Command Line Options
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \fi-360\li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab Options are case insensitive.  For example, "/c" and "/C" are equivalent.
\par \{bmct bullet1.bmp\}\tab Options may start with a slash or a dash.  For example, "/c" and "-c" are equivalent.
\par \{bmct bullet1.bmp\}\tab The colons (:) shown in the options above are optional.  They may be removed or replaced with spaces.  For example, "/f:0", "/f 0", and "/f0" are equivalent.
\par \{bmct bullet1.bmp\}\tab All profiling options are cumulative from left to right.  For example, /pa:1 /p
m:0 will turn on all the profiling options, then turn off the "Log debug output messages" option, but /pm:0 /pa:1 will simply turn on all profiling options. 
\par \{bmct bullet1.bmp\}\tab Program options intended for Dependency Walker must come before the module path.  All options after the module path will be passed to the module as its command line when profiled.
\par \{bmct bullet1.bmp\}\tab If you wish to specify text that has spaces, that text should be placed in quotes.  For example:
\par }\pard \ql \li1080\ri0\sa120\widctlpar\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 depends /pb /oc "c:\\output files\\foo bar.csv" "c:\\input files\\foo bar.exe" 1 2 3 "this is a test"
\par }\pard \ql \fi-360\li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab 
Multiple options can be grouped together.  You may even append options to other options that require numerical values.  The only options that cannot be appended to are options th
at require a path or text values (/pd, /od, /ot, /of, /oc, and /d).  For example:
\par }\pard \ql \li1080\ri0\sa120\widctlpar\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 depends /c /f:0 /u:1 /pa:1 /pf:0 /pe:0 /pb /sm:12 /sf:4 /d:search.dwp /oc:result.csv /od:result.dwi foo.exe
\par }\pard \ql \li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 Could be shortened to:
\par }\pard \ql \li1080\ri0\sa120\widctlpar\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 depends /cf0u1pa1pf0pe0pbsm12sf4dsearch.dwp /ocresult.csv /odresult.dwi foo.exe bar
\par }\pard \ql \fi-360\li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab All options can be specified with or without the "Console Mode" option (/c).
\par }\pard \ql \fi-360\li720\ri0\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab More than one output file type option can be specified.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par 
\par }\pard\plain \s2\ql \li0\ri0\widctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Return Values
\par }\pard\plain \ql \li360\ri0\widctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par When Dependency Walker exit
s, it returns a set of bit flags that are OR'ed together.  There are three groups of error flags - module warnings, module errors, and processing errors.  The error flags have been arranged in a way that makes it easy to detect the severity of a problem.

\par 
\par If the return value is greater than or equal to 0x00010000, then there was a processing error with Dependency Walker and no work was done.  Otherwise, if the return value is greater than or equal to 0x00000100, then the operating system will not be able t
o
 load the module due to some module or dependency error.  Otherwise, if the return value is greater than or equal to 0x00000001, then the module has no load-time dependency problems and will most likely have no problems loading, but may have runtime probl
ems.
\par 
\par }{\b\f7\fs24\insrsid5201950 Module Warnings}{\f7\fs24\insrsid5201950  - Application should load, but might fail during runtime.
\par 
\par }\pard \ql \fi-1800\li2520\ri0\widctlpar\tx2520\tx2700\tx2880\tx3060\tx3240\faauto\rin0\lin2520\itap0 {\f7\fs24\insrsid5201950 0x00000001\tab At least one dynamic dependency module was not found.
\par 0x00000002\tab At least one delay-load dependency module was not found.
\par 0x00000004\tab At least one module could not dynamically locate a function in another module using the GetProcAddress function call.
\par 0x00000008\tab At least one module has an unresolved import due to a missing export function in a delay-load dependent module.
\par 0x00000010\tab At least one module was corrupted or unrecognizable to Dependency Walker, but still appeared to be a Windows module.
\par 0x00000020\tab At least one module failed to load during profiling.  This usually occurs when a module returns 0 from its DllMain function or generates an unhandled exception while processing the DLL_PROCESS_ATTACH message.
\par }\pard \ql \li360\ri0\widctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 
\par }{\b\f7\fs24\insrsid5201950 Module Errors}{\f7\fs24\insrsid5201950  - Application will fail to load by the operating system.
\par 
\par }\pard \ql \fi-1800\li2520\ri0\widctlpar\tx2520\tx2700\tx2880\tx3060\tx3240\faauto\rin0\lin2520\itap0 {\f7\fs24\insrsid5201950 0x00000100\tab At least one file was not a 32-bit or 64-bit Windows module.
\par 0x00000200\tab At least one required implicit or forwarded dependency was not found.
\par 0x00000400\tab At least one module has an unresolved import due to a missing export function in a dependent module.
\par 0x00000800\tab Modules with different CPU types were found.
\par }\pard \ql \fi-1800\li2520\ri0\widctlpar\tx2520\tx2700\tx2880\tx3060\tx3240\faauto\rin0\lin2520\itap0\pararsid9983699 {\f7\fs24\insrsid9983699 0x00001000\tab A circular dependency was detected.
\par }\pard \ql \fi-1800\li2520\ri0\widctlpar\tx2520\tx2700\tx2880\tx3060\tx3240\faauto\rin0\lin2520\itap0 {\f7\fs24\insrsid5201950 0x0000}{\f7\fs24\insrsid9983699 2000\tab There was an error in }{\f7\fs24\insrsid11684848 a}{\f7\fs24\insrsid9983699 
 Side-by-Side configuration file.}{\f7\fs24\insrsid5201950 
\par }\pard \ql \li360\ri0\widctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 
\par }{\b\f7\fs24\insrsid5201950 Processing Errors}{\f7\fs24\insrsid5201950  - All or some modules could not be processed.
\par 
\par }\pard \ql \fi-1800\li2520\ri0\widctlpar\tx2520\tx2700\tx2880\tx3060\tx3240\faauto\rin0\lin2520\itap0 {\f7\fs24\insrsid5201950 0x00010000\tab There was an error with at least one command line option.
\par 0x00020000\tab The file you specified to load could not be found.
\par 0x00040000\tab At least one file could not be opened for reading.
\par 0x00080000\tab The format of the Dependency Walker Image (DWI) file was unrecognized.
\par 0x00100000\tab There was an error while trying to profile the application.
\par 0x00200000\tab There was an error writing the results to an output file.
\par 0x00400000\tab Dependency Walker ran out of memory.
\par 0x00800000\tab Dependency Walker encountered an internal program error.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # version_numbers}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Overview of Module Version Numbers}}${\footnote \pard\plain \s16\ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 $ Overview of Module Version Numbers}}}{\fs32\insrsid5201950 Overview of Module Version Numbers
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 
There are four version fields that every Windows module is guaranteed to have.  They are all two-part version numbers (#.#).  They include:
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \fi-3240\li3240\ri0\sa120\widctlpar\tx3240\tx3420\tx3600\tx3780\tx3960\tx4140\tx4320\tx4500\tx4680\tx4860\faauto\rin0\lin3240\itap0 {\b\f7\fs24\insrsid5201950 Image Version}{\f7\fs24\insrsid5201950 \tab This value is set by the dev
eloper of the module by using the VERSION statement in their DEF file or by using the /VERSION linker option.  It usually represents the version of the module or product that the module is part of, but can contain any value since it is up to the developer
 to set it.  If the developer does not specify a version, then this value will default to 0.0.  This value may be used as a last resort when comparing two modules to check which module is newer.
\par }{\b\f7\fs24\insrsid5201950 OS Version}{\f7\fs24\insrsid5201950 \tab This value represents which version of the operatin
g system the module was designed to run on.  Certain functions may behave differently depending on this value in order to remain compatible with applications built for a particular operating system version. 
\par }{\b\f7\fs24\insrsid5201950 Subsystem Version}{\f7\fs24\insrsid5201950 \tab This value represents which su
bsystem version the module was designed to run on.  Most modules use the default value, but developers can override the default by using the /SUBSYSTEM linker option if they wish to target a particular subsystem version other than the default.  Certain su
bsystem functions may behave differently depending on this value in order to remain compatible with applications built for a particular subsystem version.
\par }\pard \ql \fi-3240\li3240\ri0\widctlpar\tx3240\tx3420\tx3600\tx3780\tx3960\tx4140\tx4320\tx4500\tx4680\tx4860\faauto\rin0\lin3240\itap0 {\b\f7\fs24\insrsid5201950 Linker Version}{\f7\fs24\insrsid5201950 \tab 
This value represents the version of the linker that was used to build the module.  It 
can be used to determine if a specific linker feature was available at the time the module was built.  For example, delay-load dependencies is a new feature introduced with version 6.0 of the linker, so if this value is less than 6.0, the module shouldn't
 have any delay-load dependencies.
\par }\pard \ql \li0\ri0\widctlpar\tx2880\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
In addition to the four standard version values, developers can add four more optional version values by including a VERSION_INFO resource as part of their resource file.  This resource structure has two four-part numeric
 fields (#.#.#.#) and two text fields.  They include:
\par 
\par }\pard \ql \fi-3240\li3240\ri0\sa120\widctlpar\tx3240\tx3420\tx3600\tx3780\tx3960\tx4140\tx4320\tx4500\tx4680\tx4860\faauto\rin0\lin3240\itap0 {\b\f7\fs24\insrsid5201950 File Version Value}{\f7\fs24\insrsid5201950 \tab 
This field is known as the "FILEVERSION" field in the VERSION_INFO resource structure.  This numerical value 
usually represents the version of the module itself, but can contain any value since it is up to the developer to set it.  This is the value that most programs use when comparing two modules to check which module is newer.
\par }{\b\f7\fs24\insrsid5201950 Product Version Value}{\f7\fs24\insrsid5201950 \tab This field 
is known as the "PRODUCTVERSION" field in the VERSION_INFO resource structure.  This numerical value usually represents the version of the product that this module is part of, but can contain any value since it is up to the developer to set it.  For examp
le, "Acme Tools version 3.0" is a set of ten utilities, including "Acme Virus Checker version 1.5".  The virus checker executable might have a file version of 1.5.0.0 and a product version of 3.0.0.0
\par }{\b\f7\fs24\insrsid5201950 File Version Text}{\f7\fs24\insrsid5201950 \tab This field is known as the "FileVersion
" field in the VERSION_INFO resource structure.  This text string usually represents the version of the module itself, but can contain any text string since it is up to the developer to set it.
\par }{\b\f7\fs24\insrsid5201950 Product Version Text}{\f7\fs24\insrsid5201950 \tab This field is known as the "ProductVersio
n" field in the VERSION_INFO resource structure.  This text string usually represents the version of the product that this module is part of, but can contain any text string since it is up to the developer to set it.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par Dependency Walker shows the true FILEV
ERSION and PRODUCTVERSION version values and not the text string versions.  Other applications, like the Windows Properties dialog, show the text string values since that is what the developer of the module wants the average non-technical user to see.  Fo
r example, you may see only "2.0" in the Windows Properties dialog for a module when its real version is 2.0.5.2034.  If you want to know the true version of a file, you should use Dependency Walker and not the Windows Properties dialog.
\par 
\par A great web site f
or looking up version numbers of modules is the Microsoft DLL Help Database (http://support.microsoft.com/servicedesks/FileVersion/dllinfo.asp).  This site has detailed version histories of DLLs and lists what products were shipped with each version.  Thi
s database can be helpful in tracking down version problems.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # dependency_types}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Types of Dependencies Handled By Dependency Walker}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0
\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Types of Dependencies Handled By Dependency Walker}}}{\fs32\insrsid5201950 Types of Dependencies Handled By Dependency Walker
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par There are several ways a module can be a dependent of another module:
\par }\pard \ql \fi-360\li720\ri0\sb120\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 1.\tab }{\b\f7\fs24\insrsid5201950 Implicit Dependency}{\f7\fs24\insrsid5201950 
 (also known as a load-time dependency or sometimes incorrectly referred to as static dependency): Module A is implicitly linked with a LIB file for Module B at compile/link time, and Module A\rquote 
s source code actually calls one or more functions in Module B.  Module B is a load time dependency of Module A and will be loaded into memory regardless if Module A actually makes a call to Module B at run-time.  Module B will be listed in Module A
\rquote s import table.
\par 2.\tab }{\b\f7\fs24\insrsid5201950 Delay-load Dependency}{\f7\fs24\insrsid5201950 : Module A is delay-load linked with a LIB file for Module B at compile/link time, and Module A\rquote 
s source code actually calls one or more functions in Module B.  Module B is a dynamic dependency and will only be loaded if Module A actually makes a call to Module B at run-time.  Module B will be listed in Module A\rquote s delay-load import table.

\par }\pard \ql \fi-360\li720\ri0\sb120\widctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 3.\tab }{\b\f7\fs24\insrsid5201950 Forward Dependency}{\f7\fs24\insrsid5201950 
: Module A is linked with a LIB file for Module B at compile/link time, and Module A\rquote s source code act
ually calls one or more functions in Module B.  One of the functions called in Module B is actually a forwarded function call to Module C.  Module B and Module C are both dependencies of Module A, but only Module B will be listed in Module A\rquote 
s import table.
\par 4.\tab }{\b\f7\fs24\insrsid5201950 Explicit Dependency}{\f7\fs24\insrsid5201950 
 (also known as a dynamic or run-time dependency): Module A is not linked with Module B at compile/link time.  At runtime, Module A dynamically loads Module B via a LoadLibrary type function.  Module B becomes a run time dependency 
of Module A, but will not be listed in any of Module A\rquote s tables.  This type of dependency is common with OCXs, COM objects, and Visual Basic applications.
\par }\pard\plain \s18\ql \fi-360\li720\ri0\sb120\widctlpar\tx720\faauto\rin0\lin720\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b0\insrsid5201950 5.\tab }{\insrsid5201950 System Hook Dependency}{\b0\insrsid5201950 
 (also known as an injected dependency): This type of dependency occurs when
 another application hooks a specific event (like a mouse event) in a process.  When that process produces that event, the OS can inject a module into the process to handle the event.  The module that is injected into the process is not really a dependent
 of any other module, but does resides in that process' address space.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Dependency Walker fully supports modules loaded by all of the above techniques.  Case 1, 2, and 3 can 
easily be detected by just opening a module in Dependency Walker.  Case 4 and 5 require runtime profiling, a new feature in Dependency Walker 2.0.  For more information on profiling, see the }{\f7\fs24\uldb\insrsid5201950 
Using Application Profiling to Detect Dynamic Dependencies}{\v\f7\fs24\insrsid5201950 application_profiling}{\f7\fs24\insrsid5201950  section.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # application_profiling}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Using Application Profiling to Detect Dynamic Dependencies}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0
\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Using Application Profiling to Detect Dynamic Dependencies}}}{\fs32\insrsid5201950 Using Application Profiling to Detect Dynamic Dependencies

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Dependency Walk
er version 2.0 adds application profiling, a technique used to watch a running application to see what modules it loads.  This allows Dependency Walker to detect dynamically loaded modules that are not necessarily reported in any on the import tables of o
ther modules.  Dependency Walker's profiler can also detect when a module fails to initialize, which often results in the "The application failed to initialize properly" error.
\par 
\par When a module is first opened by Dependency Walker, it is immediately scanned for all implicit, delay-load, and forwarded dependencies (for more information on dependency types, see the }{\f7\fs24\uldb\insrsid5201950 
Types of Dependencies Handled By Dependency Walker}{\v\f7\fs24\insrsid5201950 dependency_types}{\f7\fs24\insrsid5201950  section).  Once all the modules have been scanned, the results are displayed.  In 
addition to these known dependencies, modules are free to load other modules at run-time without any prior warning to the operating system.  These types of dependencies are known as dynamic or explicit dependencies.  There is really no way to detect dynam
ic dependencies without actually running the application and watching it to see what modules it loads at run-time.  This is exactly what Dependency Walker\rquote s application profiling does.
\par 
\par For profiling to work, the module you open in Dependency Walker has to be an executable file (usually ends with .EXE) that is designed to run on the system you are working with.  If not, the }{\f7\fs24\uldb\insrsid5201950 Start Profiling}{
\v\f7\fs24\insrsid5201950 HIDM_EXECUTE}{\f7\fs24\insrsid5201950  menu option and toolbar button will not be enabled.  When you choose to profile an application, your applica
tion should begin to run.  As your application runs, Dependency Walker will gather information and log it to the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 
, as well as update the other views.
\par 
\par It is the job of the user to "exercise" the application to ensure that all 
dynamic dependencies are found.  Usually dynamic dependencies are only loaded when needed.  For example, modules related to printing might only be loaded if the application actually prints.  In a case like this, if the application does not perform a print
 while being profiled, then Dependency Walker will not detect those modules related to printing.  Other modules might only get loaded if an error occurs in the application.  Scenarios like these might be hard to produce.  Because of this, }{
\b\f7\fs24\insrsid5201950 It is impossible to guarantee that }{\b\f7\fs24\ul\insrsid5201950 all}{\b\f7\fs24\insrsid5201950  dynamic dependencies are found}{\f7\fs24\insrsid5201950 
, but the more an application is exercised, the better the odds are of finding them.
\par 
\par Dependency Walker's application profiler tracks every module that gets loaded and attempts to determine which module actually requested the file to be loaded.  This allows dynamically loaded modules to be inserted into the }{\f7\fs24\uldb\insrsid5201950 
Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950  as a child of the module that actually loaded the module.
\par 
\par The profiler works by hooking particular fun
ction calls in the remote process being profiled.  On Windows 95, Windows 98, and Windows Me, only non-system modules can be hooked.  The result is that when a system module dynamically loads another module, the profiler cannot tell who the parent module 
is for the dynamically loaded module.  Parentless modules like these will be added to the root of the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 
.  All modules that are loaded due to a system-wide hook will also be added to the root of the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 
 since these types of modules are loaded directly by the OS and have no parent module.  Even though Dependency Walker may not be able to detect the parent of a dynamic dependency, it does guarantee that all modules that 
get loaded by the application will be detected.
\par 
\par One final benefit of the profiler is that it can correct the paths of any modules that may have been incorrectly determined during the initial implicit module scan.  When you first open a module in Dependenc
y Walker, it recursively scans all the import and export tables of modules to build the initial module hierarchy.  Only file names are stored in these tables, so dependency walker uses the rules you have set up in the }{\f7\fs24\uldb\insrsid5201950 
Module Search Order Dialog}{\v\f7\fs24\insrsid5201950 HIDD_SEARCH_ORDER}{\f7\fs24\insrsid5201950 
 to determine the full path to each module.  During profiling, Dependency Walker examines the real path of each module as they load and compares them to the modules in the tree.  If a module loads from a different path than Dependency Walker expected 
it to load from, then it will update the module hierarchy and other views to reflect the change.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # interpreting_errors}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K How to Interpret Warnings and Errors in Dependency Walker}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0
\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ How to Interpret Warnings and Errors in Dependency Walker}}}{\fs32\insrsid5201950 How to Interpret Warnings and Errors in Dependency Walker

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Dependency Walker may generate many warnings and errors for an application.  Some errors may cause an application to fail, while others are harmless and can be ignored.  Most failures fit into one of two catego
ries: load-time failures or run-time failures.
\par 
\par A load-time failure means that an application or module didn\rquote t even have a chance to run.  In more technical terms, this usually means that the entry-point to a module was never called since the operating system couldn\rquote 
t load all the required modules.  This can occur if an implicit or forward dependency could not be found or was missing a needed function (for more information on dependency types, see the }{\f7\fs24\uldb\insrsid5201950 
Types of Dependencies Handled By Dependency Walker}{\v\f7\fs24\insrsid5201950 dependency_types}{\f7\fs24\insrsid5201950  section).  You will also encounter a load-time failure if the application attempts to load a corru
pt or non-Windows module, a module for a different CPU type then you are using, or a 16-bit module into a 32-bit application.  Here are some common load-time error messages:
\par 
\par }\pard \ql \fi-360\li1080\ri0\sa80\nowidctlpar\tx1080\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet2.bmp\}\tab The dynamic link library BAR.DLL could not be found in the specified path...
\par \{bmct bullet2.bmp\}\tab The procedure entry point FOO could not be located in the dynamic link library BAR.DLL.
\par \{bmct bullet2.bmp\}\tab The application or DLL BAR.DLL is not a valid Windows image.
\par \{bmct bullet2.bmp\}\tab The application failed to initialize properly.
\par \{bmct bullet2.bmp\}\tab Initialization of the dynamic link library BAR.DLL failed. The process is terminating abnormally. 
\par \{bmct bullet2.bmp\}\tab The image file BAR.EXE is valid, but is for a machine type other than the current machine.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par Most load-time 
problems can be immediately detected by Dependency Walker.  When you first open a module in Dependency Walker, it scans that module for all implicit, forward, and delay-load dependencies.  Implicit and forward dependencies are required by the operating sy
s
tem in order for the application to run.  If any implicit or forward dependencies are missing or have errors, then it is likely that the application will encounter a load-time failure if run.  Delay-load dependencies are not required by the operating syst
em at load-time, so errors or warning with delay load dependencies may or may not cause problems.
\par 
\par Run-time dependencies are modules that an application loads after it has initialized and begun to run.  This is usually achieved by calling one of the LoadLib
rary type functions.  Once a module has been loaded, an application can call the GetProcAddress function to locate a specific function in the newly loaded module.  Dependency Walker can track all these calls and reports any failures.  However, if the appl
ication is prepared to handle the failure, then the warning can be ignored.
\par 
\par There are many reasons for using run-time dependencies.  First, they can increase load-time performance since an application can delay the loading of certain modules that may not b
e needed until later.  For example, if an application uses a DLL related to printing, that DLL might not get loaded unless you actually print something from the application.  Second, they can be used in cases where a module, or a function within a module,
 
may not exist.  For example, an application might need to call a Windows NT specific function when running on Windows NT, but the module or function does not exist on Windows 9x.  If the application were to implicitly link to the module that the function 
l
ives in, then a load-time failure would occur on Windows 9x since the operating system would not be able to locate the function at load-time.  By making it a run-time dependency, the application can check to see if the function exists and only call it if 
it does.
\par 
\par There are two types of run-time dependencies: explicit dependencies (often referred to as dynamic dependencies) and delay-load dependencies.  Explicit dependencies can be loaded at anytime during the life of the application with no prior notice.  
Because of this, the only way to determine what explicit dependencies an application will use is to run the application and watch it to see what it loads (for more information on profiling, see the }{\f7\fs24\uldb\insrsid5201950 
Using Application Profiling to Detect Dynamic Dependencies}{\v\f7\fs24\insrsid5201950 application_profiling}{\f7\fs24\insrsid5201950  section).  With explicit dependencies, the application directly calls LoadLibrary and GetProcAddress to do the work.

\par 
\par Delay-load dependencies are actually implemented as explicit dependencies, but a helper library and the linker do mo
st of the work.  Most all Windows modules have an "import table" stored in them.  This table is built by the linker and used by the operating system to determine the implicit and forward dependencies of a given module.  Any module or function in this list
 
that cannot be found will cause the module to fail.  If you tell the linker to make a module a delay-load dependency, then instead of storing that module's information in the main import table, it stores it in a separate delay-load import table.  At run-t
i
me, if a module calls into a delay-load dependency module, the call is trapped by the helper library.  This library then uses LoadLibrary to load the module and GetProcAddress to query all the functions referenced in the module.  Once this is complete, th
e
 call is passed along to the real function and execution resumes without the module that made the call even knowing what just happen.  All future calls from that specific module to the delay-loaded module will be made directly into the already loaded modu
le instead of being trapped by the helper library.
\par 
\par The delay-load helper library has a mechanism for notifying the caller if there is a failure.  Like failures with explicit dependencies, if the application is prepared for the failure, then this should not be a problem.
\par 
\par To summarize, implicit and forward dependencies are required dependencies that need to exist and have no errors or warnings.  Explicit and delay-load dependencies may not need to exist and may not need to export all the functions that the p
arent module wishes to import from them.  However, if an application is not prepared to handle a missing explicit or delay-load module, or a missing function within an explicit or delay-load module, then this can result in a run-time failure of the applic
a
tion.  Dependency Walker cannot predict if an application plans to handle failures, so it just warns you of all potential problems.  If you find an application runs smoothly, then you can probably ignore most all warnings.  However, if your application we
re to fail, then the warnings may provide some insight as to what caused the failure.
\par 
\par There is one other type of warning generated by Dependency Walker while profiling that is worth mentioning.  This is related to first and second exceptions.  When an exce
ption (like an access violation) occurs in an application, the application is given a chance to handle the exception.  These are known as first chance exceptions.  If the application handles the exception, then there should be no problem and the exception
 
can probably be ignored.  If the application does not handle the first chance exception, then it turns into a second chance exception, which are usually fatal to the application.  When a second chance exception occurs, the operating system usually puts up
 a dialog telling you that the application has crashed and needs to exit.
\par 
\par Dependency Walker always logs second chance exceptions and can optionally log first chance exceptions.  Many applications routinely generate first chance exceptions and handle them. 
 This is not a sign of a bad application since there are many legitimate reasons to generate first chance exceptions and handle them.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # path_files}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Dependency Walker Path (DWP) Files}}${\footnote \pard\plain \s16\ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 $ Dependency Walker Path (DWP) Files}}}{\fs32\insrsid5201950 Dependency Walker Path (DWP) Files
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Dependency Walker Path (DWP) files are used to define how Dependency Walker locates modules on your system.  By default, Dependency Walker is set up to simulate the search algorithm that the operating system uses to loca
te modules.  However, you can override this default and set up your own custom search criteria.  See the }{\f7\fs24\uldb\insrsid5201950 Module Search Order Dialog}{\v\f7\fs24\insrsid5201950 HIDD_SEARCH_ORDER}{\f7\fs24\insrsid5201950 
 section for more information.
\par 
\par DWP files are usually created by configuring a search order in the }{\f7\fs24\uldb\insrsid5201950 Module Search Order Dialog}{\v\f7\fs24\insrsid5201950 HIDD_SEARCH_ORDER}{\f7\fs24\insrsid5201950 
, and then choosing save from that dialog to save the search order to a DWP file.  This DWP file can then be loaded at a later time from the }{\f7\fs24\uldb\insrsid5201950 Module Search Order Dialog}{\v\f7\fs24\insrsid5201950 HIDD_SEARCH_ORDER}{
\f7\fs24\insrsid5201950  or from the }{\f7\fs24\uldb\insrsid5201950 Command Line}{\v\f7\fs24\insrsid5201950 HIDR_COMMAND_LINE_HELP}{\f7\fs24\insrsid5201950 .
\par 
\par DWP files can also be created and edited by hand.  DWP files are simply text files that contain a list of search groups.  The following is a list of supported keywords:
\par 
\par }\pard \ql \fi-1800\li2160\ri0\widctlpar\tx2160\tx2340\tx2520\tx2700\tx2880\faauto\rin0\lin2160\itap0 {\b\f7\fs24\insrsid5201950 SxS}{\f7\fs24\insrsid5201950 \tab Side-by-Side components
\par }{\b\f7\fs24\insrsid5201950 KnownDLLs}{\f7\fs24\insrsid5201950 \tab The system's "KnownDLLs" list
\par }{\b\f7\fs24\insrsid5201950 AppDir}{\f7\fs24\insrsid5201950 \tab The application directory
\par }{\b\f7\fs24\insrsid5201950 32BitSysDir}{\f7\fs24\insrsid5201950 \tab The 32-bit system directory
\par }{\b\f7\fs24\insrsid5201950 16BitSysDir}{\f7\fs24\insrsid5201950 \tab The 16-bit system directory (Windows NT/2000/XP only)
\par }{\b\f7\fs24\insrsid5201950 OSDir}{\f7\fs24\insrsid5201950 \tab The system's root OS directory
\par }{\b\f7\fs24\insrsid5201950 AppPath}{\f7\fs24\insrsid5201950 \tab The application's registered "App Paths" directories
\par }{\b\f7\fs24\insrsid5201950 SysPath}{\f7\fs24\insrsid5201950 \tab The system's "PATH" environment variable directories
\par }{\b\f7\fs24\insrsid5201950 UserDir}{\f7\fs24\insrsid5201950 \tab A user defined directory
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par Each keyword must be on a line by itself.  All keywords are case insensitive.  Except for the UserDir keyword, no keyword can be specified more than once.  The UserDir keyword is a speci
al keyword that also requires a directory path.  The syntax for it is:
\par 
\par \tab UserDir c:\\path\\to\\some\\directory\\
\par 
\par You may use system variables in the path as well.  For example:
\par 
\par \tab UserDir %build_directory%\\%target_cpu%\\debug\\
\par 
\par All spaces and empty lines in the DWP file are ignored, except for spaces that are part of a directory path.  No quotes should be used with any of the keywords or paths.  You may add comments to the file by starting a line with a colon (:), semicolon (;),
 forward slash (/), single quote ('), or pound (#).
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # faq}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Frequently Asked Questions (FAQ)}}${\footnote \pard\plain \s16\ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 $ Frequently Asked Questions (FAQ)}}}{\fs32\insrsid5201950 Frequently Asked Questions (FAQ)
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard\plain \s18\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
Dependency Walker seems to only show some of my application's dependencies.  Why doesn't it show all of them?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab }{\f7\fs24\insrsid14092412\charrsid14092412 
When you first open a module in Dependency Walker, it only shows implicit, forwarded, and delay-load dependencies.}{\f7\fs24\insrsid14092412   }{\f7\fs24\insrsid14092412\charrsid14092412 
Many dependencies are loaded dynamically and will not be detected until you profile the application}{\f7\fs24\insrsid14092412  from within Dependency Walker.  }{\f7\fs24\insrsid5201950 For more information, see }{\f7\fs24\uldb\insrsid5201950 
Types of Dependencies Handled By Dependency Walker}{\v\f7\fs24\insrsid5201950 dependency_types}{\f7\fs24\insrsid5201950  and }{\f7\fs24\uldb\insrsid5201950 Using Application Profiling to Detect Dynamic Dependencies}{\v\f7\fs24\insrsid5201950 
application_profiling}{\f7\fs24\insrsid5201950 .
\par 
\par }\pard\plain \s18\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
How do I view the parameter and return types of a function?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab For most functions}{\v\f7\fs24\insrsid5201950 applic
ation_profiling}{\f7\fs24\insrsid5201950 , this information is simply not present in the module.  The Windows\rquote 
 module file format only provides a single text string to identify each function.  There is no structured way to list the number of parameters, the parameter types, or the 
return type.  However, some languages do something called function "decoration" or "mangling", which is the process of encoding information into the text string.  For example, a function like }{\b\f7\fs24\insrsid5201950 int Foo(int, int)}{
\f7\fs24\insrsid5201950  encoded with simple decoration might be exported as }{\b\f7\fs24\insrsid5201950 _Foo@8}{\f7\fs24\insrsid5201950 
.  The 8 refers to the number of bytes used by the parameters.  If C++ decoration is used, the function would be exported as }{\b\f7\fs24\insrsid5201950 ?Foo@@YGHHH@Z}{\f7\fs24\insrsid5201950 
, which can be directly decoded back to the function's original prototype: }{\b\f7\fs24\insrsid5201950 int Foo(int, int)}{\f7\fs24\insrsid5201950 .  Dependency Walker supports C++ undecoration by using the }{\f7\fs24\uldb\insrsid5201950 
Undecorate C++ Functions Command}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950 .
\par 
\par }\pard\plain \s18\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
Why are my function names exported differently then I declare them?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab }{\v\f7\fs24\insrsid5201950 application_profiling}{
\f7\fs24\insrsid5201950 Many compilers "decorate" function names by default.  Unless you give the compiler specific instructions on how to export functions, a function like }{\b\f7\fs24\insrsid5201950 int Foo(int, int)}{\f7\fs24\insrsid5201950 
 may end up getting exported as }{\b\f7\fs24\insrsid5201950 _Foo@8}{\f7\fs24\insrsid5201950 , or even }{\b\f7\fs24\insrsid5201950 ?Foo@@YGHHH@Z}{\f7\fs24\insrsid5201950 
 if C++ decoration is used.  Languages like C++ allow function overloading, which is the
 ability to declare multiple functions with the same name, but with different parameters.  Because of this, each function must have a unique signature string since exporting just the name would cause a name conflict.  To disable C++ decoration, you can us
e the }{\b\f7\fs24\insrsid5201950 extern "C"}{\f7\fs24\insrsid5201950  notation when declaring your functions in a C++ source file.  To prevent decoration altogether, you can add a DEF file to your }{\f7\fs24\insrsid14092412 C/C++ }{
\f7\fs24\insrsid5201950 project and declare the actual function names you want exported.
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab My application seems to run just fine during
 profiling, however, I see errors in the log view and red or yellow icons in the other views.  Is this normal?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab 
It is fairly normal to see errors or warnings during profiling.  One common error seen is when one module tries to dynamically load another mo
dule (using one of the LoadLibrary functions), but the module is not found.  Dependency Walker makes a note of this failure, but if the application is prepared for the failure, then this is not a problem.  Another common error is when a module tries to dy
n
amically locate a function (using GetProcAddress) in a module.  Again, this is not a problem if the application is prepared for the failure.  You may also see first-chance exceptions occur in the log view.  If the application handles the exceptions and th
e
y don't turn into second-chance exceptions, then this is not a problem.  All these cases are normal, and can usually be ignored.  However, if the application you are profiling crashes or fails to run properly, then the errors may provide some insight as t
o what caused the problem.  See the }{\f7\fs24\uldb\insrsid5201950 How to Interpret Warnings and Errors in Dependency Walker}{\v\f7\fs24\insrsid5201950 interpreting_errors}{\f7\fs24\insrsid5201950  section for more details.
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab Wow, my application depends on }{
\ul\insrsid5201950 all}{\insrsid5201950  those files?  Which ones do I need to redistribute with my application?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab For 
starters, there are certain modules you should never redistribute with your application, such as kernel32.dll, user32.dll, and gdi32.dll.  To see which files you are allowed to redistribute, you can look for a file named REDIST.TXT on your development com
p
uter.  This file is included with development suites like Microsoft Visual C++ and Visual Basic.  You can also look up "redistributable files" and "redist.txt" in the MSDN index for more information on what files to redistribute, how to redistribute them,
 
how to check file versions, etc.  Another site worth mentioning is the Microsoft DLL Help Database (http://support.microsoft.com/servicedesks/FileVersion/dllinfo.asp).  This site has detailed version histories of DLLs, and lists what products were shipped
 with each version. 
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
What does "Shared module not hooked" mean, and why are some module's DllMain calls never being logged?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab 
Dependency Walker hooks modules as they load in order to track calls to functions like DllMain, LoadLibrary, and GetProcAddres
s.  Any module loaded above address 0x80000000 (usually system modules) on Windows 95/98/Me is shared system-wide and cannot be hooked.  The result is that Dependency Walker cannot log information about function calls in those modules.  Windows NT/2000/XP
 does not have this limitation.  See }{\f7\fs24\uldb\insrsid5201950 Using Application Profiling to Detect Dynamic Dependencies}{\v\f7\fs24\insrsid5201950 application_profiling}{\f7\fs24\insrsid5201950  for more information.
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
Why do some modules show up more than once under a single parent module?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab Dependency Walker may show a module mo
re than once to inform you that it is a dependency for more than one reason.  It is possible for a module to show up as an implicitly linked dependency, a forwarded dependency, and a dynamic dependency, all under a single parent module.  See the }{
\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950  for more details.  In reality, only one copy of the module resides in memory during run-time.
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
Is there a command line version of Dependency Walker?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab Dependency Walker can be run as a graphical application or as 
a console application.  When the console mode option is used, Dependency Walker can process a module, save the results, and exit without any graphical interface or user prompting.  See the }{\f7\fs24\uldb\insrsid5201950 Command Line Options}{
\v\f7\fs24\insrsid5201950 HIDR_COMMAND_LINE_HELP}{\f7\fs24\insrsid5201950  section for more information.
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
Will Dependency Walker work with Visual Basic or Windows CE modules?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab Yes.  Dependency Walker }{\f7\fs24\insrsid6901983 should}{
\f7\fs24\insrsid5201950  work with any 32-bit or 64-bit Windows module, regardless of what language was used to develop it or what }{\f7\fs24\insrsid4272917 Windows }{\f7\fs24\insrsid5201950 platform it is targeted for.  T
his includes modules for Windows 95, Windows 98, Windows Me, Windows NT, Windows 2000, Windows XP, }{\f7\fs24\insrsid4272917 and }{\f7\fs24\insrsid5201950 Windows CE.
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
Will Dependency Walker work with 16-bit modules?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab }{\f7\fs24\insrsid6901983\charrsid6901983 
No. Dependency Walker only supports 32-bit and 64-bit Windows modules. It never has and never will support 16-bit.}{\f7\fs24\insrsid5201950\charrsid6901983 
\par }{\f7\fs24\insrsid5201950 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab What do all the version numbers mean?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab See the }{\f7\fs24\uldb\insrsid5201950 
Overview of Module Version Numbers}{\v\f7\fs24\insrsid5201950 version_numbers}{\f7\fs24\insrsid5201950  section for the details.
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab Can I print out the results of a session?

\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab 
No, but you can save the results to several different text formats which can be viewed or printed from a text viewer program like Notepad.
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
How can I send the results of a session to someone?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab 
Dependency Walker supports several ways to capture the data in a session.  All the views support simple copying from them using the }{\f7\fs24\uldb\insrsid5201950 Copy Command}{\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{\f7\fs24\insrsid5201950 
.  Dependency Walker also supports several methods of saving the entire session to a file.  There a
re various text formats that can be easily printed or emailed to someone for viewing.  You can also save the results to a Dependency Walker Image (DWI) file, which can be loaded by Dependency Walker on another computer to see the captured results from you
r computer.  For more information on saving the session to a file, see the }{\f7\fs24\uldb\insrsid5201950 Save Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{\f7\fs24\insrsid5201950  and }{\f7\fs24\uldb\insrsid5201950 File Save Dialog}{
\v\f7\fs24\insrsid5201950 AFX_HIDD_FILESAVE}{\f7\fs24\insrsid5201950  section.
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab What do all the icons mean?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab 
Each view in Dependency Walker has detailed help describing what the icons mean for that view.  See the }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  section for a list of views.

\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
Can I search for a function by name or ordinal?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab 
All the list views in Dependency Walker can be sorted and searched.  Any text you type while in a list vi
ew will search for that text in the column that the list is currently sorted by.  For example, if the export function list is sorted by function names and you type "Get", the first function that starts with "Get" will be highlighted.  This will work for a
ny column in any list.  For more details, see the help sections for the actual list views.
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
Dependency Walker's open dialog is not showing a file that I want to open.  How can I fix this?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab 
By default, Windows "hides" certain system files (like DLLs) fr
om the user.  To change this setting, open "My Computer" and select "Options" from the menu.  Depending on what version of Windows you are using, this should be off of the "View" or "Tools" menu, and may be called "Folder Options" or just "Options".  In t
h
e dialog that appears, choose the "View" tab.  You should see an option that reads either "Show all files" or "Show hidden files and folders".  Make sure this option is selected.  You will also see a check-box that reads "Hide MS-DOS file extensions for f
ile types that are registered" or "Hide file extensions for known file types".  You will want to uncheck this box.  Once done, press "Ok" in that dialog.  Dependency Walker should now show all system files in its open dialog.
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab How do I uninstall Dependency Walker?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab 
Dependency Walker does not have a setup or uninstall program.  It was designed to simply run when you want it, and delete if you don\rquote t need it anymore.  If you have told Dependency Walker to handle certain file extensions, you will probably w
ant to remove those associations before deleting the program.  This can be done by using the }{\f7\fs24\uldb\insrsid5201950 Handled File Extensions}{\v\f7\fs24\insrsid5201950 HIDM_HANDLED_FILE_EXTS}{\f7\fs24\insrsid5201950 
 command.  The files to delete when Dependency Walker is no longer needed are depends.exe, depends.dll, depends.cnt, and depends.hlp.
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
Why are some modules looking for a function named "IsTNT" in KERNEL32.DLL?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab 
TNT is a 32-bit emulation layer written by Phar Lap.  There are still some modules in use that have pieces of code that check to see if they are running on TNT by calling GetProcAddress("IsTNT") for KERNEL32.DLL.  This warning can be ignored.
\par 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
Why are some modules trying to load a module named "AUX"?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab 
This is usually related to modules trying to load the AUX audio driver.  Since AUX is a reserved DOS name, the load fails.  This warning is harmless and can be ignored.
\par }{\f7\fs24\insrsid6901983 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0\pararsid6901983 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid6901983 Q:\tab }{
\insrsid6901983\charrsid6901983 Why am I seeing a lot of applications where MPR.DLL shows up in red under SHLWAPI.DLL because it is missing a function named WNetRestoreConnectionA?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0\pararsid6901983 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid6901983 A:\tab }{\f7\fs24\insrsid6901983\charrsid6901983 
Some versions of SHLWAPI.DLL (like the one on Windows XP) have a delay-load dependency on the function WNetRestoreConnectionA in MPR.DLL. Missing delay-load functions are not a problem as long as the calling DLL is prepared to handle the situation. Depend
e
ncy Walker flags all potential problems as it cannot detect if an application intends to handle the issue. In the case of SHLWAPI.DLL, this is not an problem as it does not require WNetRestoreConnectionA to exist and handles the missing function at runtim
e. This warning can be ignored. See the "How to Interpret Warnings and Errors in Dependency Walker" section in help for more details.
\par }\pard \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 {\f7\fs24\insrsid5201950 
\par }\pard\plain \s2\ql \fi-547\li547\ri0\sa120\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\outlinelevel1\rin0\lin547\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Q:\tab 
MFC42.DLL is trying to load MFC42LOC.DLL, but it is not found.  [or] COMCTL32.DLL is trying to load CMCTLENU.DLL, but it is not found.  Why is this?
\par }\pard\plain \ql \fi-540\li540\ri0\widctlpar\tx540\tx720\tx900\tx1080\tx1260\faauto\rin0\lin540\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 A:\tab 
Both MFC42LOC.DLL and CMCTLENU.DLL are language specific resource DLLs that may not be needed on your system.  Many modules on Windows store all their language specific messages in external DLLs (one per language).  At run-time, the module loads the langu
a
ge DLL for the current language of the operating system.  The names of the modules usually end in "ENU" for United States English, "ESP" for Spanish, "JPN" for Japanese, etc.  The "LOC" ending that MFC uses stands for "localized".  When MFC is installed, 
i
t copies the correct language DLL to your system and renames it to MFC42LOC.DLL.  So, why the missing module?  Well, most modules protect themselves from failure by storing one default language in the main DLL itself.  It the language specific resource DL
L
 fails to load, then the module defaults to using the local resources in itself.  In most cases, these default resources are the same resources as would be in the ENU version of the resource DLL.  For this reason, there does not need to be an ENU version 
of the resource DLL, and therefore it fails to find one at runtime.  This is normal.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDR_DEPENDTYPE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Module Session Window}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Module Session Window}}}{\fs32\insrsid5201950 Module Session Window
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par A module session window is created for every module or Dependency Walker Image (DWI) file that is opened.  The window is split into the following five views:
\par 
\par }\pard \ql \fi-360\li720\ri0\widctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 

\par }\pard \ql \fi-360\li720\ri0\sb80\widctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
\par \{bmct bullet1.bmp\}\tab }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par All views support right-click context menus to commonly used commands for that view.  All views support context help.  You may press F1 anywhere in Dependency Walker to get help on the item that currently has the focus.  You may also use the }{
\f7\fs24\uldb\insrsid5201950 Context Help}{\v\f7\fs24\insrsid5201950 HID_CONTEXT_HELP}{\f7\fs24\insrsid5201950  tool to allow you to simply click on the item you wish to get help on.
\par 
\par For navigating through the views, see the }{\f7\fs24\uldb\insrsid5201950 Previous Pane}{\v\f7\fs24\insrsid5201950 HID_PREV_PANE}{\f7\fs24\insrsid5201950  command and the }{\f7\fs24\uldb\insrsid5201950 Next Pane}{\v\f7\fs24\insrsid5201950 HID_NEXT_PANE}{
\f7\fs24\insrsid5201950  command.  For navigating through the open Module Session Windows, see the }{\f7\fs24\uldb\insrsid5201950 Previous Window}{\v\f7\fs24\insrsid5201950 HID_SC_PREVWINDOW}{\f7\fs24\insrsid5201950  command, the }{
\f7\fs24\uldb\insrsid5201950 Next Window}{\v\f7\fs24\insrsid5201950 HID_SC_NEXTWINDOW}{\f7\fs24\insrsid5201950  command, and the }{\f7\fs24\uldb\insrsid5201950 Window 1, 2, 3, ...}{\v\f7\fs24\insrsid5201950 HID_WINDOW_ALL}{\f7\fs24\insrsid5201950 
 command.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDR_MODULE_TREE_VIEW}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Module Dependency Tree View}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Module Dependency Tree View}}}{\fs32\insrsid5201950 Module Dependency Tree View
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The Module Dependency Tree View displays a hierarchical view of all the modules' dependencies.  There are several ways a module can be a dependency of another module.  For more information on dependency types, see the }{\f7\fs24\uldb\insrsid5201950 
Types of Dependencies Handled By Dependency Walker}{\v\f7\fs24\insrsid5201950 dependency_types}{\f7\fs24\insrsid5201950  section.
\par 
\par Dependency Walker starts with the root module you chose to open and scans its import tables to build a list of required dependent modules.  Dependency Walker then scans each of these dependent modules for their depend
ent modules.  This recursion continues until all modules and their dependent modules have been processed.
\par 
\par To prevent a bloated tree and possible infinite circular loops with dependent modules, Dependency Walker stops processing a given branch of the tree 
when it reaches a module that it has already processed somewhere else in the tree.  Duplicate modules are marked with a small arrow in the middle of their accompanying image (see below).  To determine what the branch would have looked like if Dependency W
alker had processed it, use the }{\f7\fs24\uldb\insrsid5201950 Highlight Original Instance Command}{\v\f7\fs24\insrsid5201950 HIDM_SHOW_ORIGINAL_MODULE}{\f7\fs24\insrsid5201950  to find the original instance of the module in the tree.
\par 
\par Dependency Walker also scans each dependent module looking for forwarded function calls to other modules. 
 If a forwarded function is found and actually called by the parent module, then the module that the function is forwarded to is also pulled in and added to the dependency tree.  These forwarded modules are specially marked in the dependency tree with a s
mall state image next to their accompanying image (see below).
\par 
\par While processing the dependency tree, Dependency Walker performs several validity checks along the way.  It checks to make sure each module is a valid 32-bit or 64-bit Windows module.  It check
s for mismatched binaries, such as an x86 module with an Alpha module.  It scans import and export function tables looking for unresolved external functions.  It checks for circular dependencies, which are allowed, and for circular forwarded dependencies,
 which are not allowed.  Any errors that are encountered while processing the tree will be displayed using a special image (see below) for the particular modules in error and/or by a message box.
\par 
\par The }{\f7\fs24\uldb\insrsid5201950 Auto Expand}{\v\f7\fs24\insrsid5201950 HIDM_AUTO_EXPAND}{\f7\fs24\insrsid5201950  setting controls how much of
 the tree is initially seen after loading a module.  When this option is turned on, the entire tree will be displayed.  When the option is turned off, only the root module, its immediate dependencies, and modules with errors will be shown.
\par 
\par Modules can be displayed using full file paths or just the file name to conserve screen space.  You can control what is displayed using the }{\f7\fs24\uldb\insrsid5201950 Full Paths}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_FULL_PATHS}{\f7\fs24\insrsid5201950 
 option.  You may also copy the selected module\rquote s file name or path to the clipboard by selecting the }{\f7\fs24\uldb\insrsid5201950 Copy Command}{\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{\f7\fs24\insrsid5201950 
.  The actual text copied will differ depending on how the }{\f7\fs24\uldb\insrsid5201950 Full Paths}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_FULL_PATHS}{\f7\fs24\insrsid5201950 
 option is set.  The contents of the Module Dependency Tree View can also be saved to a text file using the }{\f7\fs24\uldb\insrsid5201950 Save Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{\f7\fs24\insrsid5201950  or }{\f7\fs24\uldb\insrsid5201950 
Save As Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE_AS}{\f7\fs24\insrsid5201950 .
\par 
\par The following is a table of the primary images that can accompany each module in the dependency tree.  This list is just a subset of all the possible images.  Actual images can be a combination of one or more of the following images:
\par 
\par }\pard \ql \fi-547\li907\ri0\widctlpar\tx900\faauto\rin0\lin907\itap0 {\b\f7\fs24\insrsid5201950 Normal Images
\par }\pard \ql \fi-540\li1260\ri0\sb120\widctlpar\tx1260\faauto\rin0\lin1260\itap0 {\f7\fs24\insrsid5201950 \{bmct tree01.bmp\}\tab Normal module with no errors.
\par \{bmct tree02.bmp\}\tab Duplicate module.  This module has already been processed somewhere else in the tree.  You can use the }{\f7\fs24\uldb\insrsid5201950 Highlight Original Instance Command}{\v\f7\fs24\insrsid5201950 HIDM_SHOW_ORIGINAL_MODULE}{
\f7\fs24\insrsid5201950  to find the original instance of the module in the tree.
\par \{bmct tree03.bmp\}\tab Forwarded module.  This module is a dependency because the parent module has forwarded one of its functions to this module.
\par \{bmct tree04.bmp\}\tab Delay-load module.  This module will be dynamically loaded if any of its exported functions are actually called at run-time.
\par \{bmct tree05.bmp\}\tab Dynamic module.  This module was detected during profiling and was dynamically loaded or used by its parent module.  If the module has no parent, then Dependency Walker was unable to determine who loaded the module.  See }{
\f7\fs24\uldb\insrsid5201950 Using Application Profiling to Detect Dynamic Dependencies}{\v\f7\fs24\insrsid5201950 application_profiling}{\f7\fs24\insrsid5201950  for more information.
\par }\pard \ql \fi-547\li1267\ri0\sb120\widctlpar\tx1260\faauto\rin0\lin1267\itap0 {\f7\fs24\insrsid5201950 \{bmct tree06.bmp\}\tab 
This module was dynamically loaded by a call to the LoadLibraryEx function with the DONT_RESOLVE_DLL_REFERENCES flag and/or the LOAD_LIBRARY_AS_DATAFILE flag.  These flags
 cause the module to get mapped into memory without loading its dependent modules or calling the module\rquote s DllMain function.
\par \{bmct tree07.bmp\}\tab 64-bit module.  This module is designed to run on a 64-bit versions of Windows.  Modules are assumed to be 32-bit if this image is not present.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par }\pard \ql \fi-547\li907\ri0\widctlpar\tx900\faauto\rin0\lin907\itap0 {\b\f7\fs24\insrsid5201950 Warning and Error Images
\par }\pard \ql \fi-540\li1267\ri0\sb120\widctlpar\tx1260\faauto\rin0\lin1267\itap0 {\f7\fs24\insrsid5201950 \{bmct tree08.bmp\}\tab Missing module.  This module could not be found in the search path.  See the }{\f7\fs24\uldb\insrsid5201950 
Configure Search Order Command}{\v\f7\fs24\insrsid5201950 HIDM_CONFIGURE_SEARCH_ORDER}{\f7\fs24\insrsid5201950  for more information.
\par \{bmct tree09.bmp\}\tab Invalid module.  See the }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950  for an error message describing the module error.
\par \{bmct tree10.bmp\}\tab Module warning.  This module is either missing one or more export functions that are required by its parent module, is of the wrong CPU type, or failed to initialize when being loaded.  For a missing export, the }{
\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
 will list the actual unresolved functions that are causing the problem.  For implicit dependencies, this is an error that will cause the parent module to fail to load.  If the module failed to load or initialized, then check the }{
\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950  for details on the failure.
\par }\pard \ql \fi-547\li1267\ri0\sb120\widctlpar\tx1260\faauto\rin0\lin1267\itap0 {\f7\fs24\insrsid5201950 \{bmct tree11.bmp\}\tab Delay-load module warning.  This module is either missing one or more ex
port functions that are required by its parent module, or is of the wrong CPU type.  For a missing export, the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
 will list the actual unresolved functions that are missing.  For delay-load dependencies, t
his is most likely not an error since one reason developers use delay-load modules is when they are unsure if a particular function exists in dependent module.  Parents of delay-load modules have techniques for recovering from missing exports in the delay
-loaded dependent module.
\par \{bmct tree12.bmp\}\tab Dynamic module warning.  This module is either missing one or more export functions that the parent module attempted to retrieve using GetProcAddress, is of the wrong CPU type, or failed to initialize when being l
oaded.  For a missing export, the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
 will list the actual functions that the parent module could not locate.  For dynamic dependencies, this is usually just a warning, since it is perfectly valid for a mod
ule to dynamically check for the existence of a function in another module, even if the function does not exist.  If the module failed to load or initialized, then check the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 
HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950  for details on the failure.
\par }\pard \ql \li0\ri0\widctlpar\tx900\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par See the }{\f7\fs24\uldb\insrsid5201950 How to Interpret Warnings and Errors in Dependency Walker}{\v\f7\fs24\insrsid5201950 interpreting_errors}{\f7\fs24\insrsid5201950  section for more details on module errors.
\par 
\par It is possible for a module to show up more than once as a dependency of a single parent module.  Dependency Walker does this to inform you that this
 module is a dependency for more than one reason.  A module can show up as an implicitly linked dependency, a forwarded dependency, and a dynamic dependency, all under a single parent module.
\par 
\par For example, if module A implicitly links to module B, you will see module B under module A as an implicit dependency.  The functions listed in the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 
HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950  for that instance of module B are what is required for module A to be able to successfully load.  During runtime prof
iling, if module A dynamically loads module B, a second instance of module B will appear under module A, but this time with a different image (see above) signifying that it was dynamically loaded.  The functions listed in the }{
\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
 for this second instance of module B are what module A looked for in module B at runtime using the GetProcAddress function call. 
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDR_MODULE_LIST_VIEW}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Module List View}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Module List View}}}{\fs32\insrsid5201950 Module List View
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The Module List View displays a list of all unique modules that are dependencies for the root module you opened.  This list defines the set of files needed for the module to load and execute as a running process.
\par 
\par Modules can be displayed using full file paths or just the file name to conserve screen space.  You can control what is displayed using the }{\f7\fs24\uldb\insrsid5201950 Full Paths}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_FULL_PATHS}{\f7\fs24\insrsid5201950 
 option.  You may also copy the selected modules\rquote  file names or paths to the clipboard by selecting the }{\f7\fs24\uldb\insrsid5201950 Copy Command}{\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{\f7\fs24\insrsid5201950 
.  The actual text copied will differ depending on how the }{\f7\fs24\uldb\insrsid5201950 Full Paths}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_FULL_PATHS}{\f7\fs24\insrsid5201950 
 option is set.  If more than one module is selected, a list will be copied to the clipboard with carriage returns after each module.  The complete contents of the Mo
dule List View can also be saved to a text file or comma separated value (CSV) file using the }{\f7\fs24\uldb\insrsid5201950 Save Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{\f7\fs24\insrsid5201950  or }{\f7\fs24\uldb\insrsid5201950 Save As Command}
{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE_AS}{\f7\fs24\insrsid5201950 .
\par 
\par There is }{\b\f7\fs24\insrsid5201950 not}{\f7\fs24\insrsid5201950  a one-to-one relationship between the modules listed in this list view and the modules listed in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 
HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 .  This list view shows the unique set of modules, where as the tree view shows all the module relationships.  A module like KERNEL32.DLL may show up dozens of times in the tree view since many
 other modules depend on it, but it will only show up once in this list view.  Some instances of KERNEL32.DLL might be implicitly loaded, while others may be dynamically loaded.  Some might have import / export mismatch errors, while others may have no er
r
ors.  Since there is not a one-to-one relationship between the two views, the module list view tries to use images for modules that encapsulate the state of all instances of each module in the tree view.  For example, if KERNEL32.DLL appears in the tree v
iew ten times with no errors and one time with an import / export mismatch error, then the list view will show KERNEL32.DLL as having an import / export mismatch error.
\par  
\par Dependency Walker also gives precedence to certain types of dependencies.  If a module
 is implicitly required for an application to load, then it will appear with the implicit module image in the module list view.  This is true even if the module is also listed as a delay-load or dynamic dependency in the tree view, since an implicit depen
d
ency is the most significant type of dependency and is required for the application to load.  If a module is dynamically loaded or is a child of a dynamically loaded module, then it will appear with the dynamic module image in the list view.  If a module 
i
s delay-loaded or is a child of a delay-loaded module, then it will appear with the delay-load module image in the list view.  If a module is both a delay-load and dynamic dependency, it will be shown as a dynamic dependency in the list view since modules
 that actually get dynamically loaded are given precedence over delay-loaded modules that don\rquote t get loaded.  This can cause images in the list view to change from delay-load to dynamic as modules get loaded dynamically.
\par  
\par The following is a table of the primary images that can accompany each module in the Module List View.  This list is just a subset of all the possible images.  Actual images can be a combination of one or more of the following images:
\par 
\par }\pard \ql \fi-547\li907\ri0\widctlpar\tx900\faauto\rin0\lin907\itap0 {\b\f7\fs24\insrsid5201950 Normal Images
\par }\pard \ql \fi-547\li1454\ri0\sb120\widctlpar\tx1440\faauto\rin0\lin1454\itap0 {\f7\fs24\insrsid5201950 \{bmct mod01.bmp\}\tab All instances of this mo
dule were normal and had no errors.  If no delay-load image (hour glass) or dynamic image (star / asterisk) is to the left of this module image, then at least one instance of this module is implicitly required for the root module to load.
\par \{bmct mod02.bmp\}\tab All instances of this module are marked as delay-load or are children of modules marked as delay-load.  Modules with this image will change to dynamic dependencies at runtime if the module is actually loaded.
\par \{bmct mod03.bmp\}\tab All instances of this module were dynamically loaded and detected during profiling.  See }{\f7\fs24\uldb\insrsid5201950 Using Application Profiling to Detect Dynamic Dependencies}{\v\f7\fs24\insrsid5201950 application_profiling}{
\f7\fs24\insrsid5201950  for more information.
\par \{bmct mod04.bmp\}\tab All instances of this module were dynamically loaded by calls to the LoadLibra
ryEx function with the DONT_RESOLVE_DLL_REFERENCES flag and/or the LOAD_LIBRARY_AS_DATAFILE flag.  These flags cause the module to get mapped into memory without loading its dependent modules or calling the module\rquote 
s DllMain function.  If a module with this image is later loaded without the DONT_RESOLVE_DLL_REFERENCES and LOAD_LIBRARY_AS_DATAFILE flags, then the image will change to the standard dynamic dependency image above.
\par \{bmct mod05.bmp\}\tab 64-bit module.  This module is designed to run on a 64-bit versions of Windows.  Modules are assumed to be 32-bit if this image is not present.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par }\pard \ql \fi-547\li907\ri0\widctlpar\tx900\faauto\rin0\lin907\itap0 {\b\f7\fs24\insrsid5201950 Warning and Error Images
\par }\pard \ql \fi-547\li1454\ri0\sb120\widctlpar\tx1440\faauto\rin0\lin1454\itap0 {\f7\fs24\insrsid5201950 \{bmct mod06.bmp\}\tab Missing module.  This module could not be found in the search path.  See the }{\f7\fs24\uldb\insrsid5201950 
Configure Search Order Command}{\v\f7\fs24\insrsid5201950 HIDM_CONFIGURE_SEARCH_ORDER}{\f7\fs24\insrsid5201950  for more information.
\par \{bmct mod07.bmp\}\tab Invalid module.  This module will be accompanied by an error message to describe the problem.
\par \{bmct mod08.bmp\}\tab Module warning.  At least one instance of this module is either missing one or more export functions that
 are required by its parent module, is of the wrong CPU type, or failed to load at runtime.  Locate the offending module(s) in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{
\f7\fs24\insrsid5201950  and then look in the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
 for that module to see the actual unresolved functions that are causing the problem.  This may or may not be an error.  If the offending module(s) are marked as dynamic, then this is just a warning since it is valid for modules to call GetProcAddress to 
d
ynamically check for a function and fail to find it.  If the offending module(s) are delay-load, then this is also probably not an error since one reason developers use delay-load dependencies is when they are unsure if a function exists in a dependent mo
dule.  If the offending module(s) are implicit or forwarded dependencies, then this is an error and will cause the parent of those modules to fail to load.  If no export functions are missing, then check the }{\f7\fs24\uldb\insrsid5201950 Log View}{
\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950  to see if the module error is related to a load failure.
\par }\pard \ql \li0\ri0\widctlpar\tx900\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par See the }{\f7\fs24\uldb\insrsid5201950 How to Interpret Warnings and Errors in Dependency Walker}{\v\f7\fs24\insrsid5201950 interpreting_errors}{\f7\fs24\insrsid5201950  section for more details on module errors.
\par }\pard \ql \li0\ri0\sa120\widctlpar\tx900\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par The Module List View contains several columns of information about each module.  These columns include:
\par }\pard \ql \fi-360\li720\ri0\sb80\nowidctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Image:}{\f7\fs24\insrsid5201950  See above list for descriptions.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Module:}{\f7\fs24\insrsid5201950  Full path or file name for the module file.  See the }{\f7\fs24\uldb\insrsid5201950 Full Paths}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_FULL_PATHS}{\f7\fs24\insrsid5201950 
 option for toggling between the two modes.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 File Time Stamp:}{\f7\fs24\insrsid5201950  Date and time of the module file.  This is the time that the file was last saved.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Link Time Stamp:}{\f7\fs24\insrsid5201950  Date and time that the module was built.  This is a value that the linker stores in the file itself.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 File Size:}{\f7\fs24\insrsid5201950  Size of the module file.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Attr.:}{\f7\fs24\insrsid5201950  Attributes of the module file.  Possible values are R (read only), H (hidden), S (system), A (archive), C (compressed), T (temporary), O (offline), and E (encrypted).

\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Link Checksum:}{\f7\fs24\insrsid5201950 
 The module checksum from when the module was built.  This value is set by using the linker's /RELEASE command line option.  If this linker option is not specified, then the ch
ecksum may be zero.  This value will be shown in red if it is not zero and does not match the actual module checksum.  If the values do not match, it means that the module has been modified after it was built.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Real Checksum:}{\f7\fs24\insrsid5201950  The actual module checksum.  This value is computed by Dependency Walker and should match the checksum computed by the linker when the module was built.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 CPU:}{\f7\fs24\insrsid5201950  Type of CPU that the module was built for.  Possible values are x86, Intel 64, Alpha AXP, A
lpha 64, PowerPC, MIPS R3000 BE (big endian), MIPS R3000, MIPS R4000, MIPS R10000, MIPS WinCE V2, SH3, SH3E, SH4, SH5, ARM, Thumb, MIPS 16, MIPS FPU, MIPS FPU 16, CEE, and CEF.  This value will be shown in red if it does not match the CPU type of the root
 module in the session.  This value is set by using the linker's /MACHINE command line option.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Subsystem:}{\f7\fs24\insrsid5201950  Type of subsystem that the module was built to run in.  Possible values are Native, GUI, Console, Win9x driver, OS/2 console, Posix 
console, WinCE 1.x GUI, and WinCE 2.0+ GUI, EFI, and Xbox.  This value is set by using the linker's /SUBSYSTEM command line option.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Symbols:}{\f7\fs24\insrsid5201950  Type of debugging symbols that are associated with the module.  Possible values are None, DBG (d
ebug), PDB (program database), CV (codeview), COFF (common object file format), FPO (frame pointer omission), OMAP, and Borland.  If one or more of the debug blocks are invalid, then the word "Invalid" will also appear.  This usually means that debug symb
ols have been striped from the file, but the debug entries were left behind.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Preferred Base:}{\f7\fs24\insrsid5201950  The preferred base load address of the module.  This will be 32-bits for 32-bit modules and 64-bits for 64-bit modules.  This value is set by usi
ng the linker's /BASE command line option. 
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Actual Base:}{\f7\fs24\insrsid5201950 
 The actual base load address of the module.  This value will read "Unknown" until the module has actually been loaded into memory by Dependency Walker's profiler.  See the }{\f7\fs24\uldb\insrsid5201950 Start Profiling Command}{\v\f7\fs24\insrsid5201950 
HIDM_EXECUTE}{\f7\fs24\insrsid5201950 
 for more information.  This value will be shown in red if it does not match the preferred base address for the module.  Your application will suffer a load-time performance hit for every module that does not load at its preferre
d base address.  This value will read "Data file" if the file was loaded as a data file via a call to LoadLibraryEx with the LOAD_LIBRARY_AS_DATAFILE flag.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Virtual Size:}{\f7\fs24\insrsid5201950  The virtual size of the module.  This is the size of memory that will be reserved for the module to be mapped into.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Load Order:}{\f7\fs24\insrsid5201950 
 The load order of the module with respect to other modules.  This value will read "Not Loaded" until the module has actually been loaded into memory by Dependency Walker's profiler.  See the }{\f7\fs24\uldb\insrsid5201950 Start Profiling Command}{
\v\f7\fs24\insrsid5201950 HIDM_EXECUTE}{\f7\fs24\insrsid5201950  for more information.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 File Ver:}{\f7\fs24\insrsid5201950  The file version found in the module\rquote s version resource.  This value represents the FILEVERSION field in the VERSION_INFO resource structure.  It will rea
d "N/A" if the module does not contain a VERSION_INFO resource.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Product Ver:}{\f7\fs24\insrsid5201950  The product version found in the module\rquote 
s version resource.  This value represents the PRODUCTVERSION field in the VERSION_INFO resource structure.  It will read "N/A" if the module does not contain a VERSION_INFO resource.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Image Ver:}{\f7\fs24\insrsid5201950  The image version found in the module\rquote s file header.  This value is set by using the linker's /VERSION command line option.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Linker Ver:}{\f7\fs24\insrsid5201950  The version of the linker that was used to create the module file.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 OS Ver:}{\f7\fs24\insrsid5201950  The version of the OS that the module file was built to run on.
\par \{bmct bullet1.bmp\}\tab }{\b\f7\fs24\insrsid5201950 Subsystem Ver:}{\f7\fs24\insrsid5201950  The version of the subsystem that the module file was built to run in.  This value is set by using the linker's /SUBSYSTEM command line option.
\par }\pard \ql \fi-360\li360\ri0\sb80\nowidctlpar\tx1080\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 The module list can be sorted on the data in any 
column in the list.  Simply click on the column header button for the column you wish to sort by.  An arrow (^) is displayed in the column header for the column that the list is currently sorted by.  You can also size a column to its "best fit" width by d
ouble-clicking the divider line between two columns in the column header.  You can search for text in the currently sorted column by simply typing in the first few characters of the item you wish to find.
\par 
\par If a module was not found or was not a valid 32-bit or 64-bit Windows binary, then an error message will be displayed in place of the normal column information for that module.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDR_IMPORT_LIST_VIEW}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Parent Import Function List View}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Parent Import Function List View}}}{\fs32\insrsid5201950 Parent Import Function List View
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The Parent Import Function List View displays the list of parent import functions for the currently selected module in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{
\f7\fs24\insrsid5201950 .  Parent import functions are functions that are actually called in the given module by the parent module.
\par 
\par For implicit and forward dependencies, the selected module needs to export every function that the parent is importing from it.  If the selected module does not export one of the functions that the parent module expects to call, t
hen an unresolved external error will occur if the module is attempted to be loaded.  See the }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
 for viewing the selected module\rquote s export functions.
\par 
\par Dependency Walker searches the exported function list for ever
y parent import function to ensure there is a match.  If any function is unresolved, then the function is marked with an error image (see below) and the module is mark with an error image as well in the }{\f7\fs24\uldb\insrsid5201950 
Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950  and the }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950 .
\par 
\par The Parent Import Function List View can also help you locate unnecessary modules in an application.  The fact that the parent module is calling functions in the selected module is what makes the selected module 
a dependency of the parent.  As a developer, if you can safely stop the parent module from calling all the functions listed in the parent import function list for a given module, then that module will no longer be a dependent of the parent module.
\par 
\par C++ functions can be displayed in their native decorated format or in a human readable undecorated format.  See the }{\f7\fs24\uldb\insrsid5201950 Undecorate C++ Functions Command}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950 
 for more information.  You may also copy the selected function names to the clipboard by selecting the }{\f7\fs24\uldb\insrsid5201950 Copy Command}{\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{\f7\fs24\insrsid5201950 
.  The actual text copied will differ depending on how the }{\f7\fs24\uldb\insrsid5201950 Undecorate C++ Functions}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950 
 option is set.  If more than one function is selected, a list will be copied to the clipboard with carriage returns after each function.  The complete contents of the Parent Import Function List View can also be saved to a text file using the }{
\f7\fs24\uldb\insrsid5201950 Save Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{\f7\fs24\insrsid5201950  or }{\f7\fs24\uldb\insrsid5201950 Save As Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE_AS}{\f7\fs24\insrsid5201950 .
\par 
\par The following are the primary images that can accompany each function in the parent import list:
\par 
\par }\pard \ql \fi-540\li900\ri0\sa120\widctlpar\tx900\faauto\rin0\lin900\itap0 {\f7\fs24\insrsid5201950 \{bmct import01.bmp\}\tab Resolved C import.
\par \{bmct import02.bmp\}\tab Resolved C++ import.  C++ functions can be viewed in their native decorated form or in a human readable undecorated form.  See the }{\f7\fs24\uldb\insrsid5201950 Undecorate C++ Functions Command}{\v\f7\fs24\insrsid5201950 HI
DM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950  for more information.
\par \{bmct import03.bmp\}\tab Resolved ordinal import.
\par \{bmct import04.bmp\}\tab Resolved dynamic C import (similar images also exist for C++ and ordinal functions).  The parent module of this module called the GetProcAddress func
tion to dynamically get the address of this function.  This does not necessarily mean the parent module actually used the function address to call the function.
\par \{bmct import05.bmp\}\tab Unresolved C f
unction (similar images also exist for C++ and ordinal functions).  This function is called by the parent module, but it is not exported from the current module.  This is often referred to as an "unresolved external function".  If this module is an implic
it or forwarded dependency, then the parent module will fail to load.  If this module is a delay-load dependency, then the parent module will most likely recover from the missing dependency, as that is a feature of using delay-load dependencies.
\par \{bmct import06.bmp\}\tab 
Unresolved dynamic C function (similar images also exist for C++ and ordinal functions).  The parent module of this module called the GetProcAddress function to dynamically get the address of this function, but the current module does not export t
he function.  This is not necessarily an error since one of the reasons modules call GetProcAddress is to see if a function exists in a module.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par The Parent Import Function View is comprised of five columns:
\par 
\par }\pard \ql \fi-1800\li2160\ri0\sa120\widctlpar\tx2160\tx2340\tx2520\tx2700\tx2880\tx3060\tx3240\tx3420\tx3600\tx3780\faauto\rin0\lin2160\itap0 {\b\f7\fs24\insrsid5201950 Image}{\f7\fs24\insrsid5201950 \tab See the above list for descriptions.  The 
header for this column has the letters "PI" in it, which just stands for "Parent Imports"
\par }{\b\f7\fs24\insrsid5201950 Ordinal}{\f7\fs24\insrsid5201950 \tab The ordinal value of the imported function, if the function is imported by ordinal.  This value can be "N/A" if the function is imported by name.
\par }{\b\f7\fs24\insrsid5201950 Hint}{\f7\fs24\insrsid5201950 \tab The hint value for the imported function.  The hint value is used internally by the operating system\rquote 
s loader to quickly match imports with exports.  It is used as an index into the array of exported functions in the selected module.
\par }{\b\f7\fs24\insrsid5201950 Function}{\f7\fs24\insrsid5201950 \tab The name of the impo
rted function, if the function is imported by name.  This can be "N/A" if the function is imported by ordinal.  C++ functions can be viewed in their native decorated form or in a human readable undecorated form.  See the }{\f7\fs24\uldb\insrsid5201950 
Undecorate C++ Functions Command}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950 
 for more information.  You may also see "<invalid string>" as a function name, which means a call to GetProcAddress was made with an invalid string, or "<empty-string>", which means GetProcAddress was called with an empty string.
\par }\pard \ql \fi-1800\li2160\ri0\widctlpar\tx2160\tx2340\tx2520\tx2700\tx2880\tx3060\tx3240\tx3420\tx3600\tx3780\faauto\rin0\lin2160\itap0 {\b\f7\fs24\insrsid5201950 Entry Point}{\f7\fs24\insrsid5201950 \tab 
The entry point memory address for the function.  For implicit and forward dependencies, this field often reads "Not Bound", which means that the entry point address will not be known until load time.  If an address is given, then the parent module ha
s been pre-bound by a program like BIND.  Binding is the process of walking the import list of a module and the export list of all its dependent modules, in order to fill in the import list with the absolute addresses to the functions it references.  This
 
job is usually done by the loader as each module is loaded, but can be skipped if the modules have been pre-bound.  Pre-binding is an optimization that calculates the absolute addresses based off of the modules' preferred base addresses and stores them in
 
the module's import table.  Assuming a dependency of a given module actually loads at its preferred base address and has not changed, then the loader can save time by skipping the bind phase to that dependency module.  For dynamic dependencies, this Entry
 Point field displays the address returned by the GetProcAddress function call.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par The function list can be sorted on the data in any column in the list.  Simply click on the column header button for the column you wish to sort by.  An arrow (^) is displayed 
in the column header for the column that the list is currently sorted by.  You can also size a column to its "best fit" width by double-clicking the divider line between two columns in the column header.  You can search for text in the currently sorted co
lumn by simply typing in the first few characters of the item you wish to find.  For ordinal and hint values, you may enter decimal or hex (prefaced by 0x) values to search for.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDR_EXPORT_LIST_VIEW}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Export Function List View}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Export Function List View}}}{\fs32\insrsid5201950 Export Function List View
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The Export Function List View displays the list of export functions for the currently selected module in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 
.  Export functions are functions that a module exposes to other modules.  They can be thought of as the module\rquote s interface.
\par 
\par Dependency Walker uses the exported list to check for unresolved external errors in the selected module.  For more information, read the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{
\f7\fs24\insrsid5201950  section.
\par 
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 While Dependency Walker scans the export list for a module, it checks each function to see if it is
 really a forwarded function.  A forwarded function is a function that appears to be exported from a particular module, but in fact the code for the function actually lives in another module.  The operating system\rquote 
s loader recognizes this and loads the forwarded module if necessary to resolve any imports from the parent module.  Dependency Walker, like the operating system\rquote s loader, also loads the forwarded module if necessary.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par C++ functions can be displayed in their native decorated format or in a human readable undecorated format.  See the }{\f7\fs24\uldb\insrsid5201950 Undecorate C++ Functions Command}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950 
 for more information.  You may also copy the selected function names to the clipboard by selecting the }{\f7\fs24\uldb\insrsid5201950 Copy Command}{\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{\f7\fs24\insrsid5201950 .  The actual text copied will differ
 depending on how the }{\f7\fs24\uldb\insrsid5201950 Undecorate C++ Functions}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950 
 option is set.  If more than one function is selected, a list will be copied to the clipboard with carriage returns after each function.  The complete contents of the Export Function List View can also be saved to a text file using the }{
\f7\fs24\uldb\insrsid5201950 Save Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{\f7\fs24\insrsid5201950  or }{\f7\fs24\uldb\insrsid5201950 Save As Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE_AS}{\f7\fs24\insrsid5201950 .
\par 
\par The following are the possible images that can accompany each function in the export list:
\par 
\par }\pard \ql \fi-540\li900\ri0\sa120\widctlpar\tx900\faauto\rin0\lin900\itap0 {\f7\fs24\insrsid5201950 \{bmct export01.bmp\}\tab C export function that resides in the selected module.
\par \{bmct export02.bmp\}\tab C++ export function that resides in the selected module.  C++ functions can be viewed in their native decorated form or in a human readable undecorated form.  See the }{\f7\fs24\uldb\insrsid5201950 
Undecorate C++ Functions Command}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950  for more information.
\par \{bmct export03.bmp\}\tab Ordinal export function that resides in the selected module.
\par \{bmct export04.bmp\}\tab C export function that is called at least once by any module in the current module session (similar images also exist for C++ and ordinal functions).
\par \{bmct export05.bmp\}\tab C export function that is called by the selected module in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 
 (similar images also exist for C++ and ordinal functions).  There will be a one-to-one relationship between these functions and the resolved imports in the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 
HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 .  You can use the }{\f7\fs24\uldb\insrsid5201950 Highlight Matching Item}{\v\f7\fs24\insrsid5201950 HIDM_SHOW_MATCHING_ITEM}{\f7\fs24\insrsid5201950 
 command to quickly jump between the matching import and export.
\par \{bmct export06.bmp\}\tab Forwarded C export function that resides in a different module (similar images also exist for C++ and ordinal functions).  The module that the function truly resides in is listed in the }{\b\f7\fs24\insrsid5201950 Entry Point}{
\f7\fs24\insrsid5201950  column.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par The Export Function View is comprised of four columns:
\par 
\par }\pard \ql \fi-1800\li2160\ri0\sa120\widctlpar\tx2160\tx2340\tx2520\tx2700\tx2880\tx3060\tx3240\tx3420\tx3600\tx3780\faauto\rin0\lin2160\itap0 {\b\f7\fs24\insrsid5201950 Image}{\f7\fs24\insrsid5201950 \tab 
See the above list for descriptions.  The header for this column has the letter "E" in it, which just stands for "Exports"
\par }{\b\f7\fs24\insrsid5201950 Ordinal}{\f7\fs24\insrsid5201950 \tab The ordinal value of the exported function, if the function is exported by ordinal.  This value can be "N/A" if the function is exported only by name.
\par }{\b\f7\fs24\insrsid5201950 Hint}{\f7\fs24\insrsid5201950 \tab The hint value for the exported function.  The hint value is used internally by the operating system\rquote 
s loader to quickly match imports with exports.  It is used as an index into the array of exported functions in the selected module.
\par }{\b\f7\fs24\insrsid5201950 Function}{\f7\fs24\insrsid5201950 \tab 
The name of the exported function, if the function is exported by name.  This can be "N/A" if the function is exported only by ordinal.  C++ functions can be viewed in their native decorated form or in a human readable undecorated form.  See the }{
\f7\fs24\uldb\insrsid5201950 Undecorate C++ Functions Command}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950  for more information.
\par }\pard \ql \fi-1800\li2160\ri0\widctlpar\tx2160\tx2340\tx2520\tx2700\tx2880\tx3060\tx3240\tx3420\tx3600\tx3780\faauto\rin0\lin2160\itap0 {\b\f7\fs24\insrsid5201950 Entry Point}{\f7\fs24\insrsid5201950 \tab 
The entry point memory address for the function.  This is usually a relative offset from the base address at which the module will load at by the operating system\rquote s loader.  This base address is usually the base address listed in the }{
\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950  for the particular module.  If the function is forwarded to another module, then a forward string will be displayed instead of a
n address.  The forward string is in the form of ModuleName.FunctionName.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par The function list can be sorted on the data in any column in
 the list.  Simply click on the column header button for the column you wish to sort by.  An arrow (^) is displayed in the column header for the column that the list is currently sorted by.  You can also size a column to its "best fit" width by double-cli
c
king the divider line between two columns in the column header.  You can search for text in the currently sorted column by simply typing in the first few characters of the item you wish to find.  For ordinal and hint values, you may enter decimal or hex (
prefaced by 0x) values to search for.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \s16\ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 # HIDR_PROFILE_RICH_VIEW}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Log View}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Log View}}}{\fs32\insrsid5201950 Log View
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This view is used to log module warnings, module errors, and all activity while profiling the application for the current }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 . 
 For more information on profiling, see the }{\f7\fs24\uldb\insrsid5201950 Start Profiling Command}{\v\f7\fs24\insrsid5201950 HIDM_EXECUTE}{\f7\fs24\insrsid5201950 , the }{\f7\fs24\uldb\insrsid5201950 
Using Application Profiling to Detect Dynamic Dependencies}{\v\f7\fs24\insrsid5201950 application_profiling}{\f7\fs24\insrsid5201950  section, and the }{\f7\fs24\uldb\insrsid5201950 Profile Module Dialog}{\v\f7\fs24\insrsid5201950 HIDD_PROFILE}{
\f7\fs24\insrsid5201950 .
\par 
\par While profiling an application, Dependency Walker gathers information from the running process.  The various types of information that can be logged include:
\par 
\par }\pard \ql \fi-360\li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab The start of the new process.  This is always logged.
\par \{bmct bullet1.bmp\}\tab The exiting of the process.  This is always logged.
\par \{bmct bullet1.bmp\}\tab The creation of a thread.  These are only logged if the }{\b\f7\fs24\insrsid5201950 Log thread information}{\f7\fs24\insrsid5201950  box is checked in the }{\f7\fs24\uldb\insrsid5201950 Profile Module Dialog}{
\v\f7\fs24\insrsid5201950 HIDD_PROFILE}{\f7\fs24\insrsid5201950 .
\par \{bmct bullet1.bmp\}\tab The exiting of a thread.  These are only logged if the }{\b\f7\fs24\insrsid5201950 Log thread information}{\f7\fs24\insrsid5201950  box is checked in the }{\f7\fs24\uldb\insrsid5201950 Profile Module Dialog}{
\v\f7\fs24\insrsid5201950 HIDD_PROFILE}{\f7\fs24\insrsid5201950 .
\par \{bmct bullet1.bmp\}\tab The loading of a module.  These are always logged.
\par \{bmct bullet1.bmp\}\tab The unloading of a module.  These are always logged.
\par \{bmct bullet1.bmp\}\tab Any debug output text that the process generates.  These are only logged if the }{\b\f7\fs24\insrsid5201950 Log debug output}{\f7\fs24\insrsid5201950  box is checked in the }{\f7\fs24\uldb\insrsid5201950 Profile Module Dialog}{
\v\f7\fs24\insrsid5201950 HIDD_PROFILE}{\f7\fs24\insrsid5201950 .  Debug output text is logged with a grayed-out color to distinguish it from normal log text.
\par \{bmct bullet1.bmp\}\tab Any first chance exceptions that occur in the process.  These are only logged if the }{\b\f7\fs24\insrsid5201950 Log first chance exceptions}{\f7\fs24\insrsid5201950  box is checked in the }{\f7\fs24\uldb\insrsid5201950 
Profile Module Dialog}{\v\f7\fs24\insrsid5201950 HIDD_PROFILE}{\f7\fs24\insrsid5201950 .
\par \{bmct bullet1.bmp\}\tab Any second chance exceptions that occur in the process.  These are always logged.  These lines will be colored red.
\par \{bmct bullet1.bmp\}\tab The calling of a module's DllMain function.  These are only logged if either of the two }{\b\f7\fs24\insrsid5201950 Log DllMain calls}{\f7\fs24\insrsid5201950  boxes are checked in the }{\f7\fs24\uldb\insrsid5201950 
Profile Module Dialog}{\v\f7\fs24\insrsid5201950 HIDD_PROFILE}{\f7\fs24\insrsid5201950 .
\par \{bmct bullet1.bmp\}\tab The return from a module's DllMain function.  These are only logged if either of the two }{\b\f7\fs24\insrsid5201950 Log DllMain calls}{\f7\fs24\insrsid5201950  boxes are checked in the }{\f7\fs24\uldb\insrsid5201950 
Profile Module Dialog}{\v\f7\fs24\insrsid5201950 HIDD_PROFILE}{\f7\fs24\insrsid5201950 .  This line of log will be shown in red if the DllMain function was called with the DLL_PROCESS_ATTACH message and i
t returned 0.  If a module returns 0 from its DllMain function while processing the DLL_PROCESS_ATTACH message, then the OS will unload the module and return a failure.  In the case of an implicit dependency, this will cause the entire application to fail
 to load with an error dialog reading something like "The application failed to initialize properly".  In the case of a dynamic dependency, the call to LoadLibrary will fail with error 1114 (ERROR_DLL_INIT_FAILED), but the application may continue to run.

\par \{bmct bullet1.bmp\}\tab The calling of a LoadLibrary type function.  These are only logged if the }{\b\f7\fs24\insrsid5201950 Log LoadLibrary function calls}{\f7\fs24\insrsid5201950  box is checked in the }{\f7\fs24\uldb\insrsid5201950 
Profile Module Dialog}{\v\f7\fs24\insrsid5201950 HIDD_PROFILE}{\f7\fs24\insrsid5201950 .
\par \{bmct bullet1.bmp\}\tab The return from a call to a LoadLibrary type function.  These are only logged if the }{\b\f7\fs24\insrsid5201950 Log LoadLibrary function calls}{\f7\fs24\insrsid5201950  box is checked in the }{\f7\fs24\uldb\insrsid5201950 
Profile Module Dialog}{\v\f7\fs24\insrsid5201950 HIDD_PROFILE}{\f7\fs24\insrsid5201950 .  This line of log will be colored red if the function fails.
\par \{bmct bullet1.bmp\}\tab Any calls to the GetProcAddress function.  These are only logged if the }{\b\f7\fs24\insrsid5201950 Log GetProcAddress function calls}{\f7\fs24\insrsid5201950  box is checked in the }{\f7\fs24\uldb\insrsid5201950 
Profile Module Dialog}{\v\f7\fs24\insrsid5201950 HIDD_PROFILE}{\f7\fs24\insrsid5201950 .  This line of log will be colored red if the function fails.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 If the }{\b\f7\fs24\insrsid5201950 Log a time stamp with each line of log}{\f7\fs24\insrsid5201950  box is checked in the }{\f7\fs24\uldb\insrsid5201950 Profile Module Dialog}
{\v\f7\fs24\insrsid5201950 HIDD_PROFILE}{\f7\fs24\insrsid5201950 
, then each line of log in the Log View will begin with a time stamp.  Each time stamp shows the number of hours, minutes, seconds, and milliseconds that have elapsed since the process started.  It is important to note that Dependency Walker can 
significantly impact the performance of certain operations within the application being profiled.  For this reason, these time stamps should probably not be used as an accurate method of measuring the performance of your application.
\par }{\b\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 You may copy text from the Log View using the }{\f7\fs24\uldb\insrsid5201950 Copy Command}{\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{\f7\fs24\insrsid5201950 
.  The contents of the window can also be saved to a text file using the }{\f7\fs24\uldb\insrsid5201950 Save Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{\f7\fs24\insrsid5201950  or }{\f7\fs24\uldb\insrsid5201950 Save As Command}{
\v\f7\fs24\insrsid5201950 HID_FILE_SAVE_AS}{\f7\fs24\insrsid5201950 .  You can also search the Log View for text using the  }{\f7\fs24\uldb\insrsid5201950 Find Command}{\v\f7\fs24\insrsid5201950 HID_EDIT_FIND}{\f7\fs24\insrsid5201950  and }{
\f7\fs24\uldb\insrsid5201950 Find Next Command}{\v\f7\fs24\insrsid5201950 HID_EDIT_REPEAT}{\f7\fs24\insrsid5201950 .
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # file_menu}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K File Menu Commands}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ File Menu Commands}}}{\fs32\insrsid5201950 File Menu Commands
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The File menu offers the following commands:
\par 
\par }\pard \ql \fi-1980\li1980\ri0\sa80\widctlpar\tx1980\tx2160\tx2340\tx2520\tx2700\tx2880\tx3060\tx3240\tx3420\tx3600\faauto\rin0\lin1980\itap0 {\f7\fs24\uldb\insrsid5201950 Open...}{\v\f7\fs24\insrsid5201950 HID_FILE_OPEN}{\f7\fs24\insrsid5201950 \tab 
Opens and processes a module file.
\par }{\f7\fs24\uldb\insrsid5201950 Close}{\v\f7\fs24\insrsid5201950 HID_FILE_CLOSE}{\f7\fs24\insrsid5201950 \tab Closes the active }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 .

\par }{\f7\fs24\uldb\insrsid5201950 Save}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{\f7\fs24\insrsid5201950 \tab Saves the active }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 .
\par }{\f7\fs24\uldb\insrsid5201950 Save As...}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE_AS}{\f7\fs24\insrsid5201950 \tab Saves the active }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 
 with a new name or type.
\par }{\f7\fs24\uldb\insrsid5201950 File 1, 2, 3, ...}{\v\f7\fs24\insrsid5201950 HID_FILE_MRU_FILE1}{\f7\fs24\insrsid5201950 \tab Opens and processes the specified module file.
\par }{\f7\fs24\uldb\insrsid5201950 Exit}{\v\f7\fs24\insrsid5201950 HID_APP_EXIT}{\f7\fs24\insrsid5201950 \tab Exits Dependency Walker.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # edit_menu}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Edit Menu Commands}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Edit Menu Commands}}}{\fs32\insrsid5201950 Edit Menu Commands
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The Edit menu offers the following commands:
\par 
\par }\pard \ql \fi-2520\li2520\ri0\sa80\widctlpar\tx2520\tx2700\tx2880\tx3060\tx3240\tx3420\tx3600\tx3780\tx3960\tx4140\tx10320\faauto\rin0\lin2520\itap0 {\f7\fs24\uldb\insrsid5201950 Copy}{\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{\f7\fs24\insrsid5201950 
\tab Copies the selection in the current view to the clipboard as text.
\par }{\f7\fs24\uldb\insrsid5201950 Select All}{\v\f7\fs24\insrsid5201950 HID_EDIT_SELECT_ALL}{\f7\fs24\insrsid5201950 \tab Selects all items in the current view.
\par }{\f7\fs24\uldb\insrsid5201950 Find...}{\v\f7\fs24\insrsid5201950 HID_EDIT_FIND}{\f7\fs24\insrsid5201950 \tab Finds text in the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 .
\par }{\f7\fs24\uldb\insrsid5201950 Find Next}{\v\f7\fs24\insrsid5201950 HID_EDIT_REPEAT}{\f7\fs24\insrsid5201950 \tab Repeats last find operation in the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{
\f7\fs24\insrsid5201950 .
\par }{\f7\fs24\uldb\insrsid5201950 Clear Log Window}{\v\f7\fs24\insrsid5201950 HIDM_EDIT_LOG_CLEAR}{\f7\fs24\insrsid5201950 \tab Clears the contents of the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{
\f7\fs24\insrsid5201950  in the active }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 .
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # view_menu}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K View Menu Commands}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ View Menu Commands}}}{\fs32\insrsid5201950 View Menu Commands
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The View menu offers the following commands:
\par 
\par }\pard \ql \fi-4500\li4500\ri0\sa80\widctlpar\tx4500\tx4680\tx4860\tx5040\tx5220\tx5400\tx5580\tx5760\tx5940\tx6120\faauto\rin0\lin4500\itap0 {\f7\fs24\uldb\insrsid5201950 System Information...}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_SYS_INFO}{
\f7\fs24\insrsid5201950 \tab Displays information about the system.
\par }{\f7\fs24\uldb\insrsid5201950 Expand All}{\v\f7\fs24\insrsid5201950 HIDM_EXPAND_ALL}{\f7\fs24\insrsid5201950 \tab Expands all nodes in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{
\f7\fs24\insrsid5201950 .
\par }{\f7\fs24\uldb\insrsid5201950 Collapse All}{\v\f7\fs24\insrsid5201950 HIDM_COLLAPSE_ALL}{\f7\fs24\insrsid5201950 \tab Collapses all nodes in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{
\f7\fs24\insrsid5201950 .
\par }{\f7\fs24\uldb\insrsid5201950 Auto Expand}{\v\f7\fs24\insrsid5201950 HIDM_AUTO_EXPAND}{\f7\fs24\insrsid5201950 \tab When checked, the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{
\f7\fs24\insrsid5201950  will automatically expand to show modules as they are added.
\par }{\f7\fs24\uldb\insrsid5201950 Full Paths}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_FULL_PATHS}{\f7\fs24\insrsid5201950 \tab Shows or hides full file paths in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 
HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950  and the }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950 .
\par }{\f7\fs24\uldb\insrsid5201950 Undecorate C++ Functions}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950 \tab Display undecorated C++ functions names in both the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{
\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950  and the }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 .
\par }{\f7\fs24\uldb\insrsid5201950 Highlight Matching Item}{\v\f7\fs24\insrsid5201950 HIDM_SHOW_MATCHING_ITEM}{\f7\fs24\insrsid5201950 \tab Highlights the matching item in the related view.
\par }{\f7\fs24\uldb\insrsid5201950 Highlight Original Instance In Tree}{\v\f7\fs24\insrsid5201950 HIDM_SHOW_ORIGINAL_MODULE}{\f7\fs24\insrsid5201950 \tab Highlights the original instance of the selected module in the }{\f7\fs24\uldb\insrsid5201950 
Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 .
\par }{\f7\fs24\uldb\insrsid5201950 Highlight Previous Instance In Tree}{\v\f7\fs24\insrsid5201950 HIDM_SHOW_PREVIOUS_MODULE}{\f7\fs24\insrsid5201950 \tab Highlights the previous instance of the selected module in the }{\f7\fs24\uldb\insrsid5201950 
Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 .
\par }{\f7\fs24\uldb\insrsid5201950 Highlight Next Instance In Tree}{\v\f7\fs24\insrsid5201950 HIDM_SHOW_NEXT_MODULE}{\f7\fs24\insrsid5201950 \tab Highlights the next instance of the selected module in the }{\f7\fs24\uldb\insrsid5201950 Mo
dule Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 .
\par }{\f7\fs24\uldb\insrsid5201950 Refresh}{\v\f7\fs24\insrsid5201950 HIDM_REFRESH}{\f7\fs24\insrsid5201950 \tab Updates all views for the active }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{
\f7\fs24\insrsid5201950 .
\par }{\f7\fs24\uldb\insrsid5263639\charrsid5263639 View Module in External Viewer}{\v\f7\fs24\insrsid5201950 HIDM_EXTERNAL_VIEWER}{\f7\fs24\insrsid5201950 \tab }{\f7\fs24\insrsid5263639\charrsid5263639 Opens the selected modules in the external }{
\f7\fs24\insrsid5263639 module }{\f7\fs24\insrsid5263639\charrsid5263639 viewer}{\f7\fs24\insrsid5201950 .
\par }\pard \ql \fi-4500\li4500\ri0\sa80\widctlpar\tx4500\tx4680\tx4860\tx5040\tx5220\tx5400\tx5580\tx5760\tx5940\tx6120\faauto\rin0\lin4500\itap0\pararsid5263639 {\f7\fs24\uldb\insrsid5263639\charrsid5263639 Lookup Function in External Help}{
\v\f7\fs24\insrsid5263639 H}{\v\f7\fs24\insrsid5263639\charrsid5263639 IDM_EXTERNAL_HELP}{\f7\fs24\insrsid5263639 \tab }{\f7\fs24\insrsid5263639\charrsid5263639 Lookup the selected function in the external help collection}{\f7\fs24\insrsid5263639 .
\par }\pard \ql \fi-4500\li4500\ri0\sa80\widctlpar\tx4500\tx4680\tx4860\tx5040\tx5220\tx5400\tx5580\tx5760\tx5940\tx6120\faauto\rin0\lin4500\itap0 {\f7\fs24\uldb\insrsid5201950 Properties...}{\v\f7\fs24\insrsid5201950 HIDM_PROPERTIES}{\f7\fs24\insrsid5201950 
\tab Displays the Windows Properties dialog for the selected modules.
\par }{\f7\fs24\uldb\insrsid5201950 Toolbar}{\v\f7\fs24\insrsid5201950 HID_VIEW_TOOLBAR}{\f7\fs24\insrsid5201950 \tab Shows or hides the toolbar.
\par }{\f7\fs24\uldb\insrsid5201950 Status Bar}{\v\f7\fs24\insrsid5201950 HID_VIEW_STATUS_BAR}{\f7\fs24\insrsid5201950 \tab Shows or hides the status bar.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # options_menu}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Options Menu Commands}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Options Menu Commands}}}{\fs32\insrsid5201950 Options Menu Commands
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The Options menu offers the following commands:
\par 
\par }\pard \ql \fi-5940\li5940\ri0\sa80\widctlpar\tx5940\tx6120\tx6300\tx6480\tx6660\tx6840\tx7020\tx7200\tx7380\tx7560\faauto\rin0\lin5940\itap0\pararsid2781915 {\f7\fs24\uldb\insrsid5201950 Configure }{\f7\fs24\uldb\insrsid5263639 Module }{
\f7\fs24\uldb\insrsid5201950 Search Order...}{\v\f7\fs24\insrsid5201950 HIDM_CONFIGURE_SEARCH_ORDER}{\f7\fs24\insrsid5201950 \tab }{\f7\fs24\insrsid5263639\charrsid5263639 Configure or view the search order used when locating dependent modules}{
\f7\fs24\insrsid5201950 .
\par }{\f7\fs24\uldb\insrsid5201950 Configure External }{\f7\fs24\uldb\insrsid5263639 Module }{\f7\fs24\uldb\insrsid5201950 Viewer...}{\v\f7\fs24\insrsid5201950 HIDM_CONFIGURE_VIEWER}{\f7\fs24\insrsid5201950 \tab }{\f7\fs24\insrsid5263639\charrsid5263639 
Configures the external module viewer}{\f7\fs24\insrsid5201950 .
\par }{\f7\fs24\uldb\insrsid5263639\charrsid5263639 Configure External Function Help Collection...}{\v\f7\fs24\insrsid5263639 H}{\v\f7\fs24\insrsid5263639\charrsid5263639 IDM_CONFIGURE_EXTERNAL_HELP}{\f7\fs24\insrsid7431403 \tab C}{
\f7\fs24\insrsid5263639\charrsid7431403 onfigures the external function help collection used to lookup functions}{\f7\fs24\insrsid5263639 .
\par }{\f7\fs24\uldb\insrsid5263639 Configure H}{\f7\fs24\uldb\insrsid5201950 andled File Extensions...}{\v\f7\fs24\insrsid5201950 HIDM_HANDLED_FILE_EXTS}{\f7\fs24\insrsid5201950 \tab }{\f7\fs24\insrsid5263639\charrsid5263639 
Configures what file extensions Dependency Walker handles}{\f7\fs24\insrsid5201950 .
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # profile_menu}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Profiling Menu Commands}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Profiling Menu Commands}}}{\fs32\insrsid5201950 Profile Menu Commands
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The Profile menu offers the following commands:
\par 
\par }\pard \ql \fi-1980\li1980\ri0\sa80\widctlpar\tx1980\tx2160\tx2340\tx2520\tx2700\tx2880\tx3060\tx3240\tx3420\tx3600\faauto\rin0\lin1980\itap0 {\f7\fs24\uldb\insrsid5201950 Start Profiling}{\v\f7\fs24\insrsid5201950 HIDM_EXECUTE}{\f7\fs24\insrsid5201950 
\tab Executes the module and profiles it for runtime dependencies.
\par }{\f7\fs24\uldb\insrsid5201950 Stop Profiling}{\v\f7\fs24\insrsid5201950 HIDM_TERMINATE}{\f7\fs24\insrsid5201950 \tab Stops execution and profiling of the process.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # window_menu}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Window Menu Commands}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Window Menu Commands}}}{\fs32\insrsid5201950 Window Menu Commands
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The Window menu offers the following commands:
\par 
\par }\pard \ql \fi-2520\li2520\ri0\sa80\widctlpar\tx2520\tx2700\tx2880\tx3060\tx3240\tx3420\tx3600\tx3780\tx3960\tx4140\faauto\rin0\lin2520\itap0 {\f7\fs24\uldb\insrsid5201950 Cascade}{\v\f7\fs24\insrsid5201950 HID_WINDOW_CASCADE}{\f7\fs24\insrsid5201950 
\tab Arranges windows in an overlapped fashion.
\par }{\f7\fs24\uldb\insrsid5201950 Tile Horizontally}{\v\f7\fs24\insrsid5201950 HID_WINDOW_TILE_HORZ}{\f7\fs24\insrsid5201950 \tab Arranges windows in non-overlapped horizontal tiles.
\par }{\f7\fs24\uldb\insrsid5201950 Tile Vertically}{\v\f7\fs24\insrsid5201950 HID_WINDOW_TILE_VERT}{\f7\fs24\insrsid5201950 \tab Arranges windows in non-overlapped vertical tiles.
\par }{\f7\fs24\uldb\insrsid5201950 Arrange Icons}{\v\f7\fs24\insrsid5201950 HID_WINDOW_ARRANGE}{\f7\fs24\insrsid5201950 \tab Arranges the icons of all minimized windows.
\par }{\f7\fs24\uldb\insrsid5201950 Window 1, 2, 3, ...}{\v\f7\fs24\insrsid5201950 HID_WINDOW_ALL}{\f7\fs24\insrsid5201950 \tab Activates the specified window.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # help_menu}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Help Menu Commands}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Help Menu Commands}}}{\fs32\insrsid5201950 Help Menu Commands
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The Help menu offers the following commands, which provide you assistance with this application: 
\par 
\par }\pard \ql \fi-3960\li3960\ri0\sa80\widctlpar\tx3960\tx4140\tx4320\tx4500\tx4680\tx4860\tx5040\tx5220\tx5400\tx5580\faauto\rin0\lin3960\itap0 {\f7\fs24\uldb\insrsid5201950 Help Topics}{\v\f7\fs24\insrsid5201950 HID_HELP_FINDER}{\f7\fs24\insrsid5201950 
\tab Displays the table of contents for the online help documentation.
\par }{\f7\fs24\uldb\insrsid5201950 About Dependency Walker...}{\v\f7\fs24\insrsid5201950 HID_APP_ABOUT}{\f7\fs24\insrsid5201950 \tab Displays program information, version, and copyright.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_FILE_OPEN}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Open Command (File Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Open Command (File Menu)}}}{\fs32\insrsid5201950 Open Command (}{\fs32\uldb\insrsid5201950 File Menu}{\v\fs32\insrsid5201950 file_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The Open Command will display the }{\f7\fs24\uldb\insrsid5201950 File Open Dialog}{\v\f7\fs24\insrsid5201950 AFX_HIDD_FILEOPEN}{\f7\fs24\insrsid5201950 , which allows you to open and process a module, or to open a Dependency Walker Image (DWI) file.

\par 
\par You may also open modules directory from an Explorer window by right-clicking on the module you wish t
o open and choosing "View Dependencies" from the context menu.  In order for this to work, you must tell Dependency Walker what file extensions to handle by using the }{\f7\fs24\uldb\insrsid5201950 Handled File Extensions Command}{
\v\f7\fs24\insrsid5201950 HIDM_HANDLED_FILE_EXTS}{\f7\fs24\insrsid5201950 .
\par 
\par Dependency Walker uses a multiple document interface that allows more than one }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  to be opened and visible at once.  Use the }{
\f7\fs24\uldb\insrsid5201950 Window Menu}{\v\f7\fs24\insrsid5201950 window_menu}{\f7\fs24\insrsid5201950  to switch between the multiple open }{\f7\fs24\uldb\insrsid5201950 Module Session Windows}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{
\f7\fs24\insrsid5201950 .  See the }{\f7\fs24\uldb\insrsid5201950 Window 1, 2, 3, ... Command}{\v\f7\fs24\insrsid5201950 HID_WINDOW_ALL}{\f7\fs24\insrsid5201950  for more information.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+O
\par Shell:\tab Drag and drop modules on top of Dependency Walker to open them.
\par Shell\tab Right-click on a module file in the Shell and choose "View Dependencies" from the Shell\rquote s context menu.
\par }{\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{bmct btn01.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_FILE_CLOSE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Close Command (File Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Close Command (File Menu)}}}{\fs32\insrsid5201950 Close Command (}{\fs32\uldb\insrsid5201950 File Menu}{\v\fs32\insrsid5201950 file_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to close the active }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 .
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+F4
\par Mouse:\tab Single-click on the Close button in the }{\fs24\uldb\insrsid5201950 Title Bar}{\v\fs24\insrsid5201950 HID_HT_CAPTION}{\fs24\insrsid5201950  of the window you wish to close.
\par \tab \{bmct app5.bmp\}
\par Mouse:\tab Double-click on the System Menu icon in the }{\fs24\uldb\insrsid5201950 Title Bar}{\v\fs24\insrsid5201950 HID_HT_CAPTION}{\fs24\insrsid5201950  of the window you wish to close.
\par \tab \{bmct app1.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_FILE_SAVE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Save Command (File Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Save Command (File Menu)}}}{\fs32\insrsid5201950 Save Command (}{\fs32\uldb\insrsid5201950 File Menu}{\v\fs32\insrsid5201950 file_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to save the active }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 
 using the same name and type that you have previously saved the file with.  If you have not previously saved the }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 
, then this command behaves just like the }{\f7\fs24\uldb\insrsid5201950 Save As Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE_AS}{\f7\fs24\insrsid5201950 , which will display the }{\f7\fs24\uldb\insrsid5201950 File Save Dialog}{
\v\f7\fs24\insrsid5201950 AFX_HIDD_FILESAVE}{\f7\fs24\insrsid5201950  prompting you for a file name and file type.  Within the }{\f7\fs24\uldb\insrsid5201950 File Save Dialog}{\v\f7\fs24\insrsid5201950 AFX_HIDD_FILESAVE}{\f7\fs24\insrsid5201950 
, you can choose to save the file as a Dependency Walker Image (DWI) file, a comma separated value (CSV) file, or various formats of text files.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+S
\par }{\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{bmct btn02.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_FILE_SAVE_AS}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Save As Command (File Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Save As Command (File Menu)}}}{\fs32\insrsid5201950 Save As Command (}{\fs32\uldb\insrsid5201950 File Menu}{\v\fs32\insrsid5201950 file_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to display the }{\f7\fs24\uldb\insrsid5201950 File Save Dialog}{\v\f7\fs24\insrsid5201950 AFX_HIDD_FILESAVE}{\f7\fs24\insrsid5201950 , which allows you to save the active }{\f7\fs24\uldb\insrsid5201950 Module Session}{
\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  with a new name or type.  Within the }{\f7\fs24\uldb\insrsid5201950 File Save Dialog}{\v\f7\fs24\insrsid5201950 AFX_HIDD_FILESAVE}{\f7\fs24\insrsid5201950 
, you can choose to save the file as a Dependency Walker Image (DWI) file, a comma separated value (CSV) file, or various formats of text files.
\par 
\par The Save As Command always displays the }{\f7\fs24\uldb\insrsid5201950 File Save Dialog}{\v\f7\fs24\insrsid5201950 AFX_HIDD_FILESAVE}{\f7\fs24\insrsid5201950 , even if you have previously saved the }{\f7\fs24\uldb\insrsid5201950 Module Session}{
\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  using a particular name and type.  This allows you to choose a new name or file type to save to.  If you wish to re-save the active }{\f7\fs24\uldb\insrsid5201950 Module Session}{
\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  using the same name and type that you have previously saved the file with, then you can just use the }{\f7\fs24\uldb\insrsid5201950 Save Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{
\f7\fs24\insrsid5201950  to avoid the }{\f7\fs24\uldb\insrsid5201950 File Save Dialog}{\v\f7\fs24\insrsid5201950 AFX_HIDD_FILESAVE}{\f7\fs24\insrsid5201950 .
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_FILE_MRU_FILE1}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K 1, 2, 3, ... Command (File Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ 1, 2, 3, ... Command (File Menu)}}}{\fs32\insrsid5201950 1, 2, 3, ... Command (}{\fs32\uldb\insrsid5201950 File Menu}{\v\fs32\insrsid5201950 file_menu}{\fs32\insrsid5201950 )

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Dependency Walker stores the eight most recently opened modules at the bottom of the }{\f7\fs24\uldb\insrsid5201950 File menu}{\v\f7\fs24\insrsid5201950 file_menu}{\f7\fs24\insrsid5201950 
 for your convenience.  To open one of the modules listed, select the module from the menu or type the number that corresponds with the module you want to open.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_APP_EXIT}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Exit Command (File Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Exit Command (File Menu)}}}{\fs32\insrsid5201950 Exit Command (}{\fs32\uldb\insrsid5201950 File Menu}{\v\fs32\insrsid5201950 file_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to close all }{\f7\fs24\uldb\insrsid5201950 Module Session Windows}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  and exit Dependency Walker.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab ALT+F4
\par Mouse:\tab Single-click on the main window\rquote s Close button in the }{\fs24\uldb\insrsid5201950 Title Bar}{\v\fs24\insrsid5201950 HID_HT_CAPTION}{\fs24\insrsid5201950 .
\par \tab \{bmct app5.bmp\}
\par Mouse\tab Double-click on the main window\rquote s System Menu icon in the }{\fs24\uldb\insrsid5201950 Title Bar}{\v\fs24\insrsid5201950 HID_HT_CAPTION}{\fs24\insrsid5201950 .
\par \tab \{bmct app1.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_EDIT_COPY}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Copy Command (Edit Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Copy Command (Edit Menu)}}}{\fs32\insrsid5201950 Copy Command (}{\fs32\uldb\insrsid5201950 Edit Menu}{\v\fs32\insrsid5201950 edit_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to copy the current selection to the clipboard as text.  This command is unavailable if there is nothing selected that can be copied.  Copying data to the clipboard replaces any contents previously stored on the clipboard.
\par 
\par For the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950  and the }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{
\f7\fs24\insrsid5201950 , the selected module names are copied.  If the }{\f7\fs24\uldb\insrsid5201950 Full Paths}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_FULL_PATHS}{\f7\fs24\insrsid5201950 
 option is enabled, then complete path strings will be copied, otherwise just the module file names are copied.
\par 
\par For the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950  and the }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 
HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 , the selected function names are copied.  If the }{\f7\fs24\uldb\insrsid5201950 Undecorate C++ Functions}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950  option is enabled, the
n the undecorated names for C++ functions will be copied, otherwise just the native decorated names are copied.
\par 
\par For the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 , all highlighted text is copied.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+C
\par Keys:\tab CTRL+INSERT
\par }{\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{bmct btn03.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_EDIT_SELECT_ALL}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Select All Command (Edit Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Select All Command (Edit Menu)}}}{\fs32\insrsid5201950 Select All Command (}{\fs32\uldb\insrsid5201950 Edit Menu}{\v\fs32\insrsid5201950 edit_menu}{\fs32\insrsid5201950 )

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to select all the items in a particular view.  This command only works in the }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950 , the }{\f7\fs24\uldb\insrsid5201950 
Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 , the }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 , and the }
{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 .  Select All is often useful before performing a }{\f7\fs24\uldb\insrsid5201950 Copy}{\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{
\f7\fs24\insrsid5201950  if you wish to copy the entire contents of a view.
\par }{\b\f7\fs24\insrsid5201950 
\par Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+A
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_EDIT_FIND}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Find Command (Edit Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Find Command (Edit Menu)}}}{\fs32\insrsid5201950 Find Command (}{\fs32\uldb\insrsid5201950 Edit Menu}{\v\fs32\insrsid5201950 edit_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This command will display the }{\f7\fs24\uldb\insrsid5201950 Find Dialog}{\v\f7\fs24\insrsid5201950 AFX_HIDD_FIND}{\f7\fs24\insrsid5201950 , which allows you to search for text in the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 
HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 .
\par }{\b\f7\fs24\insrsid5201950 
\par Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+F
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_EDIT_REPEAT}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Find Next Command (Edit Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Find Next Command (Edit Menu)}}}{\fs32\insrsid5201950 Find Next Command (}{\fs32\uldb\insrsid5201950 Edit Menu}{\v\fs32\insrsid5201950 edit_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to repeat the last find operation in the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 .  If there is no previous find operation, then this command works just like the }
{\f7\fs24\uldb\insrsid5201950 Find Command}{\v\f7\fs24\insrsid5201950 HID_EDIT_FIND}{\f7\fs24\insrsid5201950 , which will display the }{\f7\fs24\uldb\insrsid5201950 Find Dialog}{\v\f7\fs24\insrsid5201950 AFX_HIDD_FIND}{\f7\fs24\insrsid5201950 .
\par }{\b\f7\fs24\insrsid5201950 
\par Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab F3
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_EDIT_LOG_CLEAR}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Clear Log Window Command (Edit Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Clear Log Window Command (Edit Menu)}}}{\fs32\insrsid5201950 Clear Log Window Command (}{\fs32\uldb\insrsid5201950 Edit Menu}{\v\fs32\insrsid5201950 edit_menu}{
\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to clear the contents of the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 .
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_VIEW_SYS_INFO}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K System Information Command (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ System Information Command (View Menu)}}}{\fs32\insrsid5201950 System Information Command (}{\fs32\uldb\insrsid5201950 View Menu}{\v\fs32\insrsid5201950 view_menu}{
\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This command will display the }{\f7\fs24\uldb\insrsid5201950 System Information Dialog}{\v\f7\fs24\insrsid5201950 HIDD_SYS_INFO}{\f7\fs24\insrsid5201950 , which displays detailed information about the operating system.  If the active }{
\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  is a loaded Dependency Walker Image (DWI) file, then the }{\f7\fs24\uldb\insrsid5201950 System Information Dialog}{\v\f7\fs24\insrsid5201950 
HIDD_SYS_INFO}{\f7\fs24\insrsid5201950  will show the system information for the system that the DWI file was saved on.  Otherwise, the }{\f7\fs24\uldb\insrsid5201950 System Information Dialog}{\v\f7\fs24\insrsid5201950 HIDD_SYS_INFO}{
\f7\fs24\insrsid5201950  shows information about the current system.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{
bmct btn09.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_EXPAND_ALL}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Expand All Command (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Expand All Command (View Menu)}}}{\fs32\insrsid5201950 Expand All Command (}{\fs32\uldb\insrsid5201950 View Menu}{\v\fs32\insrsid5201950 view_menu}{\fs32\insrsid5201950 )

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This command will expand all the module nodes in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 , making the entire tree visible.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+E
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_COLLAPSE_ALL}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Collapse All Command (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Collapse All Command (View Menu)}}}{\fs32\insrsid5201950 Collapse All Command (}{\fs32\uldb\insrsid5201950 View Menu}{\v\fs32\insrsid5201950 view_menu}{\fs32\insrsid5201950 )

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This command will collapse all the module nodes in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 , leaving only the root modules visible.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+W
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_AUTO_EXPAND}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Auto Expand Command (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Auto Expand Command (View Menu)}}}{\fs32\insrsid5201950 Auto Expand (}{\fs32\uldb\insrsid5201950 View Menu}{\v\fs32\insrsid5201950 view_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f7\fs24\insrsid5201950 
\par }{\f7\fs24\insrsid5201950 When this option is turned on, the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 
 will automatically expand the tree to show modules as they are added.  This includes all modules that are detected during the initial loading of a session, as well as all modules found during profiling.
\par 
\par When this option is turned off
, the tree is never automatically expanded as the result of a new module being added.  The only exceptions are the root module and modules that contain errors.  The root module will be expanded to show the immediate dependencies of that root module.  The 
tree will also be expanded to show any modules that contain errors.  All other branches of the module tree will remain collapsed unless you expand them.
\par 
\par This command can also be used to quickly show all modules that contain errors.  Whenever this option is
 turned off, the tree will automatically collapse all nodes except for those that contain modules with errors.  If this option is already turned off, you can simply turn it on and back off to force this effect to occur.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab F8
\par }{\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{bmct btn04.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_VIEW_FULL_PATHS}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Full Paths Command (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Full Paths Command (View Menu)}}}{\fs32\insrsid5201950 Full Paths Command (}{\fs32\uldb\insrsid5201950 View Menu}{\v\fs32\insrsid5201950 view_menu}{\fs32\insrsid5201950 )

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f7\fs24\insrsid5201950 
\par }{\f7\fs24\insrsid5201950 Use this command to toggle the Full Paths option on or off.  When this option is on, a check mark appears next to the Full Paths menu item and the Full Paths toolbar button is displayed as depressed.
\par 
\par When the Full Paths option is on, both the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950  and the }{\f7\fs24\uldb\insrsid5201950 Module List View}{
\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950  will display the complete path to each module.  When this option is off, these views will display only file names.
\par 
\par This option also effects how the }{\f7\fs24\uldb\insrsid5201950 Copy Command}{\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{\f7\fs24\insrsid5201950  and }{\f7\fs24\uldb\insrsid5201950 Save Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{
\f7\fs24\insrsid5201950  work.  When the Full Paths option is on, the }{\f7\fs24\uldb\insrsid5201950 Copy Command}{\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{\f7\fs24\insrsid5201950 
 will copy the full paths of the selected files to the clipboard, otherwise it just copies the file names.  For the }{\f7\fs24\uldb\insrsid5201950 Save Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{\f7\fs24\insrsid5201950 
, text files and comma separated value (CSV) files will contain full paths when the Full Paths option is on and just file names when it is off. 
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab F9
\par }{\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{bmct btn05.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_VIEW_UNDECORATED}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Undecorate C++ Functions Command (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0
\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Undecorate C++ Functions Command (View Menu)}}}{\fs32\insrsid5201950 Undecorate C++ Functions Command (}{\fs32\uldb\insrsid5201950 View Menu}
{\v\fs32\insrsid5201950 view_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to toggle the Undecorate C++ Functions option on or off.  When this option is on, a check mark appears next to the Undecorate C++ Functions menu item and the Undecorate C++ Functions toolbar button is displayed as depressed.
\par 
\par This option requires that you have IMAGEHLP.DLL on your system.  If this DLL is not found, then the Undecorate C++ Functions option will be disabled.  IMAGEHLP.DLL is installed with Windows NT/2000/XP and Windows 95 OSR2 and beyond.
\par 
\par When the Undecorate C++ Functions option is on, both the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950  and the }{\f7\fs24\uldb\insrsid5201950 
Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950  will undecorate C++ functions into human readable function prototypes containing pa
rameter and return types.  When the Undecorate C++ Functions option is off, these views will show C++ functions in their true decorated form.  Dependency Walker can only undecorate functions that use the Microsoft decoration rules.
\par 
\par This option also effects how the }{\f7\fs24\uldb\insrsid5201950 Copy Command}{\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{\f7\fs24\insrsid5201950  and }{\f7\fs24\uldb\insrsid5201950 Save Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{
\f7\fs24\insrsid5201950  work.  When the Undecorate C++ Functions option is on, the }{\f7\fs24\uldb\insrsid5201950 Copy Command}{\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{\f7\fs24\insrsid5201950 
 will copy the undecorated names for C++ functions to the clipboard, otherwise it just copies the true decorated names.  For the }{\f7\fs24\uldb\insrsid5201950 Save Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{\f7\fs24\insrsid5201950 
, text files will contain undecorated names for C++ functions when the Undecorate C++ Functions option is on and the true decorated names when it is off.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab F10
\par }{\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{bmct btn06.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_SHOW_MATCHING_ITEM}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Highlight Matching Item (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Highlight Matching Item (View Menu)}}}{\fs32\insrsid5201950 Highlight Matching Item (}{\fs32\uldb\insrsid5201950 View Menu}{\v\fs32\insrsid5201950 view_menu}{
\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard\plain \s21\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 This command behaves differently depending on what view has the focus.
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par If the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950  has the focus and a module is selected in it, then this command will find that selected module in the }{
\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950  and highlight it.
\par }{\b\f7\fs24\insrsid5201950 
\par }{\f7\fs24\insrsid5201950 If the }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950  has the focu
s and a module is selected in it, then this command will find that selected module in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950  and highlight it.
\par }{\b\f7\fs24\insrsid5201950 
\par }{\f7\fs24\insrsid5201950 If the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950  has the focus and a function is selec
ted in it, then this command will find the matching function in the }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
 and highlight it.  This command will be disabled if the function is unresolved and cannot be found in the }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 .
\par 
\par If the }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950  has the focus and a function is selected in it, then this command will find the matching function in the }{
\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950  and highlight it.  
This command will be disabled if the function is not called by the parent module and cannot be found in the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 .
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+M
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_SHOW_ORIGINAL_MODULE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Highlight Original Instance In Tree (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Highlight Original Instance In Tree (View Menu)}}}{\fs32\insrsid5201950 Highlight Original Instance In Tree (}{\fs32\uldb\insrsid5201950 View Menu}{\v\fs32\insrsid5201950 
view_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This command is used to locate the original instance of a module in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 
.  It is only enabled when a duplicate module is highlighted.  Duplicate modules are shown with a small arrow in their image.  This command will move the current selection to the original instance of the module.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+K
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_SHOW_PREVIOUS_MODULE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Highlight Previous Instance In Tree (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Highlight Previous Instance In Tree (View Menu)}}}{\fs32\insrsid5201950 Highlight Previous Instance In Tree (}{\fs32\uldb\insrsid5201950 View Menu}{\v\fs32\insrsid5201950 
view_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This command is used to locate the previous instance of the selected module in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 
.  It is only enabled when there is a previous instance of the selected module.  This command will move the current selection to the previous instance of the module.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+B
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_SHOW_NEXT_MODULE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Highlight Next Instance In Tree (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Highlight Next Instance In Tree (View Menu)}}}{\fs32\insrsid5201950 Highlight Next Instance In Tree (}{\fs32\uldb\insrsid5201950 View Menu}{\v\fs32\insrsid5201950 view_menu}{
\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This command is used to locate the next instance of the selected module in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 
.  It is only enabled when there is a next instance of the selected module.  This command will move the current selection to the next instance of the module.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+N
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_REFRESH}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Refresh Command (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Refresh Command (View Menu)}}}{\fs32\insrsid5201950 Refresh Command (}{\fs32\uldb\insrsid5201950 View Menu}{\v\fs32\insrsid5201950 view_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This command will force the active }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  to clear all of its views and reprocess the original module.  This can be useful duri
ng trouble shooting a module to determine if some action you performed, such as locating and copying a missing module, has alleviated a problem.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab F5
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_EXTERNAL_VIEWER}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K External Viewer Command (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ External Viewer Command (View Menu)}}}{\fs32\insrsid9523310\charrsid9523310 View Module in External Viewer}{\fs32\insrsid5201950  Command (}{\fs32\uldb\insrsid5201950 
View Menu}{\v\fs32\insrsid5201950 view_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The external viewer command is provided as a means to launch a secondary module viewer.  The external viewer application is completely user configurable.  See the }{\f7\fs24\uldb\insrsid5201950 Configure External }{\f7\fs24\uldb\insrsid4881755 Module }{
\f7\fs24\uldb\insrsid5201950 Viewer...}{\v\f7\fs24\insrsid5201950 HIDM_CONFIGURE_VIEWER}{\f7\fs24\insrsid5201950  command for more information.
\par 
\par If the active view is the }{\f7\fs24\uldb\insrsid10114273 Module Dependency Tree View}{\v\f7\fs24\insrsid10114273 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid10114273 , }{\f7\fs24\uldb\insrsid10114273 Parent Import Function List View}{
\v\f7\fs24\insrsid10114273 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid10114273 , or }{\f7\fs24\uldb\insrsid10114273 Export Function List View}{\v\f7\fs24\insrsid10114273 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid10114273 ,}{\f7\fs24\insrsid9523310  }{
\f7\fs24\insrsid10114273 then }{\f7\fs24\insrsid5201950 th}{\f7\fs24\insrsid9523310 is command }{\f7\fs24\insrsid5201950 will launch the external viewer application with the module that is currently selected in the }{\f7\fs24\uldb\insrsid5201950 
Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 .  If the }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950 
 has the focus, then Dependency Walker will launch a separate instance of the external viewer application for every module that is selected in the list.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab ENTER (while one or more modules are highlighted in the active view)
\par Mouse:\tab Double-click on a module.
\par }{\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{bmct btn07.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0\pararsid9523310 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid9523310 \page 
}{\fs24\insrsid9523310 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0\pararsid9523310 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # H}{\b\insrsid5201950\charrsid9523310 
IDM_EXTERNAL_HELP}}K{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0\pararsid9523310 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K }{\b\insrsid5201950\charrsid9523310 Lookup Function in External }{
\b\insrsid5201950 H}{\b\insrsid5201950\charrsid9523310 elp}{\b\insrsid5201950  (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0\pararsid9523310 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\b\insrsid5201950 $ }{\b\insrsid5201950\charrsid9523310 Lookup Function in External }{\b\insrsid5201950 H}{\b\insrsid5201950\charrsid9523310 elp}{\b\insrsid5201950  (View Menu)}}}{\fs32\insrsid9523310\charrsid9523310 Lookup Function in External Help}{
\fs32\insrsid9523310  Command (}{\fs32\uldb\insrsid9523310 View Menu}{\v\fs32\insrsid9523310 view_menu}{\fs32\insrsid9523310 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0\pararsid9523310 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid9523310 
\par }{\f7\fs24\insrsid4733152 This command will attempt to find help about the currently selected function by using a help collection installed on your computer or by using }{\f7\fs24\insrsid11670650 the MSDN }{\f7\fs24\insrsid4733152 
online collection via the internet.  This command is available when either the }{\f7\fs24\uldb\insrsid4733152 Parent Import Function List View}{\v\f7\fs24\insrsid4733152 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid4733152  or the }{
\f7\fs24\uldb\insrsid4733152 Export Function List View}{\v\f7\fs24\insrsid4733152 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid4733152  is active and a named function is highlighted.  To configure what help collection to use for lookups, see the }{
\f7\fs24\uldb\insrsid14564224\charrsid4733152 Configure External Function Help Collection}{\v\f7\fs24\insrsid4733152\charrsid4733152 HIDM_CONFIGURE_EXTERNAL_HELP}{\f7\fs24\insrsid4733152  command.}{\f7\fs24\insrsid14564224\charrsid14564224 
\par }{\f7\fs24\insrsid9523310 
\par }{\b\f7\fs24\insrsid9523310 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0\pararsid9523310 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid9523310 Keys:\tab ENTER (while a function is highlighted in the active view)

\par Mouse:\tab Double-click on a function.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_PROPERTIES}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Properties Command (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Properties Command (View Menu)}}}{\fs32\insrsid5201950 Properties Command (}{\fs32\uldb\insrsid5201950 View Menu}{\v\fs32\insrsid5201950 view_menu}{\fs32\insrsid5201950 )

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The properties command is provided as a means to launch the Windows "Properties" dialog for selected modules.
\par 
\par If the active view is the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 , }{\f7\fs24\uldb\insrsid10114273 Parent Import Function List View}{\v\f7\fs24\insrsid10114273 
HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid10114273 , or }{\f7\fs24\uldb\insrsid10114273 Export Function List View}{\v\f7\fs24\insrsid10114273 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid10114273 , }{\f7\fs24\insrsid5201950 
then the Properties dialog will be displayed for the module that is currently selected in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 .  If the }{
\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950  has the focus, then Dependency Walker will display a separate Properties dialog for every module that is selected in the list.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab ALT+ENTER
\par }{\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{bmct btn08.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_VIEW_TOOLBAR}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Toolbar Command (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Toolbar Command (View Menu)}}}{\fs32\insrsid5201950 Toolbar Command (}{\fs32\uldb\insrsid5201950 View Menu}{\v\fs32\insrsid5201950 view_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to display and hide the Toolbar, which includes buttons for some of the most common commands in Dependency Walker, such as the File Open.  A check mark appears next to the menu item when the Toolbar is displayed.
\par 
\par See }{\f7\fs24\uldb\insrsid5201950 Toolbar}{\v\f7\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\f7\fs24\insrsid5201950  for more help on using the toolbar.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_VIEW_STATUS_BAR}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Status Bar Command (View Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Status Bar Command (View Menu)}}}{\fs32\insrsid5201950 Status Bar Command (}{\fs32\uldb\insrsid5201950 View Menu}{\v\fs32\insrsid5201950 view_menu}{\fs32\insrsid5201950 )

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to display and hide the Status Bar.  A check mark appears next to the menu item when the Status Bar is displayed.
\par 
\par See }{\f7\fs24\uldb\insrsid5201950 Status Bar}{\v\f7\fs24\insrsid5201950 AFX_HIDW_STATUS_BAR}{\f7\fs24\insrsid5201950  for more help on using the status bar.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_CONFIGURE_SEARCH_ORDER}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Configure Module Search Order Command (Options Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0
\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Configure Module Search Order Command (Options Menu)}}}{\fs32\insrsid5201950 Configure }{\fs32\insrsid10421061 Module }{\fs32\insrsid5201950 
Search Order Command (}{\fs32\uldb\insrsid5201950 Options Menu}{\v\fs32\insrsid5201950 options_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This command will display the }{\f7\fs24\uldb\insrsid5201950 Module Search Order Dialog}{\v\f7\fs24\insrsid5201950 HIDD_SEARCH_ORDER}{\f7\fs24\insrsid5201950 , which allows you to control how Dependency Walker searches your system for dependent files.

\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{
bmct btn10.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_CONFIGURE_VIEWER}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Configure External Module Viewer Command (Options Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0
\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Configure External Module Viewer Command (Options Menu)}}}{\fs32\insrsid5201950 Configure External }{\fs32\insrsid10421061 Module }{
\fs32\insrsid5201950 Viewer Command (}{\fs32\uldb\insrsid5201950 Options Menu}{\v\fs32\insrsid5201950 options_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This command will display the }{\f7\fs24\uldb\insrsid5201950 Configure External }{\f7\fs24\uldb\insrsid4881755 Module }{\f7\fs24\uldb\insrsid5201950 Viewer Dialog}{\v\f7\fs24\insrsid5201950 HIDD_CONFIGURE_VIEWER}{\f7\fs24\insrsid5201950 
, which allows you to configure the external viewer application and arguments.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0\pararsid10421061 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid10421061 
\page }{\fs24\insrsid10421061 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0\pararsid10421061 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # H}{\b\insrsid5201950\charrsid10421061 
IDM_CONFIGURE_EXTERNAL_HELP}}K{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0\pararsid10421061 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K }{\b\insrsid5201950\charrsid10421061 Configur
e External Function Help Collection Command}{\b\insrsid5201950  (Options Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0\pararsid10421061 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {
\b\insrsid5201950 $ }{\b\insrsid5201950\charrsid10421061 Configure External Function Help Collection Command}{\b\insrsid5201950  (Options Menu)}}}{\fs32\insrsid10421061\charrsid10421061 Configure Exter}{\fs32\insrsid10421061 
nal Function Help Collection Command (}{\fs32\uldb\insrsid10421061 Options Menu}{\v\fs32\insrsid10421061 options_menu}{\fs32\insrsid10421061 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0\pararsid10421061 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid10421061 
\par This command will display the }{\f7\fs24\uldb\insrsid13069465\charrsid13069465 Configure External Function Help Collection Dialog}{\v\f7\fs24\insrsid10421061 HIDD_CONFIGURE_}{\v\f7\fs24\insrsid13069465 EXTERNAL_HELP}{\f7\fs24\insrsid10421061 
, which allows you to configure }{\f7\fs24\insrsid13069465 which help collection to use when the }{\f7\fs24\uldb\insrsid13069465\charrsid5653359 Lookup Function in External}{\f7\fs24\uldb\insrsid13069465  }{\f7\fs24\uldb\insrsid13069465\charrsid5201950 
Help}{\v\f7\fs24\insrsid13069465\charrsid5653359 HIDM_EXTERNAL_HELP}{\f7\fs24\insrsid13069465  command is invoked.}{\f7\fs24\insrsid10421061 
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_HANDLED_FILE_EXTS}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Configure Handled File Extensions Command (Options Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0
\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Configure Handled File Extensions Command (Options Menu)}}}{\fs32\insrsid10421061 Configure H}{\fs32\insrsid5201950 
andled File Extensions Command (}{\fs32\uldb\insrsid5201950 Options Menu}{\v\fs32\insrsid5201950 options_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This command will display the }{\f7\fs24\uldb\insrsid5201950 Handled File Extensions Dialog}{\v\f7\fs24\insrsid5201950 HIDD_EXTENSIONS}{\f7\fs24\insrsid5201950 
, which allows you to configure which file extensions Dependency Walker should handle.  You can open "handled" files in any explorer window by right-clicking on a file and choosing "View Dependencies" from the context menu.  Handled files also show
 up in Dependency Walker\rquote s }{\f7\fs24\uldb\insrsid5201950 File Open Dialog}{\v\f7\fs24\insrsid5201950 AFX_HIDD_FILEOPEN}{\f7\fs24\insrsid5201950  by default.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_EXECUTE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Start Profiling Command (Profile Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Start Profiling Command (Profile Menu)}}}{\fs32\insrsid5201950 Start Profiling Command (}{\fs32\uldb\insrsid5201950 Profile Menu}{\v\fs32\insrsid5201950 profile_menu}{
\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This command will display the }{\f7\fs24\uldb\insrsid5201950 Profile Module Dialog}{\v\f7\fs24\insrsid5201950 HIDD_PROFILE}{\f7\fs24\insrsid5201950 , which allows you to configure and start profiling of the active }{\f7\fs24\uldb\insrsid5201950 
Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 .
\par 
\par This command will be disabled if any of the following apply:
\par 
\par }\pard \ql \fi-360\li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab You have not loaded any modules into Dependency Walker.
\par \{bmct bullet1.bmp\}\tab The application is already being profiled.  If this is the case, then the }{\f7\fs24\uldb\insrsid5201950 Stop Profiling Command}{\v\f7\fs24\insrsid5201950 HIDM_TERMINATE}{\f7\fs24\insrsid5201950  will be enabled.
\par \{bmct bullet1.bmp\}\tab The }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  represents a loaded Dependency Walker Image 
(DWI) file.  DWI files are snapshots from a previous time and possibly from a different system.  The files displayed may or may not correspond to files on your current system, and therefore cannot be profiled reliably.
\par \{bmct bullet1.bmp\}\tab The root module of the active }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 
 does not match the system you are running on.  For example, a 64-bit Alpha module cannot be profiled on a 32-bit x86 computer.
\par }\pard \ql \fi-360\li720\ri0\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab The root module cannot be a DLL, OCX, or similar type module.  It mu
st be the main executable file (usually ends with .EXE) of an application.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par }\pard\plain \s2\ql \li0\ri0\widctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab F7
\par }{\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{bmct btn11.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDM_TERMINATE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Stop Profiling Command (Profile Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Stop Profiling Command (Profile Menu)}}}{\fs32\insrsid5201950 Stop Profiling Command (}{\fs32\uldb\insrsid5201950 Profile Menu}{\v\fs32\insrsid5201950 profile_menu}{
\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This command will stop profiling the application for the active }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 
.  It will forcefully terminate your application, so it should only be used in situations where the application 
is not responding to normal methods of closing.  The Stop Profiling Command is only enabled when you are currently profiling the application.  See the }{\f7\fs24\uldb\insrsid5201950 Start Profiling Command}{\v\f7\fs24\insrsid5201950 HIDM_EXECUTE}{
\f7\fs24\insrsid5201950  for more information on profiling your application.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab SHIFT+F7
\par }{\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{bmct btn12.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_WINDOW_CASCADE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Cascade Command (Window Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Cascade Command (Window Menu)}}}{\fs32\insrsid5201950 Cascade Command (}{\fs32\uldb\insrsid5201950 Window Menu}{\v\fs32\insrsid5201950 window_menu}{\fs32\insrsid5201950 )

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to arrange all non-minimized }{\f7\fs24\uldb\insrsid5201950 Module Session Windows}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  in an overlapped fashion. 
\par }{\b\f7\fs24\insrsid5201950 
\par Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{
bmct btn13.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_WINDOW_TILE_HORZ}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Tile Horizontal Command (Window Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Tile Horizontal Command (Window Menu)}}}{\fs32\insrsid5201950 Tile Horizontal Command (}{\fs32\uldb\insrsid5201950 Window Menu}{\v\fs32\insrsid5201950 window_menu}{
\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to arrange all non-minimized }{\f7\fs24\uldb\insrsid5201950 Module Session Windows}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  as non-overlapping horizontal tiles.
\par }{\b\f7\fs24\insrsid5201950 
\par Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{
bmct btn14.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_WINDOW_TILE_VERT}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Tile Vertical Command (Window Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Tile Vertical Command (Window Menu)}}}{\fs32\insrsid5201950 Tile Vertical Command (}{\fs32\uldb\insrsid5201950 Window Menu}{\v\fs32\insrsid5201950 window_menu}{
\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to arrange all non-minimized }{\f7\fs24\uldb\insrsid5201950 Module Session Windows}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  as non-overlapping vertical tiles.
\par }{\b\f7\fs24\insrsid5201950 
\par Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{
bmct btn15.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_WINDOW_ARRANGE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Arrange Icons Command (Window Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Arrange Icons Command (Window Menu)}}}{\fs32\insrsid5201950 Arrange Icons Command (}{\fs32\uldb\insrsid5201950 Window Menu}{\v\fs32\insrsid5201950 window_menu}{
\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to arrange the icons for minimized windows at the bottom of the Dependency Walker\rquote s main window.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950\charrsid16255412 # HID_WINDOW_ALL}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950\charrsid16255412 K 1, 2, 3, ... Command (Window Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0
\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950\charrsid16255412 $ 1, 2, 3, ... Command (Window Menu)}}}{\fs32\insrsid5201950 1, 2, 3, ... Command (}{\fs32\uldb\insrsid5201950 Window Menu}{
\v\fs32\insrsid5201950 window_menu}{\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Dependency Walker displays a list of currently open }{\f7\fs24\uldb\insrsid5201950 Module Session Windows}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  at the bottom of the Window menu.  A check mark appears in front of the }{
\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  name of the active }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{
\f7\fs24\insrsid5201950 .  Choose a module session from this list to make its window active.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_HELP_FINDER}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Help Topics Command (Help Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Help Topics Command (Help Menu)}}}{\fs32\insrsid5201950 Help Topics Command (}{\fs32\uldb\insrsid5201950 Help Menu}{\v\fs32\insrsid5201950 help_menu}{\fs32\insrsid5201950 )

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to display the opening screen of Help.  From the opening screen, you can jump to any area of Dependency Walker\rquote s online help documentation.
\par 
\par Once you open Help, you can click the Contents button whenever you want to return to the opening screen.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_APP_ABOUT}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K About Dependency Walker Command (Help Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ About Dependency Walker Command (Help Menu)}}}{\fs32\insrsid5201950 About Dependency Walker Command (}{\fs32\uldb\insrsid5201950 Help Menu}{\v\fs32\insrsid5201950 help_menu}{
\fs32\insrsid5201950 )
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to display program information, the version, and the copyright of your copy of Dependency Walker.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_CONTEXT_HELP}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Context Help Command}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Context Help Command}}}{\fs32\insrsid5201950 Context Help Command
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use the Context Help command to obtain
 help on a particular area of Dependency Walker.  When you choose the Toolbar's Context Help button, the mouse pointer will change to an arrow and question mark.  Then click somewhere in the Dependency Walker window, such as another Toolbar button, menu i
tem, or a view.  The Help topic will be shown for the item you clicked on.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab SHIFT+F1
\par }{\fs24\uldb\insrsid5201950 Toolbar}{\v\fs24\insrsid5201950 AFX_HIDW_TOOLBAR}{\fs24\insrsid5201950 :\tab \{bmct btn16.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_SC_RESTORE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Restore Command (System Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Restore Command (System Menu)}}}{\fs32\insrsid5201950 Restore Command (System Menu)
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to return the active window to its size and position before it was Maximized or Minimized.
\par }{\b\f7\fs24\insrsid5201950 
\par Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Mouse\tab Single-click the Restore button on the }{\fs24\uldb\insrsid5201950 
Title Bar}{\v\fs24\insrsid5201950 HID_HT_CAPTION}{\fs24\insrsid5201950  of the maximized window or minimize icon bar.
\par \tab \{bmct app4.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_SC_MOVE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Move Command (System Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Move Command (System Menu)}}}{\fs32\insrsid5201950 Move Command (System Menu)
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to display the four-headed arrow cursor, which allows you to move the active window or dialog box with the arrow keys.
\par }\pard \ql \fi-360\li720\ri0\sb120\sa120\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct cursor4.bmp\}
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par Note:  This command is unavailable if you maximize the window.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Mouse:\tab Grab the Title Bar of the window and drag the window it to a new location.

\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_SC_SIZE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Size Command (System Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Size Command (System Menu)}}}{\fs32\insrsid5201950 Size Command (System Menu)
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to display the four-headed arrow cursor which allows you to re-size the window with the arrow keys.
\par }\pard \ql \fi-360\li720\ri0\sb120\sa120\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct cursor4.bmp\}
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 After the pointer changes to the four-headed arrow:
\par }\pard \ql \fi-360\li720\ri0\sb80\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 1.\tab Press one of the DIRECTION keys (left
, right, up, or down arrow key) to move the pointer to the border you want to move.  The cursor will change to one of the following images:
\par }\pard \ql \li1080\ri0\sb120\sa120\widctlpar\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 \{bmct cursors.bmp\}
\par }\pard \ql \fi-360\li720\ri0\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 2.\tab Press a DIRECTION key to move the border.
\par }\pard \ql \fi-360\li720\ri0\sb80\widctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 3.\tab Press ENTER when the window is the size you want.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par Note: This command is unavailable if you maximize or minimize the window.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Mouse:\tab Drag the size bars at the corners or edges of the window.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_SC_MINIMIZE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Minimize Command (System Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Minimize Command (System Menu)}}}{\fs32\insrsid5201950 Minimize Command (System Menu)
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to reduce the window to an icon.
\par }{\b\f7\fs24\insrsid5201950 
\par Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Mouse:\tab Single-click the Minimize button on the }{\fs24\uldb\insrsid5201950 
Title Bar}{\v\fs24\insrsid5201950 HID_HT_CAPTION}{\fs24\insrsid5201950 .
\par \tab \{bmct app2.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_SC_MAXIMIZE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Maximize Command (System Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Maximize Command (System Menu)}}}{\fs32\insrsid5201950 Maximize Command (System Menu)
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to enlarge the active window to fill the available space.
\par }{\b\f7\fs24\insrsid5201950 
\par Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Mouse:\tab Single-click the Maximize button on the }{\fs24\uldb\insrsid5201950 
Title Bar}{\v\fs24\insrsid5201950 HID_HT_CAPTION}{\fs24\insrsid5201950 .
\par \tab \{bmct app3.bmp\}
\par Mouse:\tab }{\v\fs24\insrsid5201950 HID_HT_CAPTION}{\fs24\insrsid5201950 Double-click on the }{\fs24\uldb\insrsid5201950 Title Bar}{\v\fs24\insrsid5201950 HID_HT_CAPTION}{\fs24\insrsid5201950 .
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_SC_CLOSE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Close Command (System Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Close Command (System Menu)}}}{\fs32\insrsid5201950 Close Command (System Menu)
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to close the window.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+F4 to close the active }{\fs24\uldb\insrsid5201950 
Module Session Window}{\v\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\fs24\insrsid5201950 .
\par Keys:\tab ALT+F4 to close all }{\fs24\uldb\insrsid5201950 Module Session Windows}{\v\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\fs24\insrsid5201950  and Dependency Walker.
\par Mouse:\tab Single-click on the Close button in the }{\fs24\uldb\insrsid5201950 Title Bar}{\v\fs24\insrsid5201950 HID_HT_CAPTION}{\fs24\insrsid5201950  of the window you wish to close.
\par \tab \{bmct app5.bmp\}
\par Mouse:\tab Double-click on the System Menu icon in the }{\fs24\uldb\insrsid5201950 Title Bar}{\v\fs24\insrsid5201950 HID_HT_CAPTION}{\fs24\insrsid5201950  of the window you wish to close.
\par \tab \{bmct app1.bmp\}
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_SC_NEXTWINDOW}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Next Window Command (System Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Next Window Command (System Menu)}}}{\fs32\insrsid5201950 Next Window Command (System Menu)
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to switch to the next open }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 
.  Dependency Walker determines which window is next according to the order in which you opened the }{\f7\fs24\uldb\insrsid5201950 Module Session Windows}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 .
\par 
\par See the }{\f7\fs24\uldb\insrsid5201950 Previous Window}{\v\f7\fs24\insrsid5201950 HID_SC_PREVWINDOW}{\f7\fs24\insrsid5201950  command also.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab CTRL+F6
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_SC_PREVWINDOW}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Previous Window Command (System Menu)}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Previous Window Command (System Menu)}}}{\fs32\insrsid5201950 Previous Window Command (System Menu)
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Use this command to switch to the previous open }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 .  Dependency Walker determines
 which window is previous according to the order in which you opened the }{\f7\fs24\uldb\insrsid5201950 Module Session Windows}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 .
\par 
\par See the }{\f7\fs24\uldb\insrsid5201950 Next Window}{\v\f7\fs24\insrsid5201950 HID_SC_NEXTWINDOW}{\f7\fs24\insrsid5201950  command also.
\par 
\par }{\b\f7\fs24\insrsid5201950 Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab SHIFT+CTRL+F6
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_NEXT_PANE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Next Pane Command}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Next Pane Command}}}{\fs32\insrsid5201950 Next Pane Command
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f7\fs24\insrsid5201950 
\par }{\f7\fs24\insrsid5201950 This command allows you to use the keyboard to switch between the different views in a }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 
.  The Next Pane Command navigates forward through the views in the following order:
\par 
\par }\pard \ql \fi-360\li720\ri0\widctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 1.\tab }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 
\par }\pard \ql \fi-360\li720\ri0\sb80\widctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 2.\tab }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
\par 3.\tab }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
\par 4.\tab }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950 
\par 5.\tab }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\sb80\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par See the }{\f7\fs24\uldb\insrsid5201950 Previous Pane}{\v\f7\fs24\insrsid5201950 HID_PREV_PANE}{\f7\fs24\insrsid5201950  command for navigating through the views in opposite order.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 
\par Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab F6
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_PREV_PANE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Previous Pane Command}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Previous Pane Command}}}{\fs32\insrsid5201950 Previous Pane Command
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\f7\fs24\insrsid5201950 
\par }{\f7\fs24\insrsid5201950 This command allows you to use the keyboard to switch between the different views in a }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 
.  The Previous Pane Command navigates backwards through the views in the following order:
\par 
\par }\pard \ql \fi-360\li720\ri0\widctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 1.\tab }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 
\par }\pard \ql \fi-360\li720\ri0\sb80\widctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 2.\tab }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950 
\par 3.\tab }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
\par 4.\tab }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
\par 5.\tab }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\sb80\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par See the }{\f7\fs24\uldb\insrsid5201950 Next Pane}{\v\f7\fs24\insrsid5201950 HID_NEXT_PANE}{\f7\fs24\insrsid5201950  command for navigating through the views in opposite order.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 
\par Shortcuts
\par }\pard\plain \s15\ql \fi-1080\li1080\ri0\sb80\widctlpar\tx1080\faauto\rin0\lin1080\itap0 \f7\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs24\insrsid5201950 Keys:\tab SHIFT+F6
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # AFX_HIDD_FILEOPEN}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K File Open Dialog}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ File Open Dialog}}}{\fs32\insrsid5201950 File Open Dialog
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\sa120\widctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Look in
\par }\pard \ql \li360\ri0\sa120\widctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Lists the available folders and files.  To see how the current folder fits in the hierarchy on your computer, click the down arrow.  To see what\rquote 
s inside a folder, click it.
\par }\pard \ql \li0\ri0\sa120\widctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 File and Folder List
\par }\pard \ql \li360\ri0\sa120\widctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This list displays all the files and folders located in the folder specified by the }{\b\f7\fs24\insrsid5201950 Look in}{\f7\fs24\insrsid5201950 
 field that match the search specifications of the }{\b\f7\fs24\insrsid5201950 File name}{\f7\fs24\insrsid5201950  field and/or the }{\b\f7\fs24\insrsid5201950 Files of type}{\f7\fs24\insrsid5201950  field.  You may select any file in this list and press 
}{\b\f7\fs24\insrsid5201950 Ok}{\f7\fs24\insrsid5201950  to open the file.  You may also double-click on any file in this list to open the file.
\par }\pard \ql \li0\ri0\sa120\widctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 File name
\par }\pard \ql \li360\ri0\sa120\widctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 
This box allows you to type a full path to a file, a relative path to a file, a path to another folder to browse, a file name to open, or a partial filename with wildcards (* and ?) to search for.  Depending on what you choose to do, the }{
\b\f7\fs24\insrsid5201950 Look in}{\f7\fs24\insrsid5201950  field and the }{\b\f7\fs24\insrsid5201950 File and Folder List}{\f7\fs24\insrsid5201950 
 will update to reflect the change.  If you type an exact match to a particular file, then that file will be opened.
\par }\pard \ql \li0\ri0\sa120\widctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Files of type
\par }\pard \ql \li360\ri0\widctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Select the types of files you want to open from the drop-down list.  The }{\b\f7\fs24\insrsid5201950 File and Folder List}{\f7\fs24\insrsid5201950 
 will update to show only the types of files specified by the }{\b\f7\fs24\insrsid5201950 Files of type}{\f7\fs24\insrsid5201950  field.  Dependency Walker provides three options for this list:
\par }\pard \ql \li720\ri0\widctlpar\faauto\rin0\lin720\itap0 {\b\f7\fs24\insrsid5201950 
\par }\pard \ql \li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0 {\b\f7\fs24\insrsid5201950 Handled File Extensions
\par }\pard \ql \li1080\ri0\sa120\widctlpar\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 Selecting th
is type will show all files that contain a file extension that you have told Dependency Walker to handle.  To configure what extensions are handled, see the }{\f7\fs24\uldb\insrsid5201950 Handled File Extensions Command}{\v\f7\fs24\insrsid5201950 
HIDM_HANDLED_FILE_EXTS}{\f7\fs24\insrsid5201950 .  You can load a file with any extension, but this setting only displays the ones that are handled.
\par }\pard \ql \li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0 {\b\f7\fs24\insrsid5201950 Dependency Walker Image (DWI)
\par }\pard \ql \li1080\ri0\sa120\widctlpar\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 Selecting this type will show all files with the DWI extension.  DWI files are image files that contain a complete snapshot of a previous }{
\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 .  By loading a DWI file, you can view the complete results of a previous }{\f7\fs24\uldb\insrsid5201950 Module Session}{
\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  without actually being on the system that generated the results.
\par }\pard \ql \li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0 {\b\f7\fs24\insrsid5201950 All Files (*.*)
\par }\pard \ql \li1080\ri0\sa120\widctlpar\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 Selecting this option will simply display all files for the current folder.  This can be useful in finding a file that you have not told dependency walker to handle.

\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # AFX_HIDD_FILESAVE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K File Save Dialog}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ File Save Dialog}}}{\fs32\insrsid5201950 File Save Dialog
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\sa120\widctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Save in
\par }\pard \ql \li360\ri0\sa120\widctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Lists the available folders and files.  To see how the current folder fits in the hierarchy on your computer, click the down arrow.  To see what\rquote 
s inside a folder, click it.
\par }\pard \ql \li0\ri0\sa120\widctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 File and Folder List
\par }\pard \ql \li360\ri0\sa120\widctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This list displays all the files and folders located in the folder specified by the }{\b\f7\fs24\insrsid5201950 Save in}{\f7\fs24\insrsid5201950 
 field that match the search specifications of the }{\b\f7\fs24\insrsid5201950 File name}{\f7\fs24\insrsid5201950  field and/or the }{\b\f7\fs24\insrsid5201950 Files of type}{\f7\fs24\insrsid5201950  field.  You may select any file in this list and press 
}{\b\f7\fs24\insrsid5201950 Ok}{\f7\fs24\insrsid5201950  to overwrite the file.  You may also double-click on any file in this list to overwrite the file.
\par }\pard \ql \li0\ri0\sa120\widctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 File name
\par }\pard \ql \li360\ri0\sa120\widctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 
This box allows you to type a full path to a file, a relative path to a file, a path to another folder to browse, a file name to save to, or a partial filename with wildcards (* and ?) to search for.  Depending on what you choose to do, the }{
\b\f7\fs24\insrsid5201950 Save in}{\f7\fs24\insrsid5201950  field and the }{\b\f7\fs24\insrsid5201950 File and Folder List}{\f7\fs24\insrsid5201950  will update to reflect the change.  If you type in a valid file name and press }{
\b\f7\fs24\insrsid5201950 Ok}{\f7\fs24\insrsid5201950  or Enter, then that file will be created and saved to.
\par }\pard \ql \li0\ri0\sa120\widctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Save as type
\par }\pard \ql \li360\ri0\widctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Select the file format you wish to save the active }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 
 to.  Dependency Walker provides four options for this list:
\par }\pard \ql \li720\ri0\widctlpar\faauto\rin0\lin720\itap0 {\b\f7\fs24\insrsid5201950 
\par }\pard \ql \li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0 {\b\f7\fs24\insrsid5201950 Dependency Walker Image (DWI)
\par }\pard \ql \li1080\ri0\sa120\widctlpar\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 DWI files represent a complete snapshot of the current }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{
\f7\fs24\insrsid5201950 .  They are binary files that are only recognizable to Dependency Walker.  DWI files may be loaded by Dependency Walker at a future time on any computer to view the complete results of the current }{\f7\fs24\uldb\insrsid5201950 
Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  as displayed on the computer that generated the }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 .
\par }\pard \ql \li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0 {\b\f7\fs24\insrsid5201950 Text (*.txt)
\par }\pard \ql \li1080\ri0\sa120\widctlpar\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 Selecting this option will save the contents of the }{\f7\fs24\uldb\insrsid5201950 System Information Dialog}{\v\f7\fs24\insrsid5201950 HIDD_SYS_INFO}{
\f7\fs24\insrsid5201950 , }{\f7\fs24\uldb\insrsid5201950 Module Search Order Dialog}{\v\f7\fs24\insrsid5201950 HIDD_SEARCH_ORDER}{\f7\fs24\insrsid5201950 , }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 
HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 , }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950 , and }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HI
DR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950  to a formatted text file that can be viewed with any text viewer.
\par }\pard \ql \li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0 {\b\f7\fs24\insrsid5201950 Text with Import/Export Lists (*.txt)
\par }\pard \ql \li1080\ri0\sa120\widctlpar\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 This option is the same as the }{\b\f7\fs24\insrsid5201950 Text}{\f7\fs24\insrsid5201950  option, but also saves the contents of the }{\f7\fs24\uldb\insrsid5201950 
Parent Import Function List View}{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950  and }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 
 in addition to the contents of the }{\f7\fs24\uldb\insrsid5201950 System Information Dialog}{\v\f7\fs24\insrsid5201950 HIDD_SYS_INFO}{\f7\fs24\insrsid5201950 , }{\f7\fs24\uldb\insrsid5201950 Module Search Order Dialog}{\v\f7\fs24\insrsid5201950 
HIDD_SEARCH_ORDER}{\f7\fs24\insrsid5201950 , }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950 , }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 
HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950 , and }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950  to a formatted text file that can be viewed with any text viewer.
\par }\pard \ql \li720\ri0\sa120\widctlpar\faauto\rin0\lin720\itap0 {\b\f7\fs24\insrsid5201950 Comma Separated Values (*.csv)
\par }\pard \ql \li1080\ri0\sa120\widctlpar\faauto\rin0\lin1080\itap0 {\f7\fs24\insrsid5201950 This option will save the }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950 
 to a comma separated value (CSV) text file.  CSV files can be easily imported into many applications such as Excel or Access.  They may also be useful with any post processing tools you may write on your own.  Each module in the }{
\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950  uses one line in the CSV file.  The text in each column of the }{\f7\fs24\uldb\insrsid5201950 Module List View}{
\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950  are separated by commas in the CSV file.  Any text that may contain a comma as part of its text will be put in quotes to prevent the comma from being interpreted as a column separat
or.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # AFX_HIDD_FIND}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Find Dialog}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Find Dialog}}}{\fs32\insrsid5201950 Find Dialog
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 The following options allow you to search for text in the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 .

\par }{\b\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Find what
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Fill this field in with the text you wish to locate in the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{
\f7\fs24\insrsid5201950 .
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Match whole word only
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 
Check this box to limit the search to only finding your text when seen as a whole word and not part of a larger word.  When not checked, all occurrences of your text will be found.  For example, when this option is not checked, searc
hing for "lock" could find words like "clock" and "locker".
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Match case
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Check this box to limit the search to only finding text that exactly matches the case of your search text.
\par }\pard\plain \s2\ql \li0\ri0\sa120\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Find Next
\par }\pard\plain \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 Press this button to look for the next occurrence of your search tex
t.  The search begins from your current cursor location and continues to the end of the view.  For each match that is found, the text will be highlighted in the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{
\f7\fs24\insrsid5201950 , and the cursor will be moved to that selection.  You may repeatedly press }{\b\f7\fs24\insrsid5201950 Find Next}{\f7\fs24\insrsid5201950  to continue searching for more matches.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDD_SYS_INFO}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K System Information Dialog}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ System Information Dialog}}}{\fs32\insrsid5201950 System Information Dialog
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 This resizable dialog displays information about the current computer, operating system, and user.  If the active }{\f7\fs24\uldb\insrsid5201950 Module Session}{
\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950  is actually a loaded Dependency Walker Image (DWI) file, then all the information in the System Information Dial
og describes the computer that saved the DWI file rather then the current computer.  The caption of this dialog will contain the text "(Local)" if it is displaying live information for the current computer.  For DWI files, the caption will contain the nam
e of the DWI file that the information is stored in.
\par 
\par All the information shown in the System Information Dialog is also saved to text and DWI type files when you use the }{\f7\fs24\uldb\insrsid5201950 Save Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{\f7\fs24\insrsid5201950  or }{
\f7\fs24\uldb\insrsid5201950 Save As Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE_AS}{\f7\fs24\insrsid5201950 .
\par }{\b\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Close
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Closes the dialog.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Refresh
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Refreshes the dialog with updated information.  This button will be disabled if the data shown is really from a loaded Dependency Walker Image (DWI) file.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Select All
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Selects all the text in the text window.  This button is useful before pressing the }{\b\f7\fs24\insrsid5201950 Copy}{\f7\fs24\insrsid5201950 
 button if you wish to copy the entire text window.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Copy
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Copies the selected text in the text window to the clipboard.  This button is disabled if no text is selected.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDD_SEARCH_ORDER}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Module Search Order Dialog}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Module Search Order Dialog}}}{\fs32\insrsid5201950 Module Search Order Dialog
\par }\pard\plain \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 This resizable dialog is used to configure how Dependency Walker locates dependent modules.  When you first open a module in Dependency Walker, it
 is scanned for all modules it is dependent on.  Then, all those dependent modules are scanned for their dependent modules.  This recursion is repeated until all modules have been scanned.  Inside each module are various tables that provide this informati
o
n.  However, only the file names of the dependent files are specified and not complete file paths.  For this reason, it is the job of Dependency Walker to search your system for each file to establish a full path to the files.  This is where the Module Se
arch Order Dialog comes into play.
\par 
\par The Module Search Order Dialog allows you to specify where Dependency Walker should look for dependent modules.  By default, Dependency Walker is set up to simulate the search algorithm that the operating system uses to l
ocate modules.  You can override this default behavior and set up your own custom search criteria.  This can be helpful for various reasons.  For example, maybe you want to check the dependencies of a group of MIPS Windows CE files on your x86 Windows com
puter.  Since you really don't want Dependency Walker to accidentally pick up x86 Windows modules as dependencies, you can remove all the default search criteria from the search order and just add directories that contain MIPS Windows CE modules.
\par 
\par If the active }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 
 is actually a loaded Dependency Walker Image (DWI) file, then the dialog will show the search order that was in use on the computer that created the DWI file.  Also, the caption of the dialog will contain the name of the 
DWI file, and many of the controls listed below will not be accessible since the search order cannot be modified when viewing the results from a DWI file.  If the current Module Session is not a DWI file, then the dialog's caption will contain the text "(
Local)" in it.
\par 
\par The Module Search Order Dialog has seven predefined locations it searches for files.  In addition to these seven locations, you can add search directories of your own.  The seven predefined locations include the following:
\par 
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\b\f7\fs24\insrsid5201950 Side-by-Side Components (Windows XP only)
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 Starting with Windows XP, applications can override the operating system\rquote 
s default search order by providing instructions about the versions and/or locations of modules it requires.  These instructions can be stored in a special XML file or as an RT_MANIFEST resource in the main executable itself.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\b\f7\fs24\insrsid5201950 The system's known DLLs list.
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 These are known modules like KERNEL32.DLL.  When the operating system encounters a known DLL, it skips all rules and loads it from a known place.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\b\f7\fs24\insrsid5201950 The application directory.
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 This is the directory that the main module of your application lives in.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\b\f7\fs24\insrsid5201950 The 32-bit system directory.
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 This is your 32-bit system directory.  On Windows NT/2000, it is usually something like C:\\WinNT\\System32\\.  On Windows XP, it is usually something like C:\\
Windows\\System32\\.  On Windows 95/98/Me, it is usually something like C:\\Windows\\System\\.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\b\f7\fs24\insrsid5201950 The 16-bit system directory (Windows NT/2000/XP only).
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 This is your 16-bit Windows directory and only exists on Windows NT/2000/XP.  It is usually located at C:\\WinNT\\System\\.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\b\f7\fs24\insrsid5201950 The system's root OS directory.
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 This is the directory that your operating system is installed to.  It is usually something like C:\\WinNT\\ on Windows NT/2000 and C:\\Windows\\
 on Windows 95/98/Me/XP.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\b\f7\fs24\insrsid5201950 The application's registered "App Paths" directories.
\par }\pard \ql \li720\ri0\sa120\nowidctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 This is a set of directories that an application can register for itself in the "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\
" section of the registry.  If an application has registered one or more directories, then those directories will be searched for dependent files.  This feature is actually provided by the Shell and not by the core operating system.  When an ap
plication is started by calling a Shell function (like ShellExecute or ShellExecuteEx), the Shell checks the registry to see if the application has registered a path in the "App Paths" section.  If so, that path is inserted into the head of the PATH varia
b
le for the application about to be started.  Most newer applications use the Shell functions to start other applications, but for applications that call CreateProcess, the applications started will not receive their "App Paths" path as part of their searc
h order.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\b\f7\fs24\insrsid5201950 The system's "PATH" environment variable directories.
\par }\pard \ql \li720\ri0\nowidctlpar\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 
The last item in a module's search order is usually the PATH variable.  This is a user-definable system variable that is seen by all applications running on a given computer.  It usually contains one or more directories where common modules can be found.

\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par The Module Search Order Dialog has the following controls:
\par 
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Available Search Groups
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 If you remove one or more of the predefined search locations from the }{\b\f7\fs24\insrsid5201950 Current Search Order}{\f7\fs24\insrsid5201950  list, they will be 
added to this list so that you can access them if you wish to add them back to the }{\b\f7\fs24\insrsid5201950 Current Search Order}{\f7\fs24\insrsid5201950 .}{\b\f7\fs24\insrsid5201950   }{\f7\fs24\insrsid5201950 
The locations in this list will not be part of the search order.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Current Search Order
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This list
 displays the current search order.  It can contain any number of the predefined search locations as well as any number of user-defined directories.  When Dependency Walker is searching for a module, it will start at the top of the list and work its way d
own until the module is found.  If the end of the list is reached with no match, then Dependency Walker gives up and marks the module as "Not Found"
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 >>}{\f7\fs24\insrsid5201950  (Add)}{\b\f7\fs24\insrsid5201950 
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This moves the highlighted item in the }{\b\f7\fs24\insrsid5201950 Available Search Groups}{\f7\fs24\insrsid5201950  list to the bottom of the }{
\b\f7\fs24\insrsid5201950 Current Search Order}{\f7\fs24\insrsid5201950  list.  Once moved, you can move it up the list if necessary using the }{\b\f7\fs24\insrsid5201950 Move Up}{\f7\fs24\insrsid5201950  button.  If no item is highlighted in the }{
\b\f7\fs24\insrsid5201950 Available Searches}{\f7\fs24\insrsid5201950  list, then this button will be disabled.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 <<}{\f7\fs24\insrsid5201950  (Remove)}{\b\f7\fs24\insrsid5201950 
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This moves the highlighted item in the }{\b\f7\fs24\insrsid5201950 Current Search Order}{\f7\fs24\insrsid5201950  list to the bottom of the }{
\b\f7\fs24\insrsid5201950 Available Search Groups}{\f7\fs24\insrsid5201950  list.  If no item is highlighted in the }{\b\f7\fs24\insrsid5201950 Current Search Order}{\f7\fs24\insrsid5201950  list, then this button will be disabled.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Expand
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Press this button to show all the files and/or directories that belong to each search group.  When this button is not pressed, just the group names are displayed.

\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Move Up
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This moves the highlighted item in the }{\b\f7\fs24\insrsid5201950 Current Search Order}{\f7\fs24\insrsid5201950 
 list up one position.  If no item is highlighted, or the first item is highlighted, then this button will be disabled.
\par }\pard\plain \s2\ql \li0\ri0\sa120\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Move Down
\par }\pard\plain \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 This moves the highlighted item in the }{\b\f7\fs24\insrsid5201950 Current Search Order}{
\f7\fs24\insrsid5201950  list down one position.  If no item is highlighted, or the last item is highlighted, then this button will be disabled.
\par }\pard\plain \s2\ql \li0\ri0\sa120\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Load
\par }\pard\plain \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 Press this button to load a Dependency Walker Path (DWP) file from disk.  See the }{
\f7\fs24\uldb\insrsid5201950 Dependency Walker Path (DWP) Files}{\v\f7\fs24\insrsid5201950 path_files}{\f7\fs24\insrsid5201950  section for more information.  You may also load DWP files from the }{\f7\fs24\uldb\insrsid5201950 Command Line}{
\v\f7\fs24\insrsid5201950 HIDR_COMMAND_LINE_HELP}{\f7\fs24\insrsid5201950  when first starting Dependency Walker.
\par }\pard\plain \s2\ql \li0\ri0\sa120\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Save
\par }\pard\plain \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 Press this button to save the current search order to a Dependency Walker Path (DWP) file.  See the 
}{\f7\fs24\uldb\insrsid5201950 Dependency Walker Path (DWP) Files}{\v\f7\fs24\insrsid5201950 path_files}{\f7\fs24\insrsid5201950  section for more information.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Default
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This button resets the }{\b\f7\fs24\insrsid5201950 Current Search Order}{\f7\fs24\insrsid5201950  list to its
 default configuration.  This will cause all user-defined directories to be removed from the list.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Add Directory
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This button and text field allow you to add user-defined search directories to the search order.  You can type in a directory you wish to add or press the }{
\b\f7\fs24\insrsid5201950 Browse}{\f7\fs24\insrsid5201950  button to graphically pick a directory.  If no text is present in the text field, then the }{\b\f7\fs24\insrsid5201950 Add Directory}{\f7\fs24\insrsid5201950 
 button will be disabled.  You can add as many user-defined directories as you wish.  Directories are added to the bottom of the }{\b\f7\fs24\insrsid5201950 Current Search Order}{\f7\fs24\insrsid5201950  list.  To move them up the list, use the }{
\b\f7\fs24\insrsid5201950 Move Up}{\f7\fs24\insrsid5201950  button.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Browse
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This button allows you to graphically choose a directory to be added to the }{\b\f7\fs24\insrsid5201950 Current Search Order}{\f7\fs24\insrsid5201950 
 list.  Once pushed, a browse dialog will appear allowing you to choose a directory.  If you choose a directory from the browse dialog, it will show up in the }{\b\f7\fs24\insrsid5201950 Add Directory}{\f7\fs24\insrsid5201950 
 text field.  To actually add the directory to the search order, you need to press the }{\b\f7\fs24\insrsid5201950 Add Directory}{\f7\fs24\insrsid5201950  button.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDD_CONFIGURE_VIEWER}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Configure External Viewer Dialog}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Configure External Viewer Dialog}}}{\fs32\insrsid5201950 Configure External }{\fs32\insrsid15101267 Module }{\fs32\insrsid5201950 Viewer Dialog
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Command
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This field specifies a path to the executable to be run when the }{\f7\fs24\uldb\insrsid4881755\charrsid5263639 View Module in External Viewer}{
\v\f7\fs24\insrsid5201950 HIDM_EXTERNAL_VIEWER}{\f7\fs24\insrsid5201950  command is invoked.  You may use environment variables, like %SystemRoot%, in this path.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Arguments
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This field specifies the command line arguments to be passed to the executable specified in the }{\b\f7\fs24\insrsid5201950 Command}{\f7\fs24\insrsid5201950 
 field when the }{\f7\fs24\uldb\insrsid4881755\charrsid5263639 View Module in External Viewer}{\v\f7\fs24\insrsid5201950 HIDM_EXTERNAL_VIEWER}{\f7\fs24\insrsid5201950  command is invoked.  You may use a }{\b\f7\fs24\insrsid5201950 %1}{
\f7\fs24\insrsid5201950  anywhere in the argument string to represent the full path to the module file.  When the external viewer application is launched, all }{\b\f7\fs24\insrsid5201950 %1}{\f7\fs24\insrsid5201950 
 tokens will be replaced with the full path to the module file.  You should surround all }{\b\f7\fs24\insrsid5201950 %1}{\f7\fs24\insrsid5201950  arguments in quotes so that the external viewer can handle long filenames with spaces.  For example, "}{
\b\f7\fs24\insrsid5201950 %1}{\f7\fs24\insrsid5201950 ".  You may also use environment variables in this field.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Browse
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This button will display a }{\f7\fs24\uldb\insrsid5201950 File Open Dialog}{\v\f7\fs24\insrsid5201950 AFX_HIDD_FILEOPEN}{\f7\fs24\insrsid5201950 
, which allows you to browse your system for the executable file to be used as your external viewer.  If a file is chosen in this dialog, the }{\b\f7\fs24\insrsid5201950 Command}{\f7\fs24\insrsid5201950  field will be updated to show the new file.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par }\pard\plain \s21\ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 When you first run Dependency Walker, it defaults to using QUIKVIEW.EXE as your exter
nal viewer if you have it on your system.  If it is not found, then it defaults to using DEPENDS.EXE as the external viewer, which will just launch another instance of Dependency Walker.  Here is an example using DUMPBIN.EXE (part of Visual C++) on Window
s NT/2000/XP to get header information about a module:
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \fi-1800\li1800\ri0\nowidctlpar\tx1800\faauto\rin0\lin1800\itap0 {\b\f7\fs24\insrsid5201950 Command:\tab }{\f7\fs24\insrsid5201950 %SystemRoot%\\System32\\cmd.exe
\par }{\b\f7\fs24\insrsid5201950 Arguments:\tab }{\f7\fs24\insrsid5201950 /c dumpbin.exe /headers "%1" > "%TEMP%\\headers.txt" & start notepad "%TEMP%\\headers.txt"
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0\pararsid15101267 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid15101267 
\page }{\fs24\insrsid15101267 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0\pararsid15101267 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # H}{\b\insrsid5201950\charrsid15101267 
IDD_CONFIGURE_EXTERNAL_HELP}}K{\footnote \pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0\pararsid15101267 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K }{\b\insrsid5201950\charrsid15101267 Configure External 
Function Help Collection Dialog}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0\pararsid15101267 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ }{\b\insrsid5201950\charrsid15101267 
Configure External Function Help Collection Dialog}}}{\fs32\insrsid15101267\charrsid15101267 Configure External Function Help Collection}{\fs32\insrsid15101267  Dialog
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0\pararsid15101267 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid15101267 
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0\pararsid15101267 {\f7\fs24\insrsid5653359 This dialog is used to determine what help collection should be used when the }{\f7\fs24\uldb\insrsid5653359\charrsid5653359 Lookup Function in External }{
\f7\fs24\uldb\insrsid5653359\charrsid6440090 Help}{\v\f7\fs24\insrsid5653359\charrsid5653359 HIDM_EXTERNAL_HELP}{\f7\fs24\insrsid5653359 
 command is invoked.  Dependency Walker will examine your computer and determine what help collections are installed and available for you to use.  It supports collections from MSDN, Visual Studio 6.0, and Visual Studio 7.0.  Dependency Walker ca
n also perform a lookup over the internet using the MSDN online help.  This is useful if you don't have any installed collections, or your collections are out of date.
\par }{\f7\fs24\insrsid5653359\charrsid5653359  
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0\pararsid15101267 {\b\f7\fs24\insrsid5653359\charrsid5653359 Use}{\b\f7\fs24\insrsid5653359  the following MSDN collection}{\b\f7\fs24\insrsid15101267 
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0\pararsid15101267 {\f7\fs24\insrsid5653359 Select this radio button to indicate that you wish to use an installed help collection rather than the online collection.}{\f7\fs24\insrsid15101267 

\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0\pararsid5653359 {\b\f7\fs24\insrsid5653359\charrsid5653359 Collection list
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0\pararsid5653359 {\f7\fs24\insrsid5653359 This is a list of help collections that Dependenc}{\f7\fs24\insrsid1605003 y Walker found installed on your system.  Dependency Walker attempts 
to sort the list from the most relevant help collection to the least relevant help collection.}{\f7\fs24\insrsid5653359 
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0\pararsid5201950 {\b\f7\fs24\insrsid5201950\charrsid5201950 Refresh
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0\pararsid5201950 {\f7\fs24\insrsid5201950 This button will rescan your system for help collections.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0\pararsid1605003 {\b\f7\fs24\insrsid1605003\charrsid1605003 Use MSDN online (Use a %1 to represent the }{\b\f7\fs24\insrsid6440090 function name}{\b\f7\fs24\insrsid1605003\charrsid1605003 )

\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0\pararsid1605003 {\f7\fs24\insrsid1605003 Select this radio button to indicate that you wish to use the MSDN online help rather than an installed help collection.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0\pararsid1605003 {\b\f7\fs24\insrsid1605003\charrsid1605003 URL
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0\pararsid1605003 {\f7\fs24\insrsid1605003 This field contains the URL that Dependency Walker will launch in a browser window when you invoke the }{
\f7\fs24\uldb\insrsid1605003\charrsid5653359 Lookup Function in External}{\f7\fs24\uldb\insrsid5201950  }{\f7\fs24\uldb\insrsid1605003\charrsid5201950 Help}{\v\f7\fs24\insrsid1605003\charrsid5653359 HIDM_EXTERNAL_HELP}{\f7\fs24\insrsid1605003  command}{
\f7\fs24\insrsid5201950 .  Dependency Walker will replace all occurrences of %1 }{\f7\fs24\insrsid6440090 in the URL }{\f7\fs24\insrsid5201950 with the name of the function you are looking up.}{\f7\fs24\insrsid1605003 
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0\pararsid5201950 {\b\f7\fs24\insrsid5201950\charrsid5201950 Default URL
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0\pararsid1605003 {\f7\fs24\insrsid5201950 This button will fill }{\f7\fs24\insrsid6440090 in }{\f7\fs24\insrsid5201950 
the URL field with the default URL for using MSDN online.  This default URL was determined at the time Dependency Walker was released and may not work in the future if MSDN online ch}{\f7\fs24\insrsid6440090 
anges the format of their URL.  For this reason, the URL field has been provided so that you can modify the URL to fit your needs.}{\f7\fs24\insrsid1605003\charrsid1605003 
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDD_EXTENSIONS}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Handled File Extensions Dialog}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Handled File Extensions Dialog}}}{\fs32\insrsid5201950 Handled File Extensions Dialog
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
This dialog is used to configure what file extensions you wish Dependency Walker to "handle".  Dependency Walker will register itself with your operating system as a viewer for any 
file extensions you add within this dialog.  Once registered, you can right-click on a handled file in any explorer window and choose "View Dependencies" from the context menu to launch Dependency Walker and process that file.  Handled files are also show
n by default in the }{\f7\fs24\uldb\insrsid5201950 File Open Dialog}{\v\f7\fs24\insrsid5201950 AFX_HIDD_FILEOPEN}{\f7\fs24\insrsid5201950  when it is first displayed.  
\par 
\par You may also use the Handled File Extensions Dialog to remove handled file extensions.  This will remove the "View Dependencies" menu item from the right-click explorer context menu for the extensions you wish to stop handling.
\par 
\par Usually, you will want Dependency Walker to handle all extensions that represent 32-bit or 64-bit Windows modules.  Some common ones are EXE, DLL, and OCX.  However, developers are free to use any ex
tension they wish when creating modules.  Because of this, Dependency Walker provides the option to scan one or more of your disk drives looking for files that are 32-bit or 64-bit Windows modules and automatically add them to your handled file extension 
list.
\par }{\b\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Extension
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 
This field allows you to manually enter an extension and add it to the list.  You do not need to enter a period as part of the extension.  After you type in an extension, you need to press the }{\b\f7\fs24\insrsid5201950 Add}{\f7\fs24\insrsid5201950 
 button to add it to the list.
\par }\pard\plain \s2\ql \li0\ri0\sa120\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Add
\par }\pard\plain \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 This button adds the extension in the }{\b\f7\fs24\insrsid5201950 Extension}{
\f7\fs24\insrsid5201950  field to the extension list.  If there is no text in the }{\b\f7\fs24\insrsid5201950 Extension}{\f7\fs24\insrsid5201950  field or the extension entered is already in the list, then this button will be disabled.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Remove
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Removes all the highlighted extensions from the extension list.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Search...
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This button will display the }{\f7\fs24\uldb\insrsid5201950 Search for Executable File Extensions Dialog}{\v\f7\fs24\insrsid5201950 HIDD_FILE_SEARCH}{
\f7\fs24\insrsid5201950 , which allows you to automatically search one or more of your disk drives for 32-bit and 64-bit Windows modules.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDD_FILE_SEARCH}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Search for Executable File Extensions Dialog}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0
\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Search for Executable File Extensions Dialog}}}{\fs32\insrsid5201950 Search for Executable File Extensions Dialog
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par This dialog will automatically search one or more of your disk drives looking for 32-bit and 64-bit Windows modules.  Once the search is complete, you can choose which of the files you want Dependency Walker to handle.
\par 
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Drives to Search
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This list shows all drive letters currently available on your computer.  By default, all drives that are local hard drives are highlig
hted.  Select the drives you wish to search and press the }{\b\f7\fs24\insrsid5201950 Search}{\f7\fs24\insrsid5201950  button to begin.  While searching, the word "Searching" will appear next to the drive that is currently being searched.
\par }\pard\plain \s2\ql \li0\ri0\sa120\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Extensions to Add
\par }\pard\plain \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 Once the searching begins, this list will be populate
d as 32-bit or 64-bit Windows modules are found.  During the search, the list itself will be disabled, preventing you from unselecting items.  Once the search completes, you can select which files you want Dependency Walker to handle and press the }{
\b\f7\fs24\insrsid5201950 Add}{\f7\fs24\insrsid5201950  button.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Search
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Once you have selected the drives you wish to search in the }{\b\f7\fs24\insrsid5201950 Drives to Search}{\f7\fs24\insrsid5201950 
 list, press this button to begin searching.  While searching, all controls in the dialog will be disabled except the }{\b\f7\fs24\insrsid5201950 Stop}{\f7\fs24\insrsid5201950  and }{\b\f7\fs24\insrsid5201950 Cancel}{\f7\fs24\insrsid5201950  buttons.

\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Stop
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This will stop the currently running search.  If there is no currently running search, then this button will be disabled.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Add
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Once the search has completed, you can press this button to add all the highlighted extensions in }{\b\f7\fs24\insrsid5201950 Extensions to Add}{
\f7\fs24\insrsid5201950  list to the handled list and return to the }{\f7\fs24\uldb\insrsid5201950 Handled File Extensions Dialog}{\v\f7\fs24\insrsid5201950 HIDD_EXTENSIONS}{\f7\fs24\insrsid5201950 .
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Cancel
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 
Press this button to close the dialog without adding any file extensions to Dependency Walker's handled list.  If a search is currently running, the Cancel button will stop the search first, then close the dialog.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDD_PROFILE}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Profile Module Dialog}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Profile Module Dialog}}}{\fs32\insrsid5201950 Profile Module Dialog
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par The profile dialog is used to configure how a module is to be profiled.  It contains the following controls:
\par 
\par }\pard\plain \s2\ql \li0\ri0\sa120\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Program arguments
\par }\pard\plain \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 This field can be filled in with any arguments you wish to start the application with.
\par }\pard\plain \s2\ql \li0\ri0\sa120\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Starting directory
\par }\pard\plain \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
This field contains the directory that the application should start in.  By default, this field is filled in with the directory that the main executable lives in.  If you wish to change this directory, you can type in a new directory or press the }{
\b\f7\fs24\insrsid5201950 Browse}{\f7\fs24\insrsid5201950  button to graphically choose a new directory.  You can also press the }{\b\f7\fs24\insrsid5201950 Default}{\f7\fs24\insrsid5201950  button to restore this field to its default directory.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Browse...
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This butt
on will display a browse dialog that lets you graphically choose a starting directory for the application.  After you choose a directory, it will appear in the }{\b\f7\fs24\insrsid5201950 Starting Directory}{\f7\fs24\insrsid5201950  field.
\par }\pard\plain \s2\ql \li0\ri0\sa120\nowidctlpar\faauto\outlinelevel1\rin0\lin0\itap0 \b\f7\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 Default
\par }\pard\plain \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 This button will restore the }{\b\f7\fs24\insrsid5201950 Starting Directory}{
\f7\fs24\insrsid5201950  field to its default directory.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Clear the log window.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 When this box is checked, the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 
 will be cleared before the profile is started.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Simulate ShellExecute by inserting any App Paths directories into the PATH environment variable.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 When this b
ox is checked, Dependency Walker will simulate the ShellExecute function when starting your application.  This ensures that your application's "App Paths" entries are part of the search path.  When this box is not checked, Dependency Walker simply calls C
reateProcess to start your application, which does not use the "App Paths" entries.  Usually, you should check this box unless you are troubleshooting a problem related to "App Paths" entries.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Log DllMain calls for process attach and process detach messages.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Dependency Walker monitors all calls to each non-shared module\rquote 
s entrypoint, usually known as the DllMain function.  When this box is checked, all DllMain functions called with the DLL_PROCESS_ATTACH message or DLL_PROCESS_DETACH message will be logged. 
 If a module returns 0 from its DllMain function while processing the DLL_PROCESS_ATTACH message, then the OS will unload the module and return a failure.  In the case of an implicit dependency, this will cause the entire application to fail to load with 
an error dialog reading something like "The application failed to initialize properly".  In the case of a dynamic dependency, the call to LoadLibrary will fail with error 1114 (ERROR_DLL_INIT_FAILED), but the application may continue to run.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Log DllMain calls for all other messages, including thread attach and thread detach.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 Dependency Walker monitors all calls to each non-shared module\rquote 
s entrypoint, usually known as the DllMain function.  When this box is checked, all DllMain functions called with the DLL_THREAD_ATTACH message or DLL_THREAD_DETACH message will be logged.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Hook the process to gather more detailed dependency information.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 When this item is checked, Dependency Walker will inject a small DLL into the application being profiled to help gather detai
ls that can only be gathered from within the application itself.  When the process being profiled is hooked, Dependency Walker is able to track which modules dynamically load other modules at runtime, as well as what functions are dynamically being called
 
into those dynamically loaded modules.  It can also capture the command line arguments passed to child processes.  When a process is not hooked, Dependency Walker can still track all dynamically loaded modules, but cannot provide information about which m
odule loaded the dynamic modules, or what dynamic functions were called.  See the }{\f7\fs24\uldb\insrsid5201950 Using Application Profiling to Detect Dynamic Dependencies}{\v\f7\fs24\insrsid5201950 application_profiling}{\f7\fs24\insrsid5201950 
 section for more information.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Log LoadLibrary function calls.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This option is only enabled if the }{\b\f7\fs24\insrsid5201950 Hook the process to gather more detailed dependency information}{\f7\fs24\insrsid5201950 
 is checked.  When checked, all calls to LoadLibrary type functions will be logged to the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 
.  When not checked, the calls are still processed, but just not displayed in the Log View.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Log GetProcAddress function calls.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This option is only enabled if the }{\b\f7\fs24\insrsid5201950 Hook the process to gather more detailed dependency information}{\f7\fs24\insrsid5201950 
 is checked.  When checked, all calls to GetProcAddress will be logged to the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 
.  When not checked, the calls are still processed, but just not displayed in the Log View.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Log thread information.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 When this option is checked, all thread creations and deletions are logged to the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 
HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 .  Also, all other events logged to the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 
, will have the thread I.D. appended to the end.  This option can be helpful if you are trying to track down what threads are loading modules and calling functions.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Use simple thread numbers instead of actual thread IDs.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This option is only enabled if the }{\b\f7\fs24\insrsid5201950 Log thread information}{\f7\fs24\insrsid5201950 
 is checked.  When checked, simple incrementing numbers are used to represent the different threads rather than true thread I.D.'s, which can be lengthy hexadecimal values.  This makes following a particular thread's activity easier.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Log first chance exceptions.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 When this option is checked, all first chance exceptions will be logged to the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 
HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 
.  First chance exceptions should be harmless if handled correctly by the application.  Usually, you can leave this option checked, but if you are profiling an application that makes extensive use of first chance exceptions, then you may wish to uncheck t
h
is option to reduce unwanted output.  If an application does not handle a first chance exception, then a second chance exception occurs and the application is terminated.  Dependency Walker always logs second chance exceptions, regardless of how this opti
on is set.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Log debug output.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 When this option is set, all debug output from the process will be logged to the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 
HIDR_PROFILE_RICH_VIEW}{\f7\fs24\insrsid5201950 .
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Use full paths when logging file names.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 This option lets you control how file names are logged to the }{\f7\fs24\uldb\insrsid5201950 Log View}{\v\f7\fs24\insrsid5201950 HIDR_PROFILE_RICH_VIEW}{
\f7\fs24\insrsid5201950 .  Several of the events that are logged will need to display file names.  When this option is checked, full paths to the files will be logged.  When this option is not checked, only the file names will be displayed.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Log a time stamp with each line of log.
\par }\pard \ql \li360\ri0\sa120\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 
When this option is set, each line of log will begin with a time stamp.  Each time stamp shows the number of hours, minutes, seconds, and milliseconds that have elapsed since the process started.  It is important to note that Depende
ncy Walker can significantly impact the performance of certain operations within the application being profiled.  For this reason, these time stamps should probably not be used as an accurate method of measuring the performance of your application.
\par }\pard \ql \li0\ri0\sa120\nowidctlpar\faauto\rin0\lin0\itap0 {\b\f7\fs24\insrsid5201950 Automatically open and profile child processes.
\par }\pard \ql \li360\ri0\nowidctlpar\faauto\rin0\lin360\itap0 {\f7\fs24\insrsid5201950 
When this option is checked, Dependency Walker will automatically open and process any child processes of a process being profiled.  For example, if you are profiling application A and it decides to launch applicati
on B, then Dependency Walker will open a new }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 
 for application B and immediately begin to profile it using the same profiling settings as application A.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HIDD_ABOUT}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K About Dependency Walker Dialog}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ About Dependency Walker Dialog}}}{\fs32\insrsid5201950 About Dependency Walker Dialog
\par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 This dialog displays program information, the version, and the copyright of your copy of Dependency Walker.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # AFX_HIDW_TOOLBAR}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Toolbar}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Toolbar}}}{\fs32\insrsid5201950 Toolbar
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct tb01.bmp\}}{\v\f7\fs24\insrsid5201950 HID_FILE_OPEN}{\f7\fs24\uldb\insrsid5201950 \{bmct tb02.bmp\}}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{\f7\fs24\uldb\insrsid5201950 \{bmct tb03.bmp\}}{\v\f7\fs24\insrsid5201950 
HID_EDIT_COPY}{\f7\fs24\uldb\insrsid5201950 \{bmct tb04.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_AUTO_EXPAND}{\f7\fs24\uldb\insrsid5201950 \{bmct tb05.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_FULL_PATHS}{\f7\fs24\uldb\insrsid5201950 \{bmct tb06.bmp\}}{
\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\uldb\insrsid5201950 \{bmct tb07.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_EXTERNAL_VIEWER}{\f7\fs24\uldb\insrsid5201950 \{bmct tb08.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_PROPERTIES}{
\f7\fs24\uldb\insrsid5201950 \{bmct tb09.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_SYS_INFO}{\f7\fs24\uldb\insrsid5201950 \{bmct tb10.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_CONFIGURE_SEARCH_ORDER}{\f7\fs24\uldb\insrsid5201950 \{bmct tb11.bmp\}}{
\v\f7\fs24\insrsid5201950 HIDM_EXECUTE}{\f7\fs24\uldb\insrsid5201950 \{bmct tb12.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_TERMINATE}{\f7\fs24\uldb\insrsid5201950 \{bmct tb13.bmp\}}{\v\f7\fs24\insrsid5201950 HID_WINDOW_CASCADE}{\f7\fs24\uldb\insrsid5201950 \{
bmct tb14.bmp\}}{\v\f7\fs24\insrsid5201950 HID_WINDOW_TILE_HORZ}{\f7\fs24\uldb\insrsid5201950 \{bmct tb15.bmp\}}{\v\f7\fs24\insrsid5201950 HID_WINDOW_TILE_VERT}{\f7\fs24\uldb\insrsid5201950 \{bmct tb16.bmp\}}{\v\f7\fs24\insrsid5201950 HID_CONTEXT_HELP}{
\f7\fs24\insrsid5201950 
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx720\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 The toolbar is displayed by default a
cross the top of the application window, below the menu bar.  The toolbar provides quick mouse access to many tools used in Dependency Walker.
\par 
\par There are three ways you can learn what a particular toolbar button\rquote s action is.  You can float the mouse over t
he button and a tool tip will pop up with the command name.  You can press and hold the mouse down over a button and read the text displayed in the }{\f7\fs24\uldb\insrsid5201950 Status Bar}{\v\f7\fs24\insrsid5201950 HID_VIEW_STATUS_BAR}{
\f7\fs24\insrsid5201950  for a more detailed description.  If you do not wish to execute the command, move the mouse off the toolbar button and release the mouse.  Last, you can use the }{\f7\fs24\uldb\insrsid5201950 Context Help}{
\v\f7\fs24\insrsid5201950 HID_CONTEXT_HELP}{\f7\fs24\insrsid5201950  utility to activate the online help documentation for the toolbar button.
\par 
\par The toolbar can be docked to the top, left, right, and bottom of Dependency Walker\rquote 
s main window, as well as free floated in its own mini window   To change the docking location of the toolbar, simply grab the toolbar along its edge and drag it to where you would like it to go.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par To hide or display the Toolbar, choose the }{\f7\fs24\uldb\insrsid5201950 Toolbar}{\v\f7\fs24\insrsid5201950 HID_VIEW_TOOLBAR}{\f7\fs24\insrsid5201950  option from the }{\f7\fs24\uldb\insrsid5201950 View menu}{\v\f7\fs24\insrsid5201950 view_menu}{
\f7\fs24\insrsid5201950 .
\par 
\par }\pard \ql \fi-720\li720\ri0\sa120\widctlpar\brdrb\brdrs\brdrw15\brsp20 \tx720\faauto\rin0\lin720\itap0 {\b\f7\fs24\insrsid5201950 Click\tab To}{\f7\fs24\insrsid5201950 
\par }\pard \ql \fi-720\li720\ri0\sa120\widctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\uldb\insrsid5201950 \{bmct btn01.bmp\}}{\v\f7\fs24\insrsid5201950 HID_FILE_OPEN}{\f7\fs24\insrsid5201950 \tab Opens and processes a module file.  See the }{
\f7\fs24\uldb\insrsid5201950 Open...}{\v\f7\fs24\insrsid5201950 HID_FILE_OPEN}{\f7\fs24\insrsid5201950  command for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn02.bmp\}}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{\f7\fs24\insrsid5201950 \tab Saves the current }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 
 to a file.  See the }{\f7\fs24\uldb\insrsid5201950 Save Command}{\v\f7\fs24\insrsid5201950 HID_FILE_SAVE}{\f7\fs24\insrsid5201950  for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn03.bmp\}}{\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{\f7\fs24\insrsid5201950 \tab Copies the current selection to the clipboard as text.  See the }{\f7\fs24\uldb\insrsid5201950 Copy Command}{
\v\f7\fs24\insrsid5201950 HID_EDIT_COPY}{\f7\fs24\insrsid5201950  for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn04.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_AUTO_EXPAND}{\f7\fs24\insrsid5201950 \tab When checked, the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_TREE_VIEW}{
\f7\fs24\insrsid5201950  will automatically expand to show modules as they are added.  See the }{\f7\fs24\uldb\insrsid5201950 Auto Expand}{\v\f7\fs24\insrsid5201950 HIDM_AUTO_EXPAND}{\f7\fs24\insrsid5201950  option for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn05.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_FULL_PATHS}{\f7\fs24\insrsid5201950 \tab Shows or hides full path strings in the }{\f7\fs24\uldb\insrsid5201950 Module Dependency Tree View}{\v\f7\fs24\insrsid5201950 
HIDR_MODULE_TREE_VIEW}{\f7\fs24\insrsid5201950  and the }{\f7\fs24\uldb\insrsid5201950 Module List View}{\v\f7\fs24\insrsid5201950 HIDR_MODULE_LIST_VIEW}{\f7\fs24\insrsid5201950 .  See the }{\f7\fs24\uldb\insrsid5201950 Full Paths}{
\v\f7\fs24\insrsid5201950 HIDM_VIEW_FULL_PATHS}{\f7\fs24\insrsid5201950  option for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn06.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950 \tab Enables or disables undecoration of C++ function names in the }{\f7\fs24\uldb\insrsid5201950 Parent Import Function List View}
{\v\f7\fs24\insrsid5201950 HIDR_IMPORT_LIST_VIEW}{\f7\fs24\insrsid5201950  and the }{\f7\fs24\uldb\insrsid5201950 Export Function List View}{\v\f7\fs24\insrsid5201950 HIDR_EXPORT_LIST_VIEW}{\f7\fs24\insrsid5201950 .  See the }{
\f7\fs24\uldb\insrsid5201950 Undecorate C++ Functions}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_UNDECORATED}{\f7\fs24\insrsid5201950  option for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn07.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_EXTERNAL_VIEWER}{\f7\fs24\insrsid5201950 \tab Launches the external module viewer for the selected modules.  See the }{\f7\fs24\uldb\insrsid4881755\charrsid5263639 
View Module in External Viewer}{\v\f7\fs24\insrsid5201950 HIDM_EXTERNAL_VIEWER}{\f7\fs24\insrsid5201950  command for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn08.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_PROPERTIES}{\f7\fs24\insrsid5201950 \tab Displays the Windows Properties dialog for the selected modules.  See the }{\f7\fs24\uldb\insrsid5201950 Properties}{
\v\f7\fs24\insrsid5201950 HIDM_PROPERTIES}{\f7\fs24\insrsid5201950  command for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn09.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_VIEW_SYS_INFO}{\f7\fs24\insrsid5201950 \tab Displays information about the system.  See the }{\f7\fs24\uldb\insrsid5201950 System Information}{\v\f7\fs24\insrsid5201950 
HIDM_VIEW_SYS_INFO}{\f7\fs24\insrsid5201950  command for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn10.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_CONFIGURE_SEARCH_ORDER}{\f7\fs24\insrsid5201950 \tab Configures the search order used when locating dependent modules.  See the }{\f7\fs24\uldb\insrsid5201950 
Configure Search Order}{\v\f7\fs24\insrsid5201950 HIDM_CONFIGURE_SEARCH_ORDER}{\f7\fs24\insrsid5201950  command for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn11.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_EXECUTE}{\f7\fs24\insrsid5201950 \tab Starts profiling the current }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{
\f7\fs24\insrsid5201950 .  See the }{\f7\fs24\uldb\insrsid5201950 Start Profiling Command}{\v\f7\fs24\insrsid5201950 HIDM_EXECUTE}{\f7\fs24\insrsid5201950  for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn12.bmp\}}{\v\f7\fs24\insrsid5201950 HIDM_TERMINATE}{\f7\fs24\insrsid5201950 \tab Stops profiling the current }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{
\f7\fs24\insrsid5201950 .  See the }{\f7\fs24\uldb\insrsid5201950 Stop Profiling Command}{\v\f7\fs24\insrsid5201950 HIDM_TERMINATE}{\f7\fs24\insrsid5201950  for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn13.bmp\}}{\v\f7\fs24\insrsid5201950 HID_WINDOW_CASCADE}{\f7\fs24\insrsid5201950 \tab Arranges windows in an overlapped fashion.  See the }{\f7\fs24\uldb\insrsid5201950 Cascade}{\v\f7\fs24\insrsid5201950 
HID_WINDOW_CASCADE}{\f7\fs24\insrsid5201950  command for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn14.bmp\}}{\v\f7\fs24\insrsid5201950 HID_WINDOW_TILE_HORZ}{\f7\fs24\insrsid5201950 \tab Arranges windows as non-overlapping horizontal tiles.  See the }{\f7\fs24\uldb\insrsid5201950 Tile Horizontally}{
\v\f7\fs24\insrsid5201950  HID_WINDOW_TILE_HORZ}{\f7\fs24\insrsid5201950  command for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn15.bmp\}}{\v\f7\fs24\insrsid5201950 HID_WINDOW_TILE_VERT}{\f7\fs24\insrsid5201950 \tab Arranges windows as non-overlapping vertical tiles.  See the }{\f7\fs24\uldb\insrsid5201950 Tile Vertically}{
\v\f7\fs24\insrsid5201950 HID_WINDOW_TILE_VERT}{\f7\fs24\insrsid5201950  command for more information.
\par }{\f7\fs24\uldb\insrsid5201950 \{bmct btn16.bmp\}}{\v\f7\fs24\insrsid5201950 HID_CONTEXT_HELP}{\f7\fs24\insrsid5201950 \tab Enters context help mode.  See the }{\f7\fs24\uldb\insrsid5201950 Context Help}{\v\f7\fs24\insrsid5201950 HID_CONTEXT_HELP}{
\f7\fs24\insrsid5201950  command for more information.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # AFX_HIDW_STATUS_BAR}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Status Bar}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Status Bar}}}{\fs32\insrsid5201950 Status Bar
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par \{bmlt statbar.bmp\}
\par 
\par The status bar is displayed at the bottom of Dependency Walker\rquote s main window.  To display or hide the status bar, use the }{\f7\fs24\uldb\insrsid5201950 Status Bar}{\v\f7\fs24\insrsid5201950 HID_VIEW_STATUS_BAR}{\f7\fs24\insrsid5201950 
 option from the }{\f7\fs24\uldb\insrsid5201950 View menu}{\v\f7\fs24\insrsid5201950 view_menu}{\f7\fs24\insrsid5201950 .
\par 
\par The status bar describes actions of menu items as you use the arrow keys or mouse to navigate through menus.  This area similarly shows messages that describe the actions of }{\f7\fs24\uldb\insrsid5201950 Toolbar}{\v\f7\fs24\insrsid5201950 
AFX_HIDW_TOOLBAR}{\f7\fs24\insrsid5201950  buttons as you depress them and before releasing them.  If after viewing the description of the toolbar button command you wi
sh not to execute the command, then move the mouse pointer off the toolbar button and release the mouse button.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # HID_HT_CAPTION}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Title Bar}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Title Bar}}}{\fs32\insrsid5201950 Title Bar
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par \{bmlt titlebar.bmp\}
\par 
\par }\pard \ql \li0\ri0\widctlpar\tx360\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 The title bar is located along the top of a window.  For Dependency Walker\rquote 
s main window (shown above), it contains the name of the application and the active module session name if a module has been loaded.  For a }{\f7\fs24\uldb\insrsid5201950 Module Session Window}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{
\f7\fs24\insrsid5201950 , it will contain the name of the session module.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\widctlpar\tx360\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 To move a window, drag the title bar.  To resize a window, drag the size bars at the corners or edges of the window.
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 
\par }\pard \ql \li0\ri0\widctlpar\tx360\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 Dependency Walker\rquote s main window\rquote s title bar contains the following elements:
\par }\pard \ql \fi-360\li720\ri0\sb80\widctlpar\tx720\faauto\rin0\lin720\itap0 {\f7\fs24\insrsid5201950 \{bmct bullet1.bmp\}\tab System Menu button.  This is actually displayed as a small Dependency Walker icon on left size of the Title Bar
\par \{bmct bullet1.bmp\}\tab Name of the application, "Dependency Walker"
\par \{bmct bullet1.bmp\}\tab Name of the active }{\f7\fs24\uldb\insrsid5201950 Module Session}{\v\f7\fs24\insrsid5201950 HIDR_DEPENDTYPE}{\f7\fs24\insrsid5201950 ; for example, "notepad.exe"
\par \{bmct bullet1.bmp\}\tab Minimize button
\par \{bmct bullet1.bmp\}\tab Restore/Maximize button
\par \{bmct bullet1.bmp\}\tab Close button
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 # scrollbars}}K{\footnote \pard\plain 
\ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 K Scroll Bars}}${\footnote \pard\plain \ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 
\f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\insrsid5201950 $ Scroll Bars}}}{\fs32\insrsid5201950 Scroll Bars
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Scroll bars are displayed at the right and bottom edges of each view.  The scroll boxes inside the scroll bars indicate your vertical and horizontal location in the document.  You can use the mouse to scroll to other parts of the view.
\par }\pard\plain \s1\ql \li0\ri0\sb120\nowidctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrb\brdrs\brdrw15\brsp20 \faauto\outlinelevel0\rin0\lin0\rtlgutter\itap0 \b\f7\fs28\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\fs32\insrsid5201950 \page }{
\fs24\insrsid5201950 #{\footnote \pard\plain \s16\ql \li0\ri0\sl240\slmult0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\insrsid5201950 # no_help}}}{\fs32\insrsid5201950 No Help Available
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \f6\fs20\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f7\fs24\insrsid5201950 
\par Sorry, there is no help available for this area or topic.
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\f7\fs24\insrsid5201950 \page 
\par }}